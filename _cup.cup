// -*- Java -*- File generated by the BNF Converter (bnfc 2.9.4.1).

// Parser definition for use with Java Cup
package lang;

action code {:
public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}
:}
parser code {:
  public lang.Absyn.Program pProgram() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (lang.Absyn.Program) res.value;
  }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}

:}

nonterminal lang.Absyn.Program Program;
nonterminal lang.Absyn.Stm Stm;
nonterminal lang.Absyn.Item Item;
nonterminal lang.Absyn.ListItem ListItem;
nonterminal lang.Absyn.Stm_Initialise Stm_Initialise;
nonterminal lang.Absyn.Stm_Declare Stm_Declare;
nonterminal lang.Absyn.Stm_Assign Stm_Assign;
nonterminal lang.Absyn.Stm_IncrmDecrm Stm_IncrmDecrm;
nonterminal lang.Absyn.Stm_Loop Stm_Loop;
nonterminal lang.Absyn.If_Stm If_Stm;
nonterminal lang.Absyn.Arg Arg;
nonterminal lang.Absyn.ListArg ListArg;
nonterminal lang.Absyn.ListStm ListStm;
nonterminal lang.Absyn.Exp Exp15;
nonterminal lang.Absyn.ListIdent ListIdent;
nonterminal lang.Absyn.Exp Exp16;
nonterminal lang.Absyn.Exp Exp13;
nonterminal lang.Absyn.Exp Exp12;
nonterminal lang.Absyn.Exp Exp11;
nonterminal lang.Absyn.Exp Exp9;
nonterminal lang.Absyn.Exp Exp8;
nonterminal lang.Absyn.Exp Exp4;
nonterminal lang.Absyn.Exp Exp3;
nonterminal lang.Absyn.Assign_Op Assign_Op;
nonterminal lang.Absyn.IncrmDecrm_Op IncrmDecrm_Op;
nonterminal lang.Absyn.Exp Exp;
nonterminal lang.Absyn.Exp Exp1;
nonterminal lang.Absyn.Exp Exp2;
nonterminal lang.Absyn.Exp Exp5;
nonterminal lang.Absyn.Exp Exp6;
nonterminal lang.Absyn.Exp Exp7;
nonterminal lang.Absyn.Exp Exp10;
nonterminal lang.Absyn.Exp Exp14;
nonterminal lang.Absyn.ListExp ListExp;
nonterminal lang.Absyn.FuncType FuncType;
nonterminal lang.Absyn.VarType VarType;
nonterminal lang.Absyn.TypeCast TypeCast;

terminal _SYMB_0;    //   :
terminal _SYMB_1;    //   (
terminal _SYMB_2;    //   )
terminal _SYMB_3;    //   {
terminal _SYMB_4;    //   }
terminal _SYMB_5;    //   ,
terminal _SYMB_6;    //   .
terminal _SYMB_7;    //   [
terminal _SYMB_8;    //   ]
terminal _SYMB_9;    //   =
terminal _SYMB_10;    //   -
terminal _SYMB_11;    //   **
terminal _SYMB_12;    //   *
terminal _SYMB_13;    //   /
terminal _SYMB_14;    //   %
terminal _SYMB_15;    //   +
terminal _SYMB_16;    //   <
terminal _SYMB_17;    //   >
terminal _SYMB_18;    //   <=
terminal _SYMB_19;    //   >=
terminal _SYMB_20;    //   ==
terminal _SYMB_21;    //   !=
terminal _SYMB_22;    //   *=
terminal _SYMB_23;    //   /=
terminal _SYMB_24;    //   %=
terminal _SYMB_25;    //   +=
terminal _SYMB_26;    //   -=
terminal _SYMB_27;    //   ++
terminal _SYMB_28;    //   --
terminal _SYMB_29;    //   AND
terminal _SYMB_30;    //   OR
terminal _SYMB_31;    //   append
terminal _SYMB_32;    //   auto
terminal _SYMB_33;    //   bool
terminal _SYMB_34;    //   break
terminal _SYMB_35;    //   char
terminal _SYMB_36;    //   class
terminal _SYMB_37;    //   const
terminal _SYMB_38;    //   constructor
terminal _SYMB_39;    //   continue
terminal _SYMB_40;    //   double
terminal _SYMB_41;    //   else
terminal _SYMB_42;    //   false
terminal _SYMB_43;    //   filter
terminal _SYMB_44;    //   func
terminal _SYMB_45;    //   function
terminal _SYMB_46;    //   functional
terminal _SYMB_47;    //   if
terminal _SYMB_48;    //   in
terminal _SYMB_49;    //   inherits
terminal _SYMB_50;    //   input
terminal _SYMB_51;    //   int
terminal _SYMB_52;    //   lambda
terminal _SYMB_53;    //   length
terminal _SYMB_54;    //   map
terminal _SYMB_55;    //   new
terminal _SYMB_56;    //   object
terminal _SYMB_57;    //   paradigm
terminal _SYMB_58;    //   print
terminal _SYMB_59;    //   randomInt
terminal _SYMB_60;    //   range
terminal _SYMB_61;    //   reduce
terminal _SYMB_62;    //   remove
terminal _SYMB_63;    //   repeat
terminal _SYMB_64;    //   return
terminal _SYMB_65;    //   size
terminal _SYMB_66;    //   string
terminal _SYMB_67;    //   toBool
terminal _SYMB_68;    //   toChar
terminal _SYMB_69;    //   toDouble
terminal _SYMB_70;    //   toInt
terminal _SYMB_71;    //   toString
terminal _SYMB_72;    //   true
terminal _SYMB_73;    //   void
terminal _SYMB_74;    //   while
terminal _SYMB_75;    //   with
terminal _SYMB_76;    //   without

terminal String _STRING_;
terminal Character _CHAR_;
terminal Integer _INTEGER_;
terminal Double _DOUBLE_;
terminal String _IDENT_;



start with Program;


Program ::= ListStm:p_1  {: RESULT = new lang.Absyn.PStms(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.PStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PStms)RESULT).line_num = -1;
  ((lang.Absyn.PStms)RESULT).col_num = -1;
  ((lang.Absyn.PStms)RESULT).offset = -1;
} :}
  | _SYMB_57:p_1 _SYMB_0:p_2 _SYMB_46:p_3 ListStm:p_4  {: RESULT = new lang.Absyn.PFunctionalModeStms(p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = -1;
} :}
;
Stm ::= _SYMB_45:p_1 FuncType:p_2 _IDENT_:p_3 _SYMB_1:p_4 ListArg:p_5 _SYMB_2:p_6 _SYMB_3:p_7 ListStm:p_8 _SYMB_4:p_9  {: RESULT = new lang.Absyn.DefFun(p_2,p_3,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefFun)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefFun)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefFun)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefFun)RESULT).line_num = -1;
  ((lang.Absyn.DefFun)RESULT).col_num = -1;
  ((lang.Absyn.DefFun)RESULT).offset = -1;
} :}
  | _SYMB_38:p_1 _IDENT_:p_2 _SYMB_1:p_3 ListArg:p_4 _SYMB_2:p_5 _SYMB_3:p_6 ListStm:p_7 _SYMB_4:p_8  {: RESULT = new lang.Absyn.DefConstructor(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefConstructor)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefConstructor)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefConstructor)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefConstructor)RESULT).line_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).col_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).offset = -1;
} :}
  | _SYMB_36:p_1 _IDENT_:p_2 _SYMB_3:p_3 ListStm:p_4 _SYMB_4:p_5  {: RESULT = new lang.Absyn.DefClass(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClass)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClass)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClass)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClass)RESULT).line_num = -1;
  ((lang.Absyn.DefClass)RESULT).col_num = -1;
  ((lang.Absyn.DefClass)RESULT).offset = -1;
} :}
  | _SYMB_36:p_1 _IDENT_:p_2 _SYMB_49:p_3 _IDENT_:p_4 _SYMB_3:p_5 ListStm:p_6 _SYMB_4:p_7  {: RESULT = new lang.Absyn.DefClassInherits(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClassInherits)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClassInherits)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).col_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).offset = -1;
} :}
  | _SYMB_58:p_1 Exp:p_2  {: RESULT = new lang.Absyn.SPrint(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPrint)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPrint)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPrint)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPrint)RESULT).line_num = -1;
  ((lang.Absyn.SPrint)RESULT).col_num = -1;
  ((lang.Absyn.SPrint)RESULT).offset = -1;
} :}
  | _SYMB_34:p_1  {: RESULT = new lang.Absyn.SBreak();
((lang.Absyn.SBreak)RESULT).line_num = -1;
((lang.Absyn.SBreak)RESULT).col_num = -1;
((lang.Absyn.SBreak)RESULT).offset = -1; :}
  | _SYMB_39:p_1  {: RESULT = new lang.Absyn.SContinue();
((lang.Absyn.SContinue)RESULT).line_num = -1;
((lang.Absyn.SContinue)RESULT).col_num = -1;
((lang.Absyn.SContinue)RESULT).offset = -1; :}
  | Stm_Initialise:p_1  {: RESULT = new lang.Absyn.InitialiseStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.InitialiseStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.InitialiseStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).col_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).offset = -1;
} :}
  | Stm_Declare:p_1  {: RESULT = new lang.Absyn.DeclareStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.DeclareStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DeclareStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DeclareStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DeclareStm)RESULT).line_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).col_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).offset = -1;
} :}
  | Stm_Assign:p_1  {: RESULT = new lang.Absyn.AssignStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.AssignStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.AssignStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.AssignStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.AssignStm)RESULT).line_num = -1;
  ((lang.Absyn.AssignStm)RESULT).col_num = -1;
  ((lang.Absyn.AssignStm)RESULT).offset = -1;
} :}
  | Stm_Loop:p_1  {: RESULT = new lang.Absyn.LoopStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LoopStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LoopStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LoopStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LoopStm)RESULT).line_num = -1;
  ((lang.Absyn.LoopStm)RESULT).col_num = -1;
  ((lang.Absyn.LoopStm)RESULT).offset = -1;
} :}
  | Stm_IncrmDecrm:p_1  {: RESULT = new lang.Absyn.IncrnDecrmStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = -1;
} :}
  | Exp16:p_1  {: RESULT = new lang.Absyn.SCall(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCall)RESULT).line_num = -1;
  ((lang.Absyn.SCall)RESULT).col_num = -1;
  ((lang.Absyn.SCall)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _SYMB_31:p_3 _SYMB_1:p_4 Exp:p_5 _SYMB_2:p_6  {: RESULT = new lang.Absyn.SAppend(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAppend)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAppend)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAppend)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAppend)RESULT).line_num = -1;
  ((lang.Absyn.SAppend)RESULT).col_num = -1;
  ((lang.Absyn.SAppend)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _SYMB_62:p_3 _SYMB_7:p_4 Exp:p_5 _SYMB_8:p_6  {: RESULT = new lang.Absyn.SRemove(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SRemove)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SRemove)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SRemove)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SRemove)RESULT).line_num = -1;
  ((lang.Absyn.SRemove)RESULT).col_num = -1;
  ((lang.Absyn.SRemove)RESULT).offset = -1;
} :}
  | _SYMB_64:p_1 Exp:p_2  {: RESULT = new lang.Absyn.SReturn(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SReturn)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SReturn)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SReturn)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SReturn)RESULT).line_num = -1;
  ((lang.Absyn.SReturn)RESULT).col_num = -1;
  ((lang.Absyn.SReturn)RESULT).offset = -1;
} :}
  | _SYMB_56:p_1 _IDENT_:p_2 _SYMB_9:p_3 _SYMB_55:p_4 _IDENT_:p_5 _SYMB_1:p_6 ListExp:p_7 _SYMB_2:p_8  {: RESULT = new lang.Absyn.SObjInit(p_2,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SObjInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SObjInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SObjInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SObjInit)RESULT).line_num = -1;
  ((lang.Absyn.SObjInit)RESULT).col_num = -1;
  ((lang.Absyn.SObjInit)RESULT).offset = -1;
} :}
  | _SYMB_37:p_1 VarType:p_2 _IDENT_:p_3 _SYMB_9:p_4 Exp:p_5  {: RESULT = new lang.Absyn.SConstInit(p_2,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SConstInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SConstInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SConstInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SConstInit)RESULT).line_num = -1;
  ((lang.Absyn.SConstInit)RESULT).col_num = -1;
  ((lang.Absyn.SConstInit)RESULT).offset = -1;
} :}
  | If_Stm:p_1  {: RESULT = new lang.Absyn.IfS(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IfS)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IfS)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IfS)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IfS)RESULT).line_num = -1;
  ((lang.Absyn.IfS)RESULT).col_num = -1;
  ((lang.Absyn.IfS)RESULT).offset = -1;
} :}
  | _SYMB_3:p_1 ListStm:p_2 _SYMB_4:p_3  {: RESULT = new lang.Absyn.Block(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.Block)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.Block)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.Block)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.Block)RESULT).line_num = -1;
  ((lang.Absyn.Block)RESULT).col_num = -1;
  ((lang.Absyn.Block)RESULT).offset = -1;
} :}
;
Item ::= Exp:p_1  {: RESULT = new lang.Absyn.LstItem(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LstItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LstItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LstItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LstItem)RESULT).line_num = -1;
  ((lang.Absyn.LstItem)RESULT).col_num = -1;
  ((lang.Absyn.LstItem)RESULT).offset = -1;
} :}
;
ListItem ::=  /* empty */  {: RESULT = new lang.Absyn.ListItem(); :}
  | Item:p_1  {: RESULT = new lang.Absyn.ListItem(); RESULT.addLast(p_1); :}
  | Item:p_1 _SYMB_5:p_2 ListItem:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
Stm_Initialise ::= VarType:p_1 _IDENT_:p_2 _SYMB_9:p_3 Exp:p_4  {: RESULT = new lang.Absyn.SInit(p_1,p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SInit)RESULT).line_num = -1;
  ((lang.Absyn.SInit)RESULT).col_num = -1;
  ((lang.Absyn.SInit)RESULT).offset = -1;
} :}
;
Stm_Declare ::= VarType:p_1 _IDENT_:p_2  {: RESULT = new lang.Absyn.SDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SDecl)RESULT).line_num = -1;
  ((lang.Absyn.SDecl)RESULT).col_num = -1;
  ((lang.Absyn.SDecl)RESULT).offset = -1;
} :}
;
Stm_Assign ::= _IDENT_:p_1 Assign_Op:p_2 Exp:p_3  {: RESULT = new lang.Absyn.SAssign(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAssign)RESULT).line_num = -1;
  ((lang.Absyn.SAssign)RESULT).col_num = -1;
  ((lang.Absyn.SAssign)RESULT).offset = -1;
} :}
;
Stm_IncrmDecrm ::= _IDENT_:p_1 IncrmDecrm_Op:p_2  {: RESULT = new lang.Absyn.SIncrmDecrm(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = -1;
} :}
;
Stm_Loop ::= _SYMB_74:p_1 Exp:p_2 _SYMB_3:p_3 ListStm:p_4 _SYMB_4:p_5  {: RESULT = new lang.Absyn.SWhile(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SWhile)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SWhile)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SWhile)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SWhile)RESULT).line_num = -1;
  ((lang.Absyn.SWhile)RESULT).col_num = -1;
  ((lang.Absyn.SWhile)RESULT).offset = -1;
} :}
  | _SYMB_63:p_1 _IDENT_:p_2 _SYMB_48:p_3 _IDENT_:p_4 _SYMB_3:p_5 ListStm:p_6 _SYMB_4:p_7  {: RESULT = new lang.Absyn.SPLoopIdent(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).offset = -1;
} :}
  | _SYMB_63:p_1 _IDENT_:p_2 _SYMB_48:p_3 _SYMB_7:p_4 ListItem:p_5 _SYMB_8:p_6 _SYMB_3:p_7 ListStm:p_8 _SYMB_4:p_9  {: RESULT = new lang.Absyn.SPLoopList(p_2,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopList)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).offset = -1;
} :}
  | _SYMB_63:p_1 _IDENT_:p_2 _SYMB_48:p_3 _SYMB_60:p_4 _SYMB_1:p_5 Exp:p_6 _SYMB_2:p_7 _SYMB_3:p_8 ListStm:p_9 _SYMB_4:p_10  {: RESULT = new lang.Absyn.SPLoopRangeStart(p_2,p_6,p_9);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_9xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = -1;
} :}
  | _SYMB_63:p_1 _IDENT_:p_2 _SYMB_48:p_3 _SYMB_60:p_4 _SYMB_1:p_5 Exp:p_6 _SYMB_5:p_7 Exp:p_8 _SYMB_2:p_9 _SYMB_3:p_10 ListStm:p_11 _SYMB_4:p_12  {: RESULT = new lang.Absyn.SPLoopRangeStartStop(p_2,p_6,p_8,p_11);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_11xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = -1;
} :}
  | _SYMB_63:p_1 _IDENT_:p_2 _SYMB_48:p_3 _SYMB_60:p_4 _SYMB_1:p_5 Exp:p_6 _SYMB_5:p_7 Exp:p_8 _SYMB_5:p_9 Exp:p_10 _SYMB_2:p_11 _SYMB_3:p_12 ListStm:p_13 _SYMB_4:p_14  {: RESULT = new lang.Absyn.SPLoopRangeStartStopEnd(p_2,p_6,p_8,p_10,p_13);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_10xleft,p_13xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = -1;
} :}
  | _SYMB_63:p_1 Stm_Initialise:p_2 _SYMB_5:p_3 Exp:p_4 _SYMB_5:p_5 Stm_IncrmDecrm:p_6 _SYMB_3:p_7 ListStm:p_8 _SYMB_4:p_9  {: RESULT = new lang.Absyn.SCLoop(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoop)RESULT).line_num = -1;
  ((lang.Absyn.SCLoop)RESULT).col_num = -1;
  ((lang.Absyn.SCLoop)RESULT).offset = -1;
} :}
  | _SYMB_63:p_1 Stm_Initialise:p_2 _SYMB_5:p_3 Exp:p_4 _SYMB_5:p_5 Stm_Assign:p_6 _SYMB_3:p_7 ListStm:p_8 _SYMB_4:p_9  {: RESULT = new lang.Absyn.SCLoopAssign(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoopAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).offset = -1;
} :}
;
If_Stm ::= _SYMB_47:p_1 Exp:p_2 _SYMB_3:p_3 ListStm:p_4 _SYMB_4:p_5  {: RESULT = new lang.Absyn.SIf(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIf)RESULT).line_num = -1;
  ((lang.Absyn.SIf)RESULT).col_num = -1;
  ((lang.Absyn.SIf)RESULT).offset = -1;
} :}
  | _SYMB_47:p_1 Exp:p_2 _SYMB_3:p_3 ListStm:p_4 _SYMB_4:p_5 _SYMB_41:p_6 _SYMB_3:p_7 ListStm:p_8 _SYMB_4:p_9  {: RESULT = new lang.Absyn.SIfElse(p_2,p_4,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElse)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElse)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElse)RESULT).line_num = -1;
  ((lang.Absyn.SIfElse)RESULT).col_num = -1;
  ((lang.Absyn.SIfElse)RESULT).offset = -1;
} :}
  | _SYMB_47:p_1 Exp:p_2 _SYMB_3:p_3 ListStm:p_4 _SYMB_4:p_5 _SYMB_41:p_6 If_Stm:p_7  {: RESULT = new lang.Absyn.SIfElseIf(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElseIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElseIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).col_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).offset = -1;
} :}
;
Arg ::= VarType:p_1 _IDENT_:p_2  {: RESULT = new lang.Absyn.ArgDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ArgDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ArgDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ArgDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ArgDecl)RESULT).line_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).col_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).offset = -1;
} :}
;
ListArg ::=  /* empty */  {: RESULT = new lang.Absyn.ListArg(); :}
  | Arg:p_1  {: RESULT = new lang.Absyn.ListArg(); RESULT.addLast(p_1); :}
  | Arg:p_1 _SYMB_5:p_2 ListArg:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
ListStm ::=  /* empty */  {: RESULT = new lang.Absyn.ListStm(); :}
  | ListStm:p_1 Stm:p_2  {: RESULT = p_1; p_1.addLast(p_2); :}
;
Exp15 ::= _INTEGER_:p_1  {: RESULT = new lang.Absyn.EInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EInt)RESULT).line_num = -1;
  ((lang.Absyn.EInt)RESULT).col_num = -1;
  ((lang.Absyn.EInt)RESULT).offset = -1;
} :}
  | _SYMB_10:p_1 _INTEGER_:p_2  {: RESULT = new lang.Absyn.ENegInt(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegInt)RESULT).line_num = -1;
  ((lang.Absyn.ENegInt)RESULT).col_num = -1;
  ((lang.Absyn.ENegInt)RESULT).offset = -1;
} :}
  | _CHAR_:p_1  {: RESULT = new lang.Absyn.EChar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EChar)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EChar)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EChar)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EChar)RESULT).line_num = -1;
  ((lang.Absyn.EChar)RESULT).col_num = -1;
  ((lang.Absyn.EChar)RESULT).offset = -1;
} :}
  | _DOUBLE_:p_1  {: RESULT = new lang.Absyn.EDouble(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDouble)RESULT).line_num = -1;
  ((lang.Absyn.EDouble)RESULT).col_num = -1;
  ((lang.Absyn.EDouble)RESULT).offset = -1;
} :}
  | _SYMB_10:p_1 _DOUBLE_:p_2  {: RESULT = new lang.Absyn.ENegDouble(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegDouble)RESULT).line_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).col_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).offset = -1;
} :}
  | _STRING_:p_1  {: RESULT = new lang.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EString)RESULT).line_num = -1;
  ((lang.Absyn.EString)RESULT).col_num = -1;
  ((lang.Absyn.EString)RESULT).offset = -1;
} :}
  | _SYMB_72:p_1  {: RESULT = new lang.Absyn.ETrue();
((lang.Absyn.ETrue)RESULT).line_num = -1;
((lang.Absyn.ETrue)RESULT).col_num = -1;
((lang.Absyn.ETrue)RESULT).offset = -1; :}
  | _SYMB_42:p_1  {: RESULT = new lang.Absyn.EFalse();
((lang.Absyn.EFalse)RESULT).line_num = -1;
((lang.Absyn.EFalse)RESULT).col_num = -1;
((lang.Absyn.EFalse)RESULT).offset = -1; :}
  | _IDENT_:p_1  {: RESULT = new lang.Absyn.EId(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EId)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EId)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EId)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EId)RESULT).line_num = -1;
  ((lang.Absyn.EId)RESULT).col_num = -1;
  ((lang.Absyn.EId)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_7:p_2 Exp:p_3 _SYMB_8:p_4  {: RESULT = new lang.Absyn.EListItem(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListItem)RESULT).line_num = -1;
  ((lang.Absyn.EListItem)RESULT).col_num = -1;
  ((lang.Absyn.EListItem)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _SYMB_75:p_3 _SYMB_1:p_4 Exp:p_5 _SYMB_2:p_6  {: RESULT = new lang.Absyn.EListWith(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListWith)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListWith)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListWith)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListWith)RESULT).line_num = -1;
  ((lang.Absyn.EListWith)RESULT).col_num = -1;
  ((lang.Absyn.EListWith)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _SYMB_76:p_3 _SYMB_7:p_4 Exp:p_5 _SYMB_8:p_6  {: RESULT = new lang.Absyn.EListWithout(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListWithout)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListWithout)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListWithout)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListWithout)RESULT).line_num = -1;
  ((lang.Absyn.EListWithout)RESULT).col_num = -1;
  ((lang.Absyn.EListWithout)RESULT).offset = -1;
} :}
  | _SYMB_7:p_1 ListItem:p_2 _SYMB_8:p_3  {: RESULT = new lang.Absyn.EList(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.EList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EList)RESULT).line_num = -1;
  ((lang.Absyn.EList)RESULT).col_num = -1;
  ((lang.Absyn.EList)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _SYMB_65:p_3  {: RESULT = new lang.Absyn.EListSize(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListSize)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListSize)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListSize)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListSize)RESULT).line_num = -1;
  ((lang.Absyn.EListSize)RESULT).col_num = -1;
  ((lang.Absyn.EListSize)RESULT).offset = -1;
} :}
  | _SYMB_50:p_1 _SYMB_1:p_2 _SYMB_2:p_3  {: RESULT = new lang.Absyn.EInput();
((lang.Absyn.EInput)RESULT).line_num = -1;
((lang.Absyn.EInput)RESULT).col_num = -1;
((lang.Absyn.EInput)RESULT).offset = -1; :}
  | _IDENT_:p_1 _SYMB_6:p_2 _SYMB_53:p_3  {: RESULT = new lang.Absyn.EStrLength(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EStrLength)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EStrLength)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EStrLength)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EStrLength)RESULT).line_num = -1;
  ((lang.Absyn.EStrLength)RESULT).col_num = -1;
  ((lang.Absyn.EStrLength)RESULT).offset = -1;
} :}
  | _SYMB_59:p_1 _SYMB_1:p_2 _INTEGER_:p_3 _SYMB_2:p_4  {: RESULT = new lang.Absyn.ERand(p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ERand)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ERand)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ERand)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ERand)RESULT).line_num = -1;
  ((lang.Absyn.ERand)RESULT).col_num = -1;
  ((lang.Absyn.ERand)RESULT).offset = -1;
} :}
  | Exp16:p_1  {: RESULT = p_1; :}
;
ListIdent ::=  /* empty */  {: RESULT = new lang.Absyn.ListIdent(); :}
  | _IDENT_:p_1  {: RESULT = new lang.Absyn.ListIdent(); RESULT.addLast(p_1); :}
  | _IDENT_:p_1 _SYMB_5:p_2 ListIdent:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
Exp16 ::= _IDENT_:p_1 _SYMB_6:p_2 TypeCast:p_3  {: RESULT = new lang.Absyn.ETypeCast(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ETypeCast)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ETypeCast)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ETypeCast)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ETypeCast)RESULT).line_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).col_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).offset = -1;
} :}
  | _SYMB_52:p_1 _SYMB_1:p_2 ListArg:p_3 _SYMB_2:p_4 _SYMB_3:p_5 ListStm:p_6 _SYMB_4:p_7  {: RESULT = new lang.Absyn.ELambda(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELambda)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELambda)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELambda)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELambda)RESULT).line_num = -1;
  ((lang.Absyn.ELambda)RESULT).col_num = -1;
  ((lang.Absyn.ELambda)RESULT).offset = -1;
} :}
  | _SYMB_54:p_1 _SYMB_1:p_2 Exp:p_3 _SYMB_5:p_4 _IDENT_:p_5 _SYMB_2:p_6  {: RESULT = new lang.Absyn.EMapIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapIdent)RESULT).line_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).col_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).offset = -1;
} :}
  | _SYMB_54:p_1 _SYMB_1:p_2 Exp:p_3 _SYMB_5:p_4 _SYMB_7:p_5 ListItem:p_6 _SYMB_8:p_7 _SYMB_2:p_8  {: RESULT = new lang.Absyn.EMapList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapList)RESULT).line_num = -1;
  ((lang.Absyn.EMapList)RESULT).col_num = -1;
  ((lang.Absyn.EMapList)RESULT).offset = -1;
} :}
  | _SYMB_43:p_1 _SYMB_1:p_2 Exp:p_3 _SYMB_5:p_4 _IDENT_:p_5 _SYMB_2:p_6  {: RESULT = new lang.Absyn.EFilterIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).col_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).offset = -1;
} :}
  | _SYMB_43:p_1 _SYMB_1:p_2 Exp:p_3 _SYMB_5:p_4 _SYMB_7:p_5 ListItem:p_6 _SYMB_8:p_7 _SYMB_2:p_8  {: RESULT = new lang.Absyn.EFilterList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterList)RESULT).line_num = -1;
  ((lang.Absyn.EFilterList)RESULT).col_num = -1;
  ((lang.Absyn.EFilterList)RESULT).offset = -1;
} :}
  | _SYMB_61:p_1 _SYMB_1:p_2 Exp:p_3 _SYMB_5:p_4 _IDENT_:p_5 _SYMB_2:p_6  {: RESULT = new lang.Absyn.EReduceIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).col_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).offset = -1;
} :}
  | _SYMB_61:p_1 _SYMB_1:p_2 Exp:p_3 _SYMB_5:p_4 _SYMB_7:p_5 ListItem:p_6 _SYMB_8:p_7 _SYMB_2:p_8  {: RESULT = new lang.Absyn.EReduceList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceList)RESULT).line_num = -1;
  ((lang.Absyn.EReduceList)RESULT).col_num = -1;
  ((lang.Absyn.EReduceList)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _IDENT_:p_3  {: RESULT = new lang.Absyn.ESelect(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelect)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelect)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelect)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelect)RESULT).line_num = -1;
  ((lang.Absyn.ESelect)RESULT).col_num = -1;
  ((lang.Absyn.ESelect)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _IDENT_:p_3 _SYMB_7:p_4 Exp:p_5 _SYMB_8:p_6  {: RESULT = new lang.Absyn.ESelectListItem(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelectListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelectListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).col_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_1:p_2 ListExp:p_3 _SYMB_2:p_4  {: RESULT = new lang.Absyn.ECall(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ECall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ECall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ECall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ECall)RESULT).line_num = -1;
  ((lang.Absyn.ECall)RESULT).col_num = -1;
  ((lang.Absyn.ECall)RESULT).offset = -1;
} :}
  | _IDENT_:p_1 _SYMB_6:p_2 _IDENT_:p_3 _SYMB_1:p_4 ListExp:p_5 _SYMB_2:p_6  {: RESULT = new lang.Absyn.EObjCall(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EObjCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EObjCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EObjCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EObjCall)RESULT).line_num = -1;
  ((lang.Absyn.EObjCall)RESULT).col_num = -1;
  ((lang.Absyn.EObjCall)RESULT).offset = -1;
} :}
  | _SYMB_1:p_1 Exp:p_2 _SYMB_2:p_3  {: RESULT = p_2; :}
;
Exp13 ::= Exp13:p_1 _SYMB_11:p_2 Exp14:p_3  {: RESULT = new lang.Absyn.EPow(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EPow)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EPow)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EPow)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EPow)RESULT).line_num = -1;
  ((lang.Absyn.EPow)RESULT).col_num = -1;
  ((lang.Absyn.EPow)RESULT).offset = -1;
} :}
  | Exp14:p_1  {: RESULT = p_1; :}
;
Exp12 ::= Exp12:p_1 _SYMB_12:p_2 Exp13:p_3  {: RESULT = new lang.Absyn.EMul(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMul)RESULT).line_num = -1;
  ((lang.Absyn.EMul)RESULT).col_num = -1;
  ((lang.Absyn.EMul)RESULT).offset = -1;
} :}
  | Exp12:p_1 _SYMB_13:p_2 Exp13:p_3  {: RESULT = new lang.Absyn.EDiv(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDiv)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDiv)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDiv)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDiv)RESULT).line_num = -1;
  ((lang.Absyn.EDiv)RESULT).col_num = -1;
  ((lang.Absyn.EDiv)RESULT).offset = -1;
} :}
  | Exp12:p_1 _SYMB_14:p_2 Exp13:p_3  {: RESULT = new lang.Absyn.EMod(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMod)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMod)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMod)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMod)RESULT).line_num = -1;
  ((lang.Absyn.EMod)RESULT).col_num = -1;
  ((lang.Absyn.EMod)RESULT).offset = -1;
} :}
  | Exp13:p_1  {: RESULT = p_1; :}
;
Exp11 ::= Exp11:p_1 _SYMB_15:p_2 Exp12:p_3  {: RESULT = new lang.Absyn.EAdd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAdd)RESULT).line_num = -1;
  ((lang.Absyn.EAdd)RESULT).col_num = -1;
  ((lang.Absyn.EAdd)RESULT).offset = -1;
} :}
  | Exp11:p_1 _SYMB_10:p_2 Exp12:p_3  {: RESULT = new lang.Absyn.ESub(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESub)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESub)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESub)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESub)RESULT).line_num = -1;
  ((lang.Absyn.ESub)RESULT).col_num = -1;
  ((lang.Absyn.ESub)RESULT).offset = -1;
} :}
  | Exp12:p_1  {: RESULT = p_1; :}
;
Exp9 ::= Exp9:p_1 _SYMB_16:p_2 Exp10:p_3  {: RESULT = new lang.Absyn.ELt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELt)RESULT).line_num = -1;
  ((lang.Absyn.ELt)RESULT).col_num = -1;
  ((lang.Absyn.ELt)RESULT).offset = -1;
} :}
  | Exp9:p_1 _SYMB_17:p_2 Exp10:p_3  {: RESULT = new lang.Absyn.EGt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGt)RESULT).line_num = -1;
  ((lang.Absyn.EGt)RESULT).col_num = -1;
  ((lang.Absyn.EGt)RESULT).offset = -1;
} :}
  | Exp9:p_1 _SYMB_18:p_2 Exp10:p_3  {: RESULT = new lang.Absyn.ELEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELEq)RESULT).line_num = -1;
  ((lang.Absyn.ELEq)RESULT).col_num = -1;
  ((lang.Absyn.ELEq)RESULT).offset = -1;
} :}
  | Exp9:p_1 _SYMB_19:p_2 Exp10:p_3  {: RESULT = new lang.Absyn.EGEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGEq)RESULT).line_num = -1;
  ((lang.Absyn.EGEq)RESULT).col_num = -1;
  ((lang.Absyn.EGEq)RESULT).offset = -1;
} :}
  | Exp10:p_1  {: RESULT = p_1; :}
;
Exp8 ::= Exp8:p_1 _SYMB_20:p_2 Exp9:p_3  {: RESULT = new lang.Absyn.EEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EEq)RESULT).line_num = -1;
  ((lang.Absyn.EEq)RESULT).col_num = -1;
  ((lang.Absyn.EEq)RESULT).offset = -1;
} :}
  | Exp8:p_1 _SYMB_21:p_2 Exp9:p_3  {: RESULT = new lang.Absyn.ENEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENEq)RESULT).line_num = -1;
  ((lang.Absyn.ENEq)RESULT).col_num = -1;
  ((lang.Absyn.ENEq)RESULT).offset = -1;
} :}
  | Exp9:p_1  {: RESULT = p_1; :}
;
Exp4 ::= Exp4:p_1 _SYMB_29:p_2 Exp5:p_3  {: RESULT = new lang.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAnd)RESULT).line_num = -1;
  ((lang.Absyn.EAnd)RESULT).col_num = -1;
  ((lang.Absyn.EAnd)RESULT).offset = -1;
} :}
  | Exp5:p_1  {: RESULT = p_1; :}
;
Exp3 ::= Exp3:p_1 _SYMB_30:p_2 Exp4:p_3  {: RESULT = new lang.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EOr)RESULT).line_num = -1;
  ((lang.Absyn.EOr)RESULT).col_num = -1;
  ((lang.Absyn.EOr)RESULT).offset = -1;
} :}
  | Exp4:p_1  {: RESULT = p_1; :}
;
Assign_Op ::= _SYMB_9:p_1  {: RESULT = new lang.Absyn.Assign();
((lang.Absyn.Assign)RESULT).line_num = -1;
((lang.Absyn.Assign)RESULT).col_num = -1;
((lang.Absyn.Assign)RESULT).offset = -1; :}
  | _SYMB_22:p_1  {: RESULT = new lang.Absyn.AssignMul();
((lang.Absyn.AssignMul)RESULT).line_num = -1;
((lang.Absyn.AssignMul)RESULT).col_num = -1;
((lang.Absyn.AssignMul)RESULT).offset = -1; :}
  | _SYMB_23:p_1  {: RESULT = new lang.Absyn.AssignDiv();
((lang.Absyn.AssignDiv)RESULT).line_num = -1;
((lang.Absyn.AssignDiv)RESULT).col_num = -1;
((lang.Absyn.AssignDiv)RESULT).offset = -1; :}
  | _SYMB_24:p_1  {: RESULT = new lang.Absyn.AssignMod();
((lang.Absyn.AssignMod)RESULT).line_num = -1;
((lang.Absyn.AssignMod)RESULT).col_num = -1;
((lang.Absyn.AssignMod)RESULT).offset = -1; :}
  | _SYMB_25:p_1  {: RESULT = new lang.Absyn.AssignAdd();
((lang.Absyn.AssignAdd)RESULT).line_num = -1;
((lang.Absyn.AssignAdd)RESULT).col_num = -1;
((lang.Absyn.AssignAdd)RESULT).offset = -1; :}
  | _SYMB_26:p_1  {: RESULT = new lang.Absyn.AssignSub();
((lang.Absyn.AssignSub)RESULT).line_num = -1;
((lang.Absyn.AssignSub)RESULT).col_num = -1;
((lang.Absyn.AssignSub)RESULT).offset = -1; :}
;
IncrmDecrm_Op ::= _SYMB_27:p_1  {: RESULT = new lang.Absyn.Increment();
((lang.Absyn.Increment)RESULT).line_num = -1;
((lang.Absyn.Increment)RESULT).col_num = -1;
((lang.Absyn.Increment)RESULT).offset = -1; :}
  | _SYMB_28:p_1  {: RESULT = new lang.Absyn.Decrement();
((lang.Absyn.Decrement)RESULT).line_num = -1;
((lang.Absyn.Decrement)RESULT).col_num = -1;
((lang.Absyn.Decrement)RESULT).offset = -1; :}
;
Exp ::= Exp1:p_1  {: RESULT = p_1; :}
;
Exp1 ::= Exp2:p_1  {: RESULT = p_1; :}
;
Exp2 ::= Exp3:p_1  {: RESULT = p_1; :}
;
Exp5 ::= Exp6:p_1  {: RESULT = p_1; :}
;
Exp6 ::= Exp7:p_1  {: RESULT = p_1; :}
;
Exp7 ::= Exp8:p_1  {: RESULT = p_1; :}
;
Exp10 ::= Exp11:p_1  {: RESULT = p_1; :}
;
Exp14 ::= Exp15:p_1  {: RESULT = p_1; :}
;
ListExp ::=  /* empty */  {: RESULT = new lang.Absyn.ListExp(); :}
  | Exp:p_1  {: RESULT = new lang.Absyn.ListExp(); RESULT.addLast(p_1); :}
  | Exp:p_1 _SYMB_5:p_2 ListExp:p_3  {: RESULT = p_3; p_3.addFirst(p_1); :}
;
FuncType ::= _SYMB_73:p_1  {: RESULT = new lang.Absyn.FuncType_void();
((lang.Absyn.FuncType_void)RESULT).line_num = -1;
((lang.Absyn.FuncType_void)RESULT).col_num = -1;
((lang.Absyn.FuncType_void)RESULT).offset = -1; :}
  | VarType:p_1  {: RESULT = new lang.Absyn.FuncTypeVarType(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = -1;
} :}
;
VarType ::= _SYMB_51:p_1  {: RESULT = new lang.Absyn.VarType_int();
((lang.Absyn.VarType_int)RESULT).line_num = -1;
((lang.Absyn.VarType_int)RESULT).col_num = -1;
((lang.Absyn.VarType_int)RESULT).offset = -1; :}
  | _SYMB_40:p_1  {: RESULT = new lang.Absyn.VarType_double();
((lang.Absyn.VarType_double)RESULT).line_num = -1;
((lang.Absyn.VarType_double)RESULT).col_num = -1;
((lang.Absyn.VarType_double)RESULT).offset = -1; :}
  | _SYMB_33:p_1  {: RESULT = new lang.Absyn.VarType_bool();
((lang.Absyn.VarType_bool)RESULT).line_num = -1;
((lang.Absyn.VarType_bool)RESULT).col_num = -1;
((lang.Absyn.VarType_bool)RESULT).offset = -1; :}
  | _SYMB_35:p_1  {: RESULT = new lang.Absyn.VarType_char();
((lang.Absyn.VarType_char)RESULT).line_num = -1;
((lang.Absyn.VarType_char)RESULT).col_num = -1;
((lang.Absyn.VarType_char)RESULT).offset = -1; :}
  | _SYMB_66:p_1  {: RESULT = new lang.Absyn.VarType_string();
((lang.Absyn.VarType_string)RESULT).line_num = -1;
((lang.Absyn.VarType_string)RESULT).col_num = -1;
((lang.Absyn.VarType_string)RESULT).offset = -1; :}
  | _SYMB_32:p_1  {: RESULT = new lang.Absyn.VarType_auto();
((lang.Absyn.VarType_auto)RESULT).line_num = -1;
((lang.Absyn.VarType_auto)RESULT).col_num = -1;
((lang.Absyn.VarType_auto)RESULT).offset = -1; :}
  | _SYMB_44:p_1  {: RESULT = new lang.Absyn.VarType_func();
((lang.Absyn.VarType_func)RESULT).line_num = -1;
((lang.Absyn.VarType_func)RESULT).col_num = -1;
((lang.Absyn.VarType_func)RESULT).offset = -1; :}
  | _SYMB_56:p_1  {: RESULT = new lang.Absyn.VarType_object();
((lang.Absyn.VarType_object)RESULT).line_num = -1;
((lang.Absyn.VarType_object)RESULT).col_num = -1;
((lang.Absyn.VarType_object)RESULT).offset = -1; :}
;
TypeCast ::= _SYMB_70:p_1  {: RESULT = new lang.Absyn.TypeCast_toInt();
((lang.Absyn.TypeCast_toInt)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).offset = -1; :}
  | _SYMB_69:p_1  {: RESULT = new lang.Absyn.TypeCast_toDouble();
((lang.Absyn.TypeCast_toDouble)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).offset = -1; :}
  | _SYMB_67:p_1  {: RESULT = new lang.Absyn.TypeCast_toBool();
((lang.Absyn.TypeCast_toBool)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).offset = -1; :}
  | _SYMB_68:p_1  {: RESULT = new lang.Absyn.TypeCast_toChar();
((lang.Absyn.TypeCast_toChar)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).offset = -1; :}
  | _SYMB_71:p_1  {: RESULT = new lang.Absyn.TypeCast_toString();
((lang.Absyn.TypeCast_toString)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).offset = -1; :}
;

