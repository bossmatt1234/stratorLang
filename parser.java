
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package lang;

import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short[][] _production_table =
    unpackFromStrings(new String[] {
    "\000\217\000\002\002\004\000\002\002\003\000\002\002" +
    "\006\000\002\003\013\000\002\003\012\000\002\003\007" +
    "\000\002\003\011\000\002\003\015\000\002\003\021\000" +
    "\002\003\004\000\002\003\003\000\002\003\003\000\002" +
    "\003\004\000\002\003\003\000\002\003\003\000\002\003" +
    "\003\000\002\003\003\000\002\003\003\000\002\003\003" +
    "\000\002\003\010\000\002\003\010\000\002\003\012\000" +
    "\002\003\004\000\002\003\012\000\002\003\003\000\002" +
    "\003\005\000\002\004\003\000\002\005\002\000\002\005" +
    "\003\000\002\005\005\000\002\006\006\000\002\007\004" +
    "\000\002\010\005\000\002\011\004\000\002\012\007\000" +
    "\002\012\011\000\002\012\013\000\002\012\014\000\002" +
    "\012\016\000\002\012\020\000\002\012\013\000\002\012" +
    "\013\000\002\013\007\000\002\013\013\000\002\013\011" +
    "\000\002\014\004\000\002\015\002\000\002\015\003\000" +
    "\002\015\005\000\002\016\002\000\002\016\004\000\002" +
    "\017\003\000\002\017\004\000\002\017\003\000\002\017" +
    "\003\000\002\017\004\000\002\017\003\000\002\017\003" +
    "\000\002\017\003\000\002\017\003\000\002\017\010\000" +
    "\002\017\006\000\002\017\010\000\002\017\010\000\002" +
    "\017\005\000\002\017\007\000\002\017\007\000\002\017" +
    "\005\000\002\017\006\000\002\017\007\000\002\017\006" +
    "\000\002\017\003\000\002\020\002\000\002\020\003\000" +
    "\002\020\005\000\002\021\007\000\002\021\011\000\002" +
    "\021\010\000\002\021\012\000\002\021\010\000\002\021" +
    "\012\000\002\021\010\000\002\021\012\000\002\021\005" +
    "\000\002\021\010\000\002\021\006\000\002\021\010\000" +
    "\002\021\005\000\002\022\005\000\002\022\003\000\002" +
    "\023\005\000\002\023\005\000\002\023\005\000\002\023" +
    "\003\000\002\024\005\000\002\024\005\000\002\024\003" +
    "\000\002\025\005\000\002\025\005\000\002\025\005\000" +
    "\002\025\005\000\002\025\003\000\002\026\005\000\002" +
    "\026\005\000\002\026\003\000\002\027\005\000\002\027" +
    "\003\000\002\030\005\000\002\030\003\000\002\031\003" +
    "\000\002\031\003\000\002\031\003\000\002\031\003\000" +
    "\002\031\003\000\002\031\003\000\002\032\003\000\002" +
    "\032\003\000\002\033\003\000\002\034\003\000\002\035" +
    "\003\000\002\036\003\000\002\037\003\000\002\040\003" +
    "\000\002\041\003\000\002\042\003\000\002\043\002\000" +
    "\002\043\003\000\002\043\005\000\002\044\003\000\002" +
    "\044\003\000\002\045\003\000\002\045\003\000\002\045" +
    "\003\000\002\045\003\000\002\045\003\000\002\045\003" +
    "\000\002\045\003\000\002\045\003\000\002\046\003\000" +
    "\002\046\003\000\002\046\003\000\002\046\003\000\002" +
    "\046\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0155\000\074\002\uffd0\005\uffd0\007\uffd0\044\uffd0\045" +
    "\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0" +
    "\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075" +
    "\uffd0\077\uffd0\100\006\101\uffd0\104\uffd0\106\uffd0\107\uffd0" +
    "\112\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000" +
    "\004\002\u0157\001\002\000\072\002\000\005\024\007\022" +
    "\044\041\045\037\046\035\050\032\051\031\052\030\053" +
    "\027\054\017\057\016\061\015\062\013\064\012\070\047" +
    "\073\046\075\045\077\044\101\043\104\042\106\036\107" +
    "\034\112\021\113\020\122\014\124\051\133\025\001\002" +
    "\000\004\004\007\001\002\000\004\063\010\001\002\000" +
    "\072\002\uffd0\005\uffd0\007\uffd0\044\uffd0\045\uffd0\046\uffd0" +
    "\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061" +
    "\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0" +
    "\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122" +
    "\uffd0\124\uffd0\133\uffd0\001\002\000\072\002\uffff\005\024" +
    "\007\022\044\041\045\037\046\035\050\032\051\031\052" +
    "\030\053\027\054\017\057\016\061\015\062\013\064\012" +
    "\070\047\073\046\075\045\077\044\101\043\104\042\106" +
    "\036\107\034\112\021\113\020\122\014\124\051\133\025" +
    "\001\002\000\042\005\024\013\074\016\072\056\071\057" +
    "\016\067\107\073\046\075\045\102\066\104\042\121\067" +
    "\127\063\130\073\131\061\132\070\133\065\001\002\000" +
    "\024\044\041\045\037\050\032\054\017\061\015\070\047" +
    "\077\223\112\021\123\u0145\001\002\000\004\007\u0136\001" +
    "\002\000\006\006\uff79\133\uff79\001\002\000\004\005\u012d" +
    "\001\002\000\006\006\uff7e\133\uff7e\001\002\000\042\005" +
    "\024\013\074\016\072\056\071\057\016\067\107\073\046" +
    "\075\045\102\066\104\042\121\067\127\063\130\073\131" +
    "\061\132\070\133\065\001\002\000\006\006\uff7b\133\uff7b" +
    "\001\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0\045" +
    "\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0" +
    "\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075" +
    "\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112\uffd0" +
    "\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\074\002" +
    "\uffe9\005\uffe9\007\uffe9\010\uffe9\044\uffe9\045\uffe9\046\uffe9" +
    "\050\uffe9\051\uffe9\052\uffe9\053\uffe9\054\uffe9\057\uffe9\061" +
    "\uffe9\062\uffe9\064\uffe9\070\uffe9\073\uffe9\075\uffe9\077\uffe9" +
    "\101\uffe9\104\uffe9\106\uffe9\107\uffe9\112\uffe9\113\uffe9\122" +
    "\uffe9\124\uffe9\133\uffe9\001\002\000\042\005\024\013\074" +
    "\016\072\056\071\057\016\067\107\073\046\075\045\102" +
    "\066\104\042\121\067\127\063\130\073\131\061\132\070" +
    "\133\065\001\002\000\026\005\155\012\u0119\015\u0102\032" +
    "\377\033\376\034\375\035\374\036\373\037\372\040\371" +
    "\001\002\000\074\002\ufff3\005\ufff3\007\ufff3\010\ufff3\044" +
    "\ufff3\045\ufff3\046\ufff3\050\ufff3\051\ufff3\052\ufff3\053\ufff3" +
    "\054\ufff3\057\ufff3\061\ufff3\062\ufff3\064\ufff3\070\ufff3\073" +
    "\ufff3\075\ufff3\077\ufff3\101\ufff3\104\ufff3\106\ufff3\107\ufff3" +
    "\112\ufff3\113\ufff3\122\ufff3\124\ufff3\133\ufff3\001\002\000" +
    "\074\002\ufff6\005\ufff6\007\ufff6\010\ufff6\044\ufff6\045\ufff6" +
    "\046\ufff6\050\ufff6\051\ufff6\052\ufff6\053\ufff6\054\ufff6\057" +
    "\ufff6\061\ufff6\062\ufff6\064\ufff6\070\ufff6\073\ufff6\075\ufff6" +
    "\077\ufff6\101\ufff6\104\ufff6\106\ufff6\107\ufff6\112\ufff6\113" +
    "\ufff6\122\ufff6\124\ufff6\133\ufff6\001\002\000\004\133\u0112" +
    "\001\002\000\004\133\u0109\001\002\000\006\006\uff7c\133" +
    "\uff7c\001\002\000\074\002\uffcf\005\uffcf\007\uffcf\010\uffcf" +
    "\044\uffcf\045\uffcf\046\uffcf\050\uffcf\051\uffcf\052\uffcf\053" +
    "\uffcf\054\uffcf\057\uffcf\061\uffcf\062\uffcf\064\uffcf\070\uffcf" +
    "\073\uffcf\075\uffcf\077\uffcf\101\uffcf\104\uffcf\106\uffcf\107" +
    "\uffcf\112\uffcf\113\uffcf\122\uffcf\124\uffcf\133\uffcf\001\002" +
    "\000\042\005\024\013\074\016\072\056\071\057\016\067" +
    "\107\073\046\075\045\102\066\104\042\121\067\127\063" +
    "\130\073\131\061\132\070\133\065\001\002\000\074\002" +
    "\ufff7\005\ufff7\007\ufff7\010\ufff7\044\ufff7\045\ufff7\046\ufff7" +
    "\050\ufff7\051\ufff7\052\ufff7\053\ufff7\054\ufff7\057\ufff7\061" +
    "\ufff7\062\ufff7\064\ufff7\070\ufff7\073\ufff7\075\ufff7\077\ufff7" +
    "\101\ufff7\104\ufff7\106\ufff7\107\ufff7\112\ufff7\113\ufff7\122" +
    "\ufff7\124\ufff7\133\ufff7\001\002\000\024\044\041\045\037" +
    "\050\032\054\017\061\015\070\047\077\223\112\021\133" +
    "\321\001\002\000\006\006\uff7d\133\uff7d\001\002\000\074" +
    "\002\ufff0\005\ufff0\007\ufff0\010\ufff0\044\ufff0\045\ufff0\046" +
    "\ufff0\050\ufff0\051\ufff0\052\ufff0\053\ufff0\054\ufff0\057\ufff0" +
    "\061\ufff0\062\ufff0\064\ufff0\070\ufff0\073\ufff0\075\ufff0\077" +
    "\ufff0\101\ufff0\104\ufff0\106\ufff0\107\ufff0\112\ufff0\113\ufff0" +
    "\122\ufff0\124\ufff0\133\ufff0\001\002\000\006\006\uff7a\133" +
    "\uff7a\001\002\000\004\005\306\001\002\000\042\005\024" +
    "\013\074\016\072\056\071\057\016\067\107\073\046\075" +
    "\045\102\066\104\042\121\067\127\063\130\073\131\061" +
    "\132\070\133\065\001\002\000\004\133\276\001\002\000" +
    "\004\005\265\001\002\000\004\005\252\001\002\000\006" +
    "\006\uff7f\133\uff7f\001\002\000\074\002\ufff2\005\ufff2\007" +
    "\ufff2\010\ufff2\044\ufff2\045\ufff2\046\ufff2\050\ufff2\051\ufff2" +
    "\052\ufff2\053\ufff2\054\ufff2\057\ufff2\061\ufff2\062\ufff2\064" +
    "\ufff2\070\ufff2\073\ufff2\075\ufff2\077\ufff2\101\ufff2\104\ufff2" +
    "\106\ufff2\107\ufff2\112\ufff2\113\ufff2\122\ufff2\124\ufff2\133" +
    "\ufff2\001\002\000\042\005\024\013\074\016\072\056\071" +
    "\057\016\067\107\073\046\075\045\102\066\104\042\121" +
    "\067\127\063\130\073\131\061\132\070\133\065\001\002" +
    "\000\074\002\ufff4\005\ufff4\007\ufff4\010\ufff4\044\ufff4\045" +
    "\ufff4\046\ufff4\050\ufff4\051\ufff4\052\ufff4\053\ufff4\054\ufff4" +
    "\057\ufff4\061\ufff4\062\ufff4\064\ufff4\070\ufff4\073\ufff4\075" +
    "\ufff4\077\ufff4\101\ufff4\104\ufff4\106\ufff4\107\ufff4\112\ufff4" +
    "\113\ufff4\122\ufff4\124\ufff4\133\ufff4\001\002\000\074\002" +
    "\uffef\005\uffef\007\uffef\010\uffef\044\uffef\045\uffef\046\uffef" +
    "\050\uffef\051\uffef\052\uffef\053\uffef\054\uffef\057\uffef\061" +
    "\uffef\062\uffef\064\uffef\070\uffef\073\uffef\075\uffef\077\uffef" +
    "\101\uffef\104\uffef\106\uffef\107\uffef\112\uffef\113\uffef\122" +
    "\uffef\124\uffef\133\uffef\001\002\000\004\133\056\001\002" +
    "\000\074\002\ufff1\005\ufff1\007\ufff1\010\ufff1\044\ufff1\045" +
    "\ufff1\046\ufff1\050\ufff1\051\ufff1\052\ufff1\053\ufff1\054\ufff1" +
    "\057\ufff1\061\ufff1\062\ufff1\064\ufff1\070\ufff1\073\ufff1\075" +
    "\ufff1\077\ufff1\101\ufff1\104\ufff1\106\ufff1\107\ufff1\112\ufff1" +
    "\113\ufff1\122\ufff1\124\ufff1\133\ufff1\001\002\000\076\002" +
    "\uffe2\005\uffe2\007\uffe2\010\uffe2\015\057\044\uffe2\045\uffe2" +
    "\046\uffe2\050\uffe2\051\uffe2\052\uffe2\053\uffe2\054\uffe2\057" +
    "\uffe2\061\uffe2\062\uffe2\064\uffe2\070\uffe2\073\uffe2\075\uffe2" +
    "\077\uffe2\101\uffe2\104\uffe2\106\uffe2\107\uffe2\112\uffe2\113" +
    "\uffe2\122\uffe2\124\uffe2\133\uffe2\001\002\000\042\005\024" +
    "\013\074\016\072\056\071\057\016\067\107\073\046\075" +
    "\045\102\066\104\042\121\067\127\063\130\073\131\061" +
    "\132\070\133\065\001\002\000\134\002\uffa1\005\uffa1\006" +
    "\uffa1\007\uffa1\010\uffa1\011\uffa1\014\uffa1\016\uffa1\020\241" +
    "\021\240\022\237\023\uffa1\024\uffa1\025\uffa1\026\uffa1\027" +
    "\uffa1\030\uffa1\031\uffa1\041\uffa1\042\uffa1\044\uffa1\045\uffa1" +
    "\046\uffa1\050\uffa1\051\uffa1\052\uffa1\053\uffa1\054\uffa1\057" +
    "\uffa1\061\uffa1\062\uffa1\064\uffa1\070\uffa1\073\uffa1\075\uffa1" +
    "\077\uffa1\101\uffa1\104\uffa1\106\uffa1\107\uffa1\112\uffa1\113" +
    "\uffa1\122\uffa1\124\uffa1\133\uffa1\001\002\000\136\002\uffce" +
    "\005\uffce\006\uffce\007\uffce\010\uffce\011\uffce\014\uffce\016" +
    "\uffce\017\uffce\020\uffce\021\uffce\022\uffce\023\uffce\024\uffce" +
    "\025\uffce\026\uffce\027\uffce\030\uffce\031\uffce\041\uffce\042" +
    "\uffce\044\uffce\045\uffce\046\uffce\050\uffce\051\uffce\052\uffce" +
    "\053\uffce\054\uffce\057\uffce\061\uffce\062\uffce\064\uffce\070" +
    "\uffce\073\uffce\075\uffce\077\uffce\101\uffce\104\uffce\106\uffce" +
    "\107\uffce\112\uffce\113\uffce\122\uffce\124\uffce\133\uffce\001" +
    "\002\000\126\002\uff86\005\uff86\006\uff86\007\uff86\010\uff86" +
    "\011\uff86\014\uff86\016\234\023\235\024\uff86\025\uff86\026" +
    "\uff86\027\uff86\030\uff86\031\uff86\041\uff86\042\uff86\044\uff86" +
    "\045\uff86\046\uff86\050\uff86\051\uff86\052\uff86\053\uff86\054" +
    "\uff86\057\uff86\061\uff86\062\uff86\064\uff86\070\uff86\073\uff86" +
    "\075\uff86\077\uff86\101\uff86\104\uff86\106\uff86\107\uff86\112" +
    "\uff86\113\uff86\122\uff86\124\uff86\133\uff86\001\002\000\136" +
    "\002\uffc9\005\uffc9\006\uffc9\007\uffc9\010\uffc9\011\uffc9\014" +
    "\uffc9\016\uffc9\017\uffc9\020\uffc9\021\uffc9\022\uffc9\023\uffc9" +
    "\024\uffc9\025\uffc9\026\uffc9\027\uffc9\030\uffc9\031\uffc9\041" +
    "\uffc9\042\uffc9\044\uffc9\045\uffc9\046\uffc9\050\uffc9\051\uffc9" +
    "\052\uffc9\053\uffc9\054\uffc9\057\uffc9\061\uffc9\062\uffc9\064" +
    "\uffc9\070\uffc9\073\uffc9\075\uffc9\077\uffc9\101\uffc9\104\uffc9" +
    "\106\uffc9\107\uffc9\112\uffc9\113\uffc9\122\uffc9\124\uffc9\133" +
    "\uffc9\001\002\000\122\002\uff9c\005\uff9c\006\uff9c\007\uff9c" +
    "\010\uff9c\011\uff9c\014\uff9c\024\uff9c\025\uff9c\026\uff9c\027" +
    "\uff9c\030\uff9c\031\uff9c\041\uff9c\042\uff9c\044\uff9c\045\uff9c" +
    "\046\uff9c\050\uff9c\051\uff9c\052\uff9c\053\uff9c\054\uff9c\057" +
    "\uff9c\061\uff9c\062\uff9c\064\uff9c\070\uff9c\073\uff9c\075\uff9c" +
    "\077\uff9c\101\uff9c\104\uff9c\106\uff9c\107\uff9c\112\uff9c\113" +
    "\uff9c\122\uff9c\124\uff9c\133\uff9c\001\002\000\142\002\uffc6" +
    "\005\155\006\uffc6\007\uffc6\010\uffc6\011\uffc6\012\157\013" +
    "\156\014\uffc6\016\uffc6\017\uffc6\020\uffc6\021\uffc6\022\uffc6" +
    "\023\uffc6\024\uffc6\025\uffc6\026\uffc6\027\uffc6\030\uffc6\031" +
    "\uffc6\041\uffc6\042\uffc6\044\uffc6\045\uffc6\046\uffc6\050\uffc6" +
    "\051\uffc6\052\uffc6\053\uffc6\054\uffc6\057\uffc6\061\uffc6\062" +
    "\uffc6\064\uffc6\070\uffc6\073\uffc6\075\uffc6\077\uffc6\101\uffc6" +
    "\104\uffc6\106\uffc6\107\uffc6\112\uffc6\113\uffc6\122\uffc6\124" +
    "\uffc6\133\uffc6\001\002\000\004\005\152\001\002\000\136" +
    "\002\uffc8\005\uffc8\006\uffc8\007\uffc8\010\uffc8\011\uffc8\014" +
    "\uffc8\016\uffc8\017\uffc8\020\uffc8\021\uffc8\022\uffc8\023\uffc8" +
    "\024\uffc8\025\uffc8\026\uffc8\027\uffc8\030\uffc8\031\uffc8\041" +
    "\uffc8\042\uffc8\044\uffc8\045\uffc8\046\uffc8\050\uffc8\051\uffc8" +
    "\052\uffc8\053\uffc8\054\uffc8\057\uffc8\061\uffc8\062\uffc8\064" +
    "\uffc8\070\uffc8\073\uffc8\075\uffc8\077\uffc8\101\uffc8\104\uffc8" +
    "\106\uffc8\107\uffc8\112\uffc8\113\uffc8\122\uffc8\124\uffc8\133" +
    "\uffc8\001\002\000\136\002\uffcb\005\uffcb\006\uffcb\007\uffcb" +
    "\010\uffcb\011\uffcb\014\uffcb\016\uffcb\017\uffcb\020\uffcb\021" +
    "\uffcb\022\uffcb\023\uffcb\024\uffcb\025\uffcb\026\uffcb\027\uffcb" +
    "\030\uffcb\031\uffcb\041\uffcb\042\uffcb\044\uffcb\045\uffcb\046" +
    "\uffcb\050\uffcb\051\uffcb\052\uffcb\053\uffcb\054\uffcb\057\uffcb" +
    "\061\uffcb\062\uffcb\064\uffcb\070\uffcb\073\uffcb\075\uffcb\077" +
    "\uffcb\101\uffcb\104\uffcb\106\uffcb\107\uffcb\112\uffcb\113\uffcb" +
    "\122\uffcb\124\uffcb\133\uffcb\001\002\000\136\002\uffc7\005" +
    "\uffc7\006\uffc7\007\uffc7\010\uffc7\011\uffc7\014\uffc7\016\uffc7" +
    "\017\uffc7\020\uffc7\021\uffc7\022\uffc7\023\uffc7\024\uffc7\025" +
    "\uffc7\026\uffc7\027\uffc7\030\uffc7\031\uffc7\041\uffc7\042\uffc7" +
    "\044\uffc7\045\uffc7\046\uffc7\050\uffc7\051\uffc7\052\uffc7\053" +
    "\uffc7\054\uffc7\057\uffc7\061\uffc7\062\uffc7\064\uffc7\070\uffc7" +
    "\073\uffc7\075\uffc7\077\uffc7\101\uffc7\104\uffc7\106\uffc7\107" +
    "\uffc7\112\uffc7\113\uffc7\122\uffc7\124\uffc7\133\uffc7\001\002" +
    "\000\006\131\150\132\151\001\002\000\136\002\uffcc\005" +
    "\uffcc\006\uffcc\007\uffcc\010\uffcc\011\uffcc\014\uffcc\016\uffcc" +
    "\017\uffcc\020\uffcc\021\uffcc\022\uffcc\023\uffcc\024\uffcc\025" +
    "\uffcc\026\uffcc\027\uffcc\030\uffcc\031\uffcc\041\uffcc\042\uffcc" +
    "\044\uffcc\045\uffcc\046\uffcc\050\uffcc\051\uffcc\052\uffcc\053" +
    "\uffcc\054\uffcc\057\uffcc\061\uffcc\062\uffcc\064\uffcc\070\uffcc" +
    "\073\uffcc\075\uffcc\077\uffcc\101\uffcc\104\uffcc\106\uffcc\107" +
    "\uffcc\112\uffcc\113\uffcc\122\uffcc\124\uffcc\133\uffcc\001\002" +
    "\000\044\005\024\013\074\014\uffe6\016\072\056\071\057" +
    "\016\067\107\073\046\075\045\102\066\104\042\121\067" +
    "\127\063\130\073\131\061\132\070\133\065\001\002\000" +
    "\122\002\uff99\005\uff99\006\uff99\007\uff99\010\uff99\011\uff99" +
    "\014\uff99\024\134\025\133\026\132\027\131\030\uff99\031" +
    "\uff99\041\uff99\042\uff99\044\uff99\045\uff99\046\uff99\050\uff99" +
    "\051\uff99\052\uff99\053\uff99\054\uff99\057\uff99\061\uff99\062" +
    "\uff99\064\uff99\070\uff99\073\uff99\075\uff99\077\uff99\101\uff99" +
    "\104\uff99\106\uff99\107\uff99\112\uff99\113\uff99\122\uff99\124" +
    "\uff99\133\uff99\001\002\000\112\002\uff87\005\uff87\006\uff87" +
    "\007\uff87\010\uff87\011\uff87\014\uff87\030\127\031\126\041" +
    "\uff87\042\uff87\044\uff87\045\uff87\046\uff87\050\uff87\051\uff87" +
    "\052\uff87\053\uff87\054\uff87\057\uff87\061\uff87\062\uff87\064" +
    "\uff87\070\uff87\073\uff87\075\uff87\077\uff87\101\uff87\104\uff87" +
    "\106\uff87\107\uff87\112\uff87\113\uff87\122\uff87\124\uff87\133" +
    "\uff87\001\002\000\106\002\uff88\005\uff88\006\uff88\007\uff88" +
    "\010\uff88\011\uff88\014\uff88\041\uff88\042\uff88\044\uff88\045" +
    "\uff88\046\uff88\050\uff88\051\uff88\052\uff88\053\uff88\054\uff88" +
    "\057\uff88\061\uff88\062\uff88\064\uff88\070\uff88\073\uff88\075" +
    "\uff88\077\uff88\101\uff88\104\uff88\106\uff88\107\uff88\112\uff88" +
    "\113\uff88\122\uff88\124\uff88\133\uff88\001\002\000\076\002" +
    "\uffe3\005\uffe3\007\uffe3\010\uffe3\011\uffe3\044\uffe3\045\uffe3" +
    "\046\uffe3\050\uffe3\051\uffe3\052\uffe3\053\uffe3\054\uffe3\057" +
    "\uffe3\061\uffe3\062\uffe3\064\uffe3\070\uffe3\073\uffe3\075\uffe3" +
    "\077\uffe3\101\uffe3\104\uffe3\106\uffe3\107\uffe3\112\uffe3\113" +
    "\uffe3\122\uffe3\124\uffe3\133\uffe3\001\002\000\106\002\uff89" +
    "\005\uff89\006\uff89\007\uff89\010\uff89\011\uff89\014\uff89\041" +
    "\uff89\042\uff89\044\uff89\045\uff89\046\uff89\050\uff89\051\uff89" +
    "\052\uff89\053\uff89\054\uff89\057\uff89\061\uff89\062\uff89\064" +
    "\uff89\070\uff89\073\uff89\075\uff89\077\uff89\101\uff89\104\uff89" +
    "\106\uff89\107\uff89\112\uff89\113\uff89\122\uff89\124\uff89\133" +
    "\uff89\001\002\000\106\002\uff97\005\uff97\006\uff97\007\uff97" +
    "\010\uff97\011\uff97\014\uff97\041\uff97\042\uff97\044\uff97\045" +
    "\uff97\046\uff97\050\uff97\051\uff97\052\uff97\053\uff97\054\uff97" +
    "\057\uff97\061\uff97\062\uff97\064\uff97\070\uff97\073\uff97\075" +
    "\uff97\077\uff97\101\uff97\104\uff97\106\uff97\107\uff97\112\uff97" +
    "\113\uff97\122\uff97\124\uff97\133\uff97\001\002\000\106\002" +
    "\uff95\005\uff95\006\uff95\007\uff95\010\uff95\011\uff95\014\uff95" +
    "\041\124\042\uff95\044\uff95\045\uff95\046\uff95\050\uff95\051" +
    "\uff95\052\uff95\053\uff95\054\uff95\057\uff95\061\uff95\062\uff95" +
    "\064\uff95\070\uff95\073\uff95\075\uff95\077\uff95\101\uff95\104" +
    "\uff95\106\uff95\107\uff95\112\uff95\113\uff95\122\uff95\124\uff95" +
    "\133\uff95\001\002\000\104\002\uff8a\005\uff8a\006\uff8a\007" +
    "\uff8a\010\uff8a\011\uff8a\014\uff8a\042\122\044\uff8a\045\uff8a" +
    "\046\uff8a\050\uff8a\051\uff8a\052\uff8a\053\uff8a\054\uff8a\057" +
    "\uff8a\061\uff8a\062\uff8a\064\uff8a\070\uff8a\073\uff8a\075\uff8a" +
    "\077\uff8a\101\uff8a\104\uff8a\106\uff8a\107\uff8a\112\uff8a\113" +
    "\uff8a\122\uff8a\124\uff8a\133\uff8a\001\002\000\102\002\uff8b" +
    "\005\uff8b\006\uff8b\007\uff8b\010\uff8b\011\uff8b\014\uff8b\044" +
    "\uff8b\045\uff8b\046\uff8b\050\uff8b\051\uff8b\052\uff8b\053\uff8b" +
    "\054\uff8b\057\uff8b\061\uff8b\062\uff8b\064\uff8b\070\uff8b\073" +
    "\uff8b\075\uff8b\077\uff8b\101\uff8b\104\uff8b\106\uff8b\107\uff8b" +
    "\112\uff8b\113\uff8b\122\uff8b\124\uff8b\133\uff8b\001\002\000" +
    "\102\002\uff8c\005\uff8c\006\uff8c\007\uff8c\010\uff8c\011\uff8c" +
    "\014\uff8c\044\uff8c\045\uff8c\046\uff8c\050\uff8c\051\uff8c\052" +
    "\uff8c\053\uff8c\054\uff8c\057\uff8c\061\uff8c\062\uff8c\064\uff8c" +
    "\070\uff8c\073\uff8c\075\uff8c\077\uff8c\101\uff8c\104\uff8c\106" +
    "\uff8c\107\uff8c\112\uff8c\113\uff8c\122\uff8c\124\uff8c\133\uff8c" +
    "\001\002\000\004\005\116\001\002\000\136\002\uffba\005" +
    "\uffba\006\uffba\007\uffba\010\uffba\011\uffba\014\uffba\016\uffba" +
    "\017\uffba\020\uffba\021\uffba\022\uffba\023\uffba\024\uffba\025" +
    "\uffba\026\uffba\027\uffba\030\uffba\031\uffba\041\uffba\042\uffba" +
    "\044\uffba\045\uffba\046\uffba\050\uffba\051\uffba\052\uffba\053" +
    "\uffba\054\uffba\057\uffba\061\uffba\062\uffba\064\uffba\070\uffba" +
    "\073\uffba\075\uffba\077\uffba\101\uffba\104\uffba\106\uffba\107" +
    "\uffba\112\uffba\113\uffba\122\uffba\124\uffba\133\uffba\001\002" +
    "\000\136\002\uff85\005\uff85\006\uff85\007\uff85\010\uff85\011" +
    "\uff85\014\uff85\016\uff85\017\uff85\020\uff85\021\uff85\022\uff85" +
    "\023\uff85\024\uff85\025\uff85\026\uff85\027\uff85\030\uff85\031" +
    "\uff85\041\uff85\042\uff85\044\uff85\045\uff85\046\uff85\050\uff85" +
    "\051\uff85\052\uff85\053\uff85\054\uff85\057\uff85\061\uff85\062" +
    "\uff85\064\uff85\070\uff85\073\uff85\075\uff85\077\uff85\101\uff85" +
    "\104\uff85\106\uff85\107\uff85\112\uff85\113\uff85\122\uff85\124" +
    "\uff85\133\uff85\001\002\000\136\002\uffa8\005\uffa8\006\uffa8" +
    "\007\uffa8\010\uffa8\011\uffa8\014\uffa8\016\uffa8\017\uffa8\020" +
    "\uffa8\021\uffa8\022\uffa8\023\uffa8\024\uffa8\025\uffa8\026\uffa8" +
    "\027\uffa8\030\uffa8\031\uffa8\041\uffa8\042\uffa8\044\uffa8\045" +
    "\uffa8\046\uffa8\050\uffa8\051\uffa8\052\uffa8\053\uffa8\054\uffa8" +
    "\057\uffa8\061\uffa8\062\uffa8\064\uffa8\070\uffa8\073\uffa8\075" +
    "\uffa8\077\uffa8\101\uffa8\104\uffa8\106\uffa8\107\uffa8\112\uffa8" +
    "\113\uffa8\122\uffa8\124\uffa8\133\uffa8\001\002\000\136\002" +
    "\uffa4\005\uffa4\006\uffa4\007\uffa4\010\uffa4\011\uffa4\014\uffa4" +
    "\016\uffa4\017\114\020\uffa4\021\uffa4\022\uffa4\023\uffa4\024" +
    "\uffa4\025\uffa4\026\uffa4\027\uffa4\030\uffa4\031\uffa4\041\uffa4" +
    "\042\uffa4\044\uffa4\045\uffa4\046\uffa4\050\uffa4\051\uffa4\052" +
    "\uffa4\053\uffa4\054\uffa4\057\uffa4\061\uffa4\062\uffa4\064\uffa4" +
    "\070\uffa4\073\uffa4\075\uffa4\077\uffa4\101\uffa4\104\uffa4\106" +
    "\uffa4\107\uffa4\112\uffa4\113\uffa4\122\uffa4\124\uffa4\133\uffa4" +
    "\001\002\000\042\005\024\013\074\016\072\056\071\057" +
    "\016\067\107\073\046\075\045\102\066\104\042\121\067" +
    "\127\063\130\073\131\061\132\070\133\065\001\002\000" +
    "\136\002\uffa9\005\uffa9\006\uffa9\007\uffa9\010\uffa9\011\uffa9" +
    "\014\uffa9\016\uffa9\017\uffa9\020\uffa9\021\uffa9\022\uffa9\023" +
    "\uffa9\024\uffa9\025\uffa9\026\uffa9\027\uffa9\030\uffa9\031\uffa9" +
    "\041\uffa9\042\uffa9\044\uffa9\045\uffa9\046\uffa9\050\uffa9\051" +
    "\uffa9\052\uffa9\053\uffa9\054\uffa9\057\uffa9\061\uffa9\062\uffa9" +
    "\064\uffa9\070\uffa9\073\uffa9\075\uffa9\077\uffa9\101\uffa9\104" +
    "\uffa9\106\uffa9\107\uffa9\112\uffa9\113\uffa9\122\uffa9\124\uffa9" +
    "\133\uffa9\001\002\000\006\006\117\127\120\001\002\000" +
    "\136\002\uffbe\005\uffbe\006\uffbe\007\uffbe\010\uffbe\011\uffbe" +
    "\014\uffbe\016\uffbe\017\uffbe\020\uffbe\021\uffbe\022\uffbe\023" +
    "\uffbe\024\uffbe\025\uffbe\026\uffbe\027\uffbe\030\uffbe\031\uffbe" +
    "\041\uffbe\042\uffbe\044\uffbe\045\uffbe\046\uffbe\050\uffbe\051" +
    "\uffbe\052\uffbe\053\uffbe\054\uffbe\057\uffbe\061\uffbe\062\uffbe" +
    "\064\uffbe\070\uffbe\073\uffbe\075\uffbe\077\uffbe\101\uffbe\104" +
    "\uffbe\106\uffbe\107\uffbe\112\uffbe\113\uffbe\122\uffbe\124\uffbe" +
    "\133\uffbe\001\002\000\004\006\121\001\002\000\136\002" +
    "\uffbd\005\uffbd\006\uffbd\007\uffbd\010\uffbd\011\uffbd\014\uffbd" +
    "\016\uffbd\017\uffbd\020\uffbd\021\uffbd\022\uffbd\023\uffbd\024" +
    "\uffbd\025\uffbd\026\uffbd\027\uffbd\030\uffbd\031\uffbd\041\uffbd" +
    "\042\uffbd\044\uffbd\045\uffbd\046\uffbd\050\uffbd\051\uffbd\052" +
    "\uffbd\053\uffbd\054\uffbd\057\uffbd\061\uffbd\062\uffbd\064\uffbd" +
    "\070\uffbd\073\uffbd\075\uffbd\077\uffbd\101\uffbd\104\uffbd\106" +
    "\uffbd\107\uffbd\112\uffbd\113\uffbd\122\uffbd\124\uffbd\133\uffbd" +
    "\001\002\000\042\005\024\013\074\016\072\056\071\057" +
    "\016\067\107\073\046\075\045\102\066\104\042\121\067" +
    "\127\063\130\073\131\061\132\070\133\065\001\002\000" +
    "\106\002\uff96\005\uff96\006\uff96\007\uff96\010\uff96\011\uff96" +
    "\014\uff96\041\124\042\uff96\044\uff96\045\uff96\046\uff96\050" +
    "\uff96\051\uff96\052\uff96\053\uff96\054\uff96\057\uff96\061\uff96" +
    "\062\uff96\064\uff96\070\uff96\073\uff96\075\uff96\077\uff96\101" +
    "\uff96\104\uff96\106\uff96\107\uff96\112\uff96\113\uff96\122\uff96" +
    "\124\uff96\133\uff96\001\002\000\042\005\024\013\074\016" +
    "\072\056\071\057\016\067\107\073\046\075\045\102\066" +
    "\104\042\121\067\127\063\130\073\131\061\132\070\133" +
    "\065\001\002\000\106\002\uff98\005\uff98\006\uff98\007\uff98" +
    "\010\uff98\011\uff98\014\uff98\041\uff98\042\uff98\044\uff98\045" +
    "\uff98\046\uff98\050\uff98\051\uff98\052\uff98\053\uff98\054\uff98" +
    "\057\uff98\061\uff98\062\uff98\064\uff98\070\uff98\073\uff98\075" +
    "\uff98\077\uff98\101\uff98\104\uff98\106\uff98\107\uff98\112\uff98" +
    "\113\uff98\122\uff98\124\uff98\133\uff98\001\002\000\042\005" +
    "\024\013\074\016\072\056\071\057\016\067\107\073\046" +
    "\075\045\102\066\104\042\121\067\127\063\130\073\131" +
    "\061\132\070\133\065\001\002\000\042\005\024\013\074" +
    "\016\072\056\071\057\016\067\107\073\046\075\045\102" +
    "\066\104\042\121\067\127\063\130\073\131\061\132\070" +
    "\133\065\001\002\000\122\002\uff9b\005\uff9b\006\uff9b\007" +
    "\uff9b\010\uff9b\011\uff9b\014\uff9b\024\134\025\133\026\132" +
    "\027\131\030\uff9b\031\uff9b\041\uff9b\042\uff9b\044\uff9b\045" +
    "\uff9b\046\uff9b\050\uff9b\051\uff9b\052\uff9b\053\uff9b\054\uff9b" +
    "\057\uff9b\061\uff9b\062\uff9b\064\uff9b\070\uff9b\073\uff9b\075" +
    "\uff9b\077\uff9b\101\uff9b\104\uff9b\106\uff9b\107\uff9b\112\uff9b" +
    "\113\uff9b\122\uff9b\124\uff9b\133\uff9b\001\002\000\042\005" +
    "\024\013\074\016\072\056\071\057\016\067\107\073\046" +
    "\075\045\102\066\104\042\121\067\127\063\130\073\131" +
    "\061\132\070\133\065\001\002\000\042\005\024\013\074" +
    "\016\072\056\071\057\016\067\107\073\046\075\045\102" +
    "\066\104\042\121\067\127\063\130\073\131\061\132\070" +
    "\133\065\001\002\000\042\005\024\013\074\016\072\056" +
    "\071\057\016\067\107\073\046\075\045\102\066\104\042" +
    "\121\067\127\063\130\073\131\061\132\070\133\065\001" +
    "\002\000\042\005\024\013\074\016\072\056\071\057\016" +
    "\067\107\073\046\075\045\102\066\104\042\121\067\127" +
    "\063\130\073\131\061\132\070\133\065\001\002\000\122" +
    "\002\uffa0\005\uffa0\006\uffa0\007\uffa0\010\uffa0\011\uffa0\014" +
    "\uffa0\024\uffa0\025\uffa0\026\uffa0\027\uffa0\030\uffa0\031\uffa0" +
    "\041\uffa0\042\uffa0\044\uffa0\045\uffa0\046\uffa0\050\uffa0\051" +
    "\uffa0\052\uffa0\053\uffa0\054\uffa0\057\uffa0\061\uffa0\062\uffa0" +
    "\064\uffa0\070\uffa0\073\uffa0\075\uffa0\077\uffa0\101\uffa0\104" +
    "\uffa0\106\uffa0\107\uffa0\112\uffa0\113\uffa0\122\uffa0\124\uffa0" +
    "\133\uffa0\001\002\000\122\002\uff9f\005\uff9f\006\uff9f\007" +
    "\uff9f\010\uff9f\011\uff9f\014\uff9f\024\uff9f\025\uff9f\026\uff9f" +
    "\027\uff9f\030\uff9f\031\uff9f\041\uff9f\042\uff9f\044\uff9f\045" +
    "\uff9f\046\uff9f\050\uff9f\051\uff9f\052\uff9f\053\uff9f\054\uff9f" +
    "\057\uff9f\061\uff9f\062\uff9f\064\uff9f\070\uff9f\073\uff9f\075" +
    "\uff9f\077\uff9f\101\uff9f\104\uff9f\106\uff9f\107\uff9f\112\uff9f" +
    "\113\uff9f\122\uff9f\124\uff9f\133\uff9f\001\002\000\122\002" +
    "\uff9e\005\uff9e\006\uff9e\007\uff9e\010\uff9e\011\uff9e\014\uff9e" +
    "\024\uff9e\025\uff9e\026\uff9e\027\uff9e\030\uff9e\031\uff9e\041" +
    "\uff9e\042\uff9e\044\uff9e\045\uff9e\046\uff9e\050\uff9e\051\uff9e" +
    "\052\uff9e\053\uff9e\054\uff9e\057\uff9e\061\uff9e\062\uff9e\064" +
    "\uff9e\070\uff9e\073\uff9e\075\uff9e\077\uff9e\101\uff9e\104\uff9e" +
    "\106\uff9e\107\uff9e\112\uff9e\113\uff9e\122\uff9e\124\uff9e\133" +
    "\uff9e\001\002\000\122\002\uff9d\005\uff9d\006\uff9d\007\uff9d" +
    "\010\uff9d\011\uff9d\014\uff9d\024\uff9d\025\uff9d\026\uff9d\027" +
    "\uff9d\030\uff9d\031\uff9d\041\uff9d\042\uff9d\044\uff9d\045\uff9d" +
    "\046\uff9d\050\uff9d\051\uff9d\052\uff9d\053\uff9d\054\uff9d\057" +
    "\uff9d\061\uff9d\062\uff9d\064\uff9d\070\uff9d\073\uff9d\075\uff9d" +
    "\077\uff9d\101\uff9d\104\uff9d\106\uff9d\107\uff9d\112\uff9d\113" +
    "\uff9d\122\uff9d\124\uff9d\133\uff9d\001\002\000\122\002\uff9a" +
    "\005\uff9a\006\uff9a\007\uff9a\010\uff9a\011\uff9a\014\uff9a\024" +
    "\134\025\133\026\132\027\131\030\uff9a\031\uff9a\041\uff9a" +
    "\042\uff9a\044\uff9a\045\uff9a\046\uff9a\050\uff9a\051\uff9a\052" +
    "\uff9a\053\uff9a\054\uff9a\057\uff9a\061\uff9a\062\uff9a\064\uff9a" +
    "\070\uff9a\073\uff9a\075\uff9a\077\uff9a\101\uff9a\104\uff9a\106" +
    "\uff9a\107\uff9a\112\uff9a\113\uff9a\122\uff9a\124\uff9a\133\uff9a" +
    "\001\002\000\006\011\146\014\uffe5\001\002\000\004\014" +
    "\145\001\002\000\006\011\uffe7\014\uffe7\001\002\000\136" +
    "\002\uffc1\005\uffc1\006\uffc1\007\uffc1\010\uffc1\011\uffc1\014" +
    "\uffc1\016\uffc1\017\uffc1\020\uffc1\021\uffc1\022\uffc1\023\uffc1" +
    "\024\uffc1\025\uffc1\026\uffc1\027\uffc1\030\uffc1\031\uffc1\041" +
    "\uffc1\042\uffc1\044\uffc1\045\uffc1\046\uffc1\050\uffc1\051\uffc1" +
    "\052\uffc1\053\uffc1\054\uffc1\057\uffc1\061\uffc1\062\uffc1\064" +
    "\uffc1\070\uffc1\073\uffc1\075\uffc1\077\uffc1\101\uffc1\104\uffc1" +
    "\106\uffc1\107\uffc1\112\uffc1\113\uffc1\122\uffc1\124\uffc1\133" +
    "\uffc1\001\002\000\044\005\024\013\074\014\uffe6\016\072" +
    "\056\071\057\016\067\107\073\046\075\045\102\066\104" +
    "\042\121\067\127\063\130\073\131\061\132\070\133\065" +
    "\001\002\000\004\014\uffe4\001\002\000\136\002\uffcd\005" +
    "\uffcd\006\uffcd\007\uffcd\010\uffcd\011\uffcd\014\uffcd\016\uffcd" +
    "\017\uffcd\020\uffcd\021\uffcd\022\uffcd\023\uffcd\024\uffcd\025" +
    "\uffcd\026\uffcd\027\uffcd\030\uffcd\031\uffcd\041\uffcd\042\uffcd" +
    "\044\uffcd\045\uffcd\046\uffcd\050\uffcd\051\uffcd\052\uffcd\053" +
    "\uffcd\054\uffcd\057\uffcd\061\uffcd\062\uffcd\064\uffcd\070\uffcd" +
    "\073\uffcd\075\uffcd\077\uffcd\101\uffcd\104\uffcd\106\uffcd\107" +
    "\uffcd\112\uffcd\113\uffcd\122\uffcd\124\uffcd\133\uffcd\001\002" +
    "\000\136\002\uffca\005\uffca\006\uffca\007\uffca\010\uffca\011" +
    "\uffca\014\uffca\016\uffca\017\uffca\020\uffca\021\uffca\022\uffca" +
    "\023\uffca\024\uffca\025\uffca\026\uffca\027\uffca\030\uffca\031" +
    "\uffca\041\uffca\042\uffca\044\uffca\045\uffca\046\uffca\050\uffca" +
    "\051\uffca\052\uffca\053\uffca\054\uffca\057\uffca\061\uffca\062" +
    "\uffca\064\uffca\070\uffca\073\uffca\075\uffca\077\uffca\101\uffca" +
    "\104\uffca\106\uffca\107\uffca\112\uffca\113\uffca\122\uffca\124" +
    "\uffca\133\uffca\001\002\000\004\131\153\001\002\000\004" +
    "\006\154\001\002\000\136\002\uffbb\005\uffbb\006\uffbb\007" +
    "\uffbb\010\uffbb\011\uffbb\014\uffbb\016\uffbb\017\uffbb\020\uffbb" +
    "\021\uffbb\022\uffbb\023\uffbb\024\uffbb\025\uffbb\026\uffbb\027" +
    "\uffbb\030\uffbb\031\uffbb\041\uffbb\042\uffbb\044\uffbb\045\uffbb" +
    "\046\uffbb\050\uffbb\051\uffbb\052\uffbb\053\uffbb\054\uffbb\057" +
    "\uffbb\061\uffbb\062\uffbb\064\uffbb\070\uffbb\073\uffbb\075\uffbb" +
    "\077\uffbb\101\uffbb\104\uffbb\106\uffbb\107\uffbb\112\uffbb\113" +
    "\uffbb\122\uffbb\124\uffbb\133\uffbb\001\002\000\044\005\024" +
    "\006\uff84\013\074\016\072\056\071\057\016\067\107\073" +
    "\046\075\045\102\066\104\042\121\067\127\063\130\073" +
    "\131\061\132\070\133\065\001\002\000\042\005\024\013" +
    "\074\016\072\056\071\057\016\067\107\073\046\075\045" +
    "\102\066\104\042\121\067\127\063\130\073\131\061\132" +
    "\070\133\065\001\002\000\032\071\163\072\161\074\160" +
    "\111\174\114\171\115\170\116\167\117\166\120\165\125" +
    "\164\126\162\133\172\001\002\000\004\005\226\001\002" +
    "\000\004\005\222\001\002\000\004\013\217\001\002\000" +
    "\004\005\215\001\002\000\004\005\212\001\002\000\004" +
    "\005\uff73\001\002\000\004\005\uff77\001\002\000\004\005" +
    "\uff76\001\002\000\004\005\uff74\001\002\000\004\005\uff75" +
    "\001\002\000\140\002\uffae\005\201\006\uffae\007\uffae\010" +
    "\uffae\011\uffae\013\202\014\uffae\016\uffae\017\uffae\020\uffae" +
    "\021\uffae\022\uffae\023\uffae\024\uffae\025\uffae\026\uffae\027" +
    "\uffae\030\uffae\031\uffae\041\uffae\042\uffae\044\uffae\045\uffae" +
    "\046\uffae\050\uffae\051\uffae\052\uffae\053\uffae\054\uffae\057" +
    "\uffae\061\uffae\062\uffae\064\uffae\070\uffae\073\uffae\075\uffae" +
    "\077\uffae\101\uffae\104\uffae\106\uffae\107\uffae\112\uffae\113" +
    "\uffae\122\uffae\124\uffae\133\uffae\001\002\000\004\005\177" +
    "\001\002\000\004\005\175\001\002\000\004\006\176\001" +
    "\002\000\136\002\uffc0\005\uffc0\006\uffc0\007\uffc0\010\uffc0" +
    "\011\uffc0\014\uffc0\016\uffc0\017\uffc0\020\uffc0\021\uffc0\022" +
    "\uffc0\023\uffc0\024\uffc0\025\uffc0\026\uffc0\027\uffc0\030\uffc0" +
    "\031\uffc0\041\uffc0\042\uffc0\044\uffc0\045\uffc0\046\uffc0\050" +
    "\uffc0\051\uffc0\052\uffc0\053\uffc0\054\uffc0\057\uffc0\061\uffc0" +
    "\062\uffc0\064\uffc0\070\uffc0\073\uffc0\075\uffc0\077\uffc0\101" +
    "\uffc0\104\uffc0\106\uffc0\107\uffc0\112\uffc0\113\uffc0\122\uffc0" +
    "\124\uffc0\133\uffc0\001\002\000\004\006\200\001\002\000" +
    "\136\002\uffb6\005\uffb6\006\uffb6\007\uffb6\010\uffb6\011\uffb6" +
    "\014\uffb6\016\uffb6\017\uffb6\020\uffb6\021\uffb6\022\uffb6\023" +
    "\uffb6\024\uffb6\025\uffb6\026\uffb6\027\uffb6\030\uffb6\031\uffb6" +
    "\041\uffb6\042\uffb6\044\uffb6\045\uffb6\046\uffb6\050\uffb6\051" +
    "\uffb6\052\uffb6\053\uffb6\054\uffb6\057\uffb6\061\uffb6\062\uffb6" +
    "\064\uffb6\070\uffb6\073\uffb6\075\uffb6\077\uffb6\101\uffb6\104" +
    "\uffb6\106\uffb6\107\uffb6\112\uffb6\113\uffb6\122\uffb6\124\uffb6" +
    "\133\uffb6\001\002\000\044\005\024\006\uff84\013\074\016" +
    "\072\056\071\057\016\067\107\073\046\075\045\102\066" +
    "\104\042\121\067\127\063\130\073\131\061\132\070\133" +
    "\065\001\002\000\042\005\024\013\074\016\072\056\071" +
    "\057\016\067\107\073\046\075\045\102\066\104\042\121" +
    "\067\127\063\130\073\131\061\132\070\133\065\001\002" +
    "\000\004\014\204\001\002\000\136\002\uffad\005\uffad\006" +
    "\uffad\007\uffad\010\uffad\011\uffad\014\uffad\016\uffad\017\uffad" +
    "\020\uffad\021\uffad\022\uffad\023\uffad\024\uffad\025\uffad\026" +
    "\uffad\027\uffad\030\uffad\031\uffad\041\uffad\042\uffad\044\uffad" +
    "\045\uffad\046\uffad\050\uffad\051\uffad\052\uffad\053\uffad\054" +
    "\uffad\057\uffad\061\uffad\062\uffad\064\uffad\070\uffad\073\uffad" +
    "\075\uffad\077\uffad\101\uffad\104\uffad\106\uffad\107\uffad\112" +
    "\uffad\113\uffad\122\uffad\124\uffad\133\uffad\001\002\000\004" +
    "\006\211\001\002\000\006\006\uff83\011\207\001\002\000" +
    "\044\005\024\006\uff84\013\074\016\072\056\071\057\016" +
    "\067\107\073\046\075\045\102\066\104\042\121\067\127" +
    "\063\130\073\131\061\132\070\133\065\001\002\000\004" +
    "\006\uff82\001\002\000\136\002\uffab\005\uffab\006\uffab\007" +
    "\uffab\010\uffab\011\uffab\014\uffab\016\uffab\017\uffab\020\uffab" +
    "\021\uffab\022\uffab\023\uffab\024\uffab\025\uffab\026\uffab\027" +
    "\uffab\030\uffab\031\uffab\041\uffab\042\uffab\044\uffab\045\uffab" +
    "\046\uffab\050\uffab\051\uffab\052\uffab\053\uffab\054\uffab\057" +
    "\uffab\061\uffab\062\uffab\064\uffab\070\uffab\073\uffab\075\uffab" +
    "\077\uffab\101\uffab\104\uffab\106\uffab\107\uffab\112\uffab\113" +
    "\uffab\122\uffab\124\uffab\133\uffab\001\002\000\042\005\024" +
    "\013\074\016\072\056\071\057\016\067\107\073\046\075" +
    "\045\102\066\104\042\121\067\127\063\130\073\131\061" +
    "\132\070\133\065\001\002\000\004\006\214\001\002\000" +
    "\136\002\uffc3\005\uffc3\006\uffc3\007\uffc3\010\uffc3\011\uffc3" +
    "\014\uffc3\016\uffc3\017\uffc3\020\uffc3\021\uffc3\022\uffc3\023" +
    "\uffc3\024\uffc3\025\uffc3\026\uffc3\027\uffc3\030\uffc3\031\uffc3" +
    "\041\uffc3\042\uffc3\044\uffc3\045\uffc3\046\uffc3\050\uffc3\051" +
    "\uffc3\052\uffc3\053\uffc3\054\uffc3\057\uffc3\061\uffc3\062\uffc3" +
    "\064\uffc3\070\uffc3\073\uffc3\075\uffc3\077\uffc3\101\uffc3\104" +
    "\uffc3\106\uffc3\107\uffc3\112\uffc3\113\uffc3\122\uffc3\124\uffc3" +
    "\133\uffc3\001\002\000\004\006\216\001\002\000\136\002" +
    "\uffbf\005\uffbf\006\uffbf\007\uffbf\010\uffbf\011\uffbf\014\uffbf" +
    "\016\uffbf\017\uffbf\020\uffbf\021\uffbf\022\uffbf\023\uffbf\024" +
    "\uffbf\025\uffbf\026\uffbf\027\uffbf\030\uffbf\031\uffbf\041\uffbf" +
    "\042\uffbf\044\uffbf\045\uffbf\046\uffbf\050\uffbf\051\uffbf\052" +
    "\uffbf\053\uffbf\054\uffbf\057\uffbf\061\uffbf\062\uffbf\064\uffbf" +
    "\070\uffbf\073\uffbf\075\uffbf\077\uffbf\101\uffbf\104\uffbf\106" +
    "\uffbf\107\uffbf\112\uffbf\113\uffbf\122\uffbf\124\uffbf\133\uffbf" +
    "\001\002\000\042\005\024\013\074\016\072\056\071\057" +
    "\016\067\107\073\046\075\045\102\066\104\042\121\067" +
    "\127\063\130\073\131\061\132\070\133\065\001\002\000" +
    "\004\014\221\001\002\000\136\002\uffc2\005\uffc2\006\uffc2" +
    "\007\uffc2\010\uffc2\011\uffc2\014\uffc2\016\uffc2\017\uffc2\020" +
    "\uffc2\021\uffc2\022\uffc2\023\uffc2\024\uffc2\025\uffc2\026\uffc2" +
    "\027\uffc2\030\uffc2\031\uffc2\041\uffc2\042\uffc2\044\uffc2\045" +
    "\uffc2\046\uffc2\050\uffc2\051\uffc2\052\uffc2\053\uffc2\054\uffc2" +
    "\057\uffc2\061\uffc2\062\uffc2\064\uffc2\070\uffc2\073\uffc2\075" +
    "\uffc2\077\uffc2\101\uffc2\104\uffc2\106\uffc2\107\uffc2\112\uffc2" +
    "\113\uffc2\122\uffc2\124\uffc2\133\uffc2\001\002\000\022\044" +
    "\041\045\037\050\032\054\017\061\015\070\047\077\223" +
    "\112\021\001\002\000\006\006\uff78\133\uff78\001\002\000" +
    "\004\006\225\001\002\000\136\002\uffc5\005\uffc5\006\uffc5" +
    "\007\uffc5\010\uffc5\011\uffc5\014\uffc5\016\uffc5\017\uffc5\020" +
    "\uffc5\021\uffc5\022\uffc5\023\uffc5\024\uffc5\025\uffc5\026\uffc5" +
    "\027\uffc5\030\uffc5\031\uffc5\041\uffc5\042\uffc5\044\uffc5\045" +
    "\uffc5\046\uffc5\050\uffc5\051\uffc5\052\uffc5\053\uffc5\054\uffc5" +
    "\057\uffc5\061\uffc5\062\uffc5\064\uffc5\070\uffc5\073\uffc5\075" +
    "\uffc5\077\uffc5\101\uffc5\104\uffc5\106\uffc5\107\uffc5\112\uffc5" +
    "\113\uffc5\122\uffc5\124\uffc5\133\uffc5\001\002\000\004\006" +
    "\227\001\002\000\136\002\uffbc\005\uffbc\006\uffbc\007\uffbc" +
    "\010\uffbc\011\uffbc\014\uffbc\016\uffbc\017\uffbc\020\uffbc\021" +
    "\uffbc\022\uffbc\023\uffbc\024\uffbc\025\uffbc\026\uffbc\027\uffbc" +
    "\030\uffbc\031\uffbc\041\uffbc\042\uffbc\044\uffbc\045\uffbc\046" +
    "\uffbc\050\uffbc\051\uffbc\052\uffbc\053\uffbc\054\uffbc\057\uffbc" +
    "\061\uffbc\062\uffbc\064\uffbc\070\uffbc\073\uffbc\075\uffbc\077" +
    "\uffbc\101\uffbc\104\uffbc\106\uffbc\107\uffbc\112\uffbc\113\uffbc" +
    "\122\uffbc\124\uffbc\133\uffbc\001\002\000\004\014\231\001" +
    "\002\000\136\002\uffc4\005\uffc4\006\uffc4\007\uffc4\010\uffc4" +
    "\011\uffc4\014\uffc4\016\uffc4\017\uffc4\020\uffc4\021\uffc4\022" +
    "\uffc4\023\uffc4\024\uffc4\025\uffc4\026\uffc4\027\uffc4\030\uffc4" +
    "\031\uffc4\041\uffc4\042\uffc4\044\uffc4\045\uffc4\046\uffc4\050" +
    "\uffc4\051\uffc4\052\uffc4\053\uffc4\054\uffc4\057\uffc4\061\uffc4" +
    "\062\uffc4\064\uffc4\070\uffc4\073\uffc4\075\uffc4\077\uffc4\101" +
    "\uffc4\104\uffc4\106\uffc4\107\uffc4\112\uffc4\113\uffc4\122\uffc4" +
    "\124\uffc4\133\uffc4\001\002\000\004\006\233\001\002\000" +
    "\136\002\uffac\005\uffac\006\uffac\007\uffac\010\uffac\011\uffac" +
    "\014\uffac\016\uffac\017\uffac\020\uffac\021\uffac\022\uffac\023" +
    "\uffac\024\uffac\025\uffac\026\uffac\027\uffac\030\uffac\031\uffac" +
    "\041\uffac\042\uffac\044\uffac\045\uffac\046\uffac\050\uffac\051" +
    "\uffac\052\uffac\053\uffac\054\uffac\057\uffac\061\uffac\062\uffac" +
    "\064\uffac\070\uffac\073\uffac\075\uffac\077\uffac\101\uffac\104" +
    "\uffac\106\uffac\107\uffac\112\uffac\113\uffac\122\uffac\124\uffac" +
    "\133\uffac\001\002\000\042\005\024\013\074\016\072\056" +
    "\071\057\016\067\107\073\046\075\045\102\066\104\042" +
    "\121\067\127\063\130\073\131\061\132\070\133\065\001" +
    "\002\000\042\005\024\013\074\016\072\056\071\057\016" +
    "\067\107\073\046\075\045\102\066\104\042\121\067\127" +
    "\063\130\073\131\061\132\070\133\065\001\002\000\134" +
    "\002\uffa3\005\uffa3\006\uffa3\007\uffa3\010\uffa3\011\uffa3\014" +
    "\uffa3\016\uffa3\020\241\021\240\022\237\023\uffa3\024\uffa3" +
    "\025\uffa3\026\uffa3\027\uffa3\030\uffa3\031\uffa3\041\uffa3\042" +
    "\uffa3\044\uffa3\045\uffa3\046\uffa3\050\uffa3\051\uffa3\052\uffa3" +
    "\053\uffa3\054\uffa3\057\uffa3\061\uffa3\062\uffa3\064\uffa3\070" +
    "\uffa3\073\uffa3\075\uffa3\077\uffa3\101\uffa3\104\uffa3\106\uffa3" +
    "\107\uffa3\112\uffa3\113\uffa3\122\uffa3\124\uffa3\133\uffa3\001" +
    "\002\000\042\005\024\013\074\016\072\056\071\057\016" +
    "\067\107\073\046\075\045\102\066\104\042\121\067\127" +
    "\063\130\073\131\061\132\070\133\065\001\002\000\042" +
    "\005\024\013\074\016\072\056\071\057\016\067\107\073" +
    "\046\075\045\102\066\104\042\121\067\127\063\130\073" +
    "\131\061\132\070\133\065\001\002\000\042\005\024\013" +
    "\074\016\072\056\071\057\016\067\107\073\046\075\045" +
    "\102\066\104\042\121\067\127\063\130\073\131\061\132" +
    "\070\133\065\001\002\000\136\002\uffa7\005\uffa7\006\uffa7" +
    "\007\uffa7\010\uffa7\011\uffa7\014\uffa7\016\uffa7\017\114\020" +
    "\uffa7\021\uffa7\022\uffa7\023\uffa7\024\uffa7\025\uffa7\026\uffa7" +
    "\027\uffa7\030\uffa7\031\uffa7\041\uffa7\042\uffa7\044\uffa7\045" +
    "\uffa7\046\uffa7\050\uffa7\051\uffa7\052\uffa7\053\uffa7\054\uffa7" +
    "\057\uffa7\061\uffa7\062\uffa7\064\uffa7\070\uffa7\073\uffa7\075" +
    "\uffa7\077\uffa7\101\uffa7\104\uffa7\106\uffa7\107\uffa7\112\uffa7" +
    "\113\uffa7\122\uffa7\124\uffa7\133\uffa7\001\002\000\136\002" +
    "\uffa6\005\uffa6\006\uffa6\007\uffa6\010\uffa6\011\uffa6\014\uffa6" +
    "\016\uffa6\017\114\020\uffa6\021\uffa6\022\uffa6\023\uffa6\024" +
    "\uffa6\025\uffa6\026\uffa6\027\uffa6\030\uffa6\031\uffa6\041\uffa6" +
    "\042\uffa6\044\uffa6\045\uffa6\046\uffa6\050\uffa6\051\uffa6\052" +
    "\uffa6\053\uffa6\054\uffa6\057\uffa6\061\uffa6\062\uffa6\064\uffa6" +
    "\070\uffa6\073\uffa6\075\uffa6\077\uffa6\101\uffa6\104\uffa6\106" +
    "\uffa6\107\uffa6\112\uffa6\113\uffa6\122\uffa6\124\uffa6\133\uffa6" +
    "\001\002\000\136\002\uffa5\005\uffa5\006\uffa5\007\uffa5\010" +
    "\uffa5\011\uffa5\014\uffa5\016\uffa5\017\114\020\uffa5\021\uffa5" +
    "\022\uffa5\023\uffa5\024\uffa5\025\uffa5\026\uffa5\027\uffa5\030" +
    "\uffa5\031\uffa5\041\uffa5\042\uffa5\044\uffa5\045\uffa5\046\uffa5" +
    "\050\uffa5\051\uffa5\052\uffa5\053\uffa5\054\uffa5\057\uffa5\061" +
    "\uffa5\062\uffa5\064\uffa5\070\uffa5\073\uffa5\075\uffa5\077\uffa5" +
    "\101\uffa5\104\uffa5\106\uffa5\107\uffa5\112\uffa5\113\uffa5\122" +
    "\uffa5\124\uffa5\133\uffa5\001\002\000\134\002\uffa2\005\uffa2" +
    "\006\uffa2\007\uffa2\010\uffa2\011\uffa2\014\uffa2\016\uffa2\020" +
    "\241\021\240\022\237\023\uffa2\024\uffa2\025\uffa2\026\uffa2" +
    "\027\uffa2\030\uffa2\031\uffa2\041\uffa2\042\uffa2\044\uffa2\045" +
    "\uffa2\046\uffa2\050\uffa2\051\uffa2\052\uffa2\053\uffa2\054\uffa2" +
    "\057\uffa2\061\uffa2\062\uffa2\064\uffa2\070\uffa2\073\uffa2\075" +
    "\uffa2\077\uffa2\101\uffa2\104\uffa2\106\uffa2\107\uffa2\112\uffa2" +
    "\113\uffa2\122\uffa2\124\uffa2\133\uffa2\001\002\000\004\007" +
    "\247\001\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0" +
    "\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054" +
    "\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0" +
    "\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112" +
    "\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\072" +
    "\005\024\007\022\010\251\044\041\045\037\046\035\050" +
    "\032\051\031\052\030\053\027\054\017\057\016\061\015" +
    "\062\013\064\012\070\047\073\046\075\045\077\044\101" +
    "\043\104\042\106\036\107\034\112\021\113\020\122\014" +
    "\124\051\133\025\001\002\000\074\002\uffdf\005\uffdf\007" +
    "\uffdf\010\uffdf\044\uffdf\045\uffdf\046\uffdf\050\uffdf\051\uffdf" +
    "\052\uffdf\053\uffdf\054\uffdf\057\uffdf\061\uffdf\062\uffdf\064" +
    "\uffdf\070\uffdf\073\uffdf\075\uffdf\077\uffdf\101\uffdf\104\uffdf" +
    "\106\uffdf\107\uffdf\112\uffdf\113\uffdf\122\uffdf\124\uffdf\133" +
    "\uffdf\001\002\000\024\006\uffd3\044\041\045\037\050\032" +
    "\054\017\061\015\070\047\077\223\112\021\001\002\000" +
    "\004\006\261\001\002\000\004\133\260\001\002\000\006" +
    "\006\uffd2\011\256\001\002\000\024\006\uffd3\044\041\045" +
    "\037\050\032\054\017\061\015\070\047\077\223\112\021" +
    "\001\002\000\004\006\uffd1\001\002\000\006\006\uffd4\011" +
    "\uffd4\001\002\000\004\007\262\001\002\000\072\005\uffd0" +
    "\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046\uffd0\050\uffd0\051" +
    "\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061\uffd0\062\uffd0" +
    "\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0\101\uffd0\104" +
    "\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122\uffd0\124\uffd0" +
    "\133\uffd0\001\002\000\072\005\024\007\022\010\264\044" +
    "\041\045\037\046\035\050\032\051\031\052\030\053\027" +
    "\054\017\057\016\061\015\062\013\064\012\070\047\073" +
    "\046\075\045\077\044\101\043\104\042\106\036\107\034" +
    "\112\021\113\020\122\014\124\051\133\025\001\002\000" +
    "\136\002\uffb5\005\uffb5\006\uffb5\007\uffb5\010\uffb5\011\uffb5" +
    "\014\uffb5\016\uffb5\017\uffb5\020\uffb5\021\uffb5\022\uffb5\023" +
    "\uffb5\024\uffb5\025\uffb5\026\uffb5\027\uffb5\030\uffb5\031\uffb5" +
    "\041\uffb5\042\uffb5\044\uffb5\045\uffb5\046\uffb5\050\uffb5\051" +
    "\uffb5\052\uffb5\053\uffb5\054\uffb5\057\uffb5\061\uffb5\062\uffb5" +
    "\064\uffb5\070\uffb5\073\uffb5\075\uffb5\077\uffb5\101\uffb5\104" +
    "\uffb5\106\uffb5\107\uffb5\112\uffb5\113\uffb5\122\uffb5\124\uffb5" +
    "\133\uffb5\001\002\000\042\005\024\013\074\016\072\056" +
    "\071\057\016\067\107\073\046\075\045\102\066\104\042" +
    "\121\067\127\063\130\073\131\061\132\070\133\065\001" +
    "\002\000\004\011\267\001\002\000\006\013\271\133\270" +
    "\001\002\000\004\006\275\001\002\000\044\005\024\013" +
    "\074\014\uffe6\016\072\056\071\057\016\067\107\073\046" +
    "\075\045\102\066\104\042\121\067\127\063\130\073\131" +
    "\061\132\070\133\065\001\002\000\004\014\273\001\002" +
    "\000\004\006\274\001\002\000\136\002\uffb3\005\uffb3\006" +
    "\uffb3\007\uffb3\010\uffb3\011\uffb3\014\uffb3\016\uffb3\017\uffb3" +
    "\020\uffb3\021\uffb3\022\uffb3\023\uffb3\024\uffb3\025\uffb3\026" +
    "\uffb3\027\uffb3\030\uffb3\031\uffb3\041\uffb3\042\uffb3\044\uffb3" +
    "\045\uffb3\046\uffb3\050\uffb3\051\uffb3\052\uffb3\053\uffb3\054" +
    "\uffb3\057\uffb3\061\uffb3\062\uffb3\064\uffb3\070\uffb3\073\uffb3" +
    "\075\uffb3\077\uffb3\101\uffb3\104\uffb3\106\uffb3\107\uffb3\112" +
    "\uffb3\113\uffb3\122\uffb3\124\uffb3\133\uffb3\001\002\000\136" +
    "\002\uffb4\005\uffb4\006\uffb4\007\uffb4\010\uffb4\011\uffb4\014" +
    "\uffb4\016\uffb4\017\uffb4\020\uffb4\021\uffb4\022\uffb4\023\uffb4" +
    "\024\uffb4\025\uffb4\026\uffb4\027\uffb4\030\uffb4\031\uffb4\041" +
    "\uffb4\042\uffb4\044\uffb4\045\uffb4\046\uffb4\050\uffb4\051\uffb4" +
    "\052\uffb4\053\uffb4\054\uffb4\057\uffb4\061\uffb4\062\uffb4\064" +
    "\uffb4\070\uffb4\073\uffb4\075\uffb4\077\uffb4\101\uffb4\104\uffb4" +
    "\106\uffb4\107\uffb4\112\uffb4\113\uffb4\122\uffb4\124\uffb4\133" +
    "\uffb4\001\002\000\004\015\277\001\002\000\004\076\300" +
    "\001\002\000\004\133\301\001\002\000\004\005\302\001" +
    "\002\000\044\005\024\006\uff84\013\074\016\072\056\071" +
    "\057\016\067\107\073\046\075\045\102\066\104\042\121" +
    "\067\127\063\130\073\131\061\132\070\133\065\001\002" +
    "\000\004\006\304\001\002\000\074\002\uffea\005\uffea\007" +
    "\uffea\010\uffea\044\uffea\045\uffea\046\uffea\050\uffea\051\uffea" +
    "\052\uffea\053\uffea\054\uffea\057\uffea\061\uffea\062\uffea\064" +
    "\uffea\070\uffea\073\uffea\075\uffea\077\uffea\101\uffea\104\uffea" +
    "\106\uffea\107\uffea\112\uffea\113\uffea\122\uffea\124\uffea\133" +
    "\uffea\001\002\000\074\002\ufff8\005\ufff8\007\ufff8\010\ufff8" +
    "\044\ufff8\045\ufff8\046\ufff8\050\ufff8\051\ufff8\052\ufff8\053" +
    "\ufff8\054\ufff8\057\ufff8\061\ufff8\062\ufff8\064\ufff8\070\ufff8" +
    "\073\ufff8\075\ufff8\077\ufff8\101\ufff8\104\ufff8\106\ufff8\107" +
    "\ufff8\112\ufff8\113\ufff8\122\ufff8\124\ufff8\133\ufff8\001\002" +
    "\000\042\005\024\013\074\016\072\056\071\057\016\067" +
    "\107\073\046\075\045\102\066\104\042\121\067\127\063" +
    "\130\073\131\061\132\070\133\065\001\002\000\004\011" +
    "\310\001\002\000\006\013\312\133\311\001\002\000\004" +
    "\006\316\001\002\000\044\005\024\013\074\014\uffe6\016" +
    "\072\056\071\057\016\067\107\073\046\075\045\102\066" +
    "\104\042\121\067\127\063\130\073\131\061\132\070\133" +
    "\065\001\002\000\004\014\314\001\002\000\004\006\315" +
    "\001\002\000\136\002\uffaf\005\uffaf\006\uffaf\007\uffaf\010" +
    "\uffaf\011\uffaf\014\uffaf\016\uffaf\017\uffaf\020\uffaf\021\uffaf" +
    "\022\uffaf\023\uffaf\024\uffaf\025\uffaf\026\uffaf\027\uffaf\030" +
    "\uffaf\031\uffaf\041\uffaf\042\uffaf\044\uffaf\045\uffaf\046\uffaf" +
    "\050\uffaf\051\uffaf\052\uffaf\053\uffaf\054\uffaf\057\uffaf\061" +
    "\uffaf\062\uffaf\064\uffaf\070\uffaf\073\uffaf\075\uffaf\077\uffaf" +
    "\101\uffaf\104\uffaf\106\uffaf\107\uffaf\112\uffaf\113\uffaf\122" +
    "\uffaf\124\uffaf\133\uffaf\001\002\000\136\002\uffb0\005\uffb0" +
    "\006\uffb0\007\uffb0\010\uffb0\011\uffb0\014\uffb0\016\uffb0\017" +
    "\uffb0\020\uffb0\021\uffb0\022\uffb0\023\uffb0\024\uffb0\025\uffb0" +
    "\026\uffb0\027\uffb0\030\uffb0\031\uffb0\041\uffb0\042\uffb0\044" +
    "\uffb0\045\uffb0\046\uffb0\050\uffb0\051\uffb0\052\uffb0\053\uffb0" +
    "\054\uffb0\057\uffb0\061\uffb0\062\uffb0\064\uffb0\070\uffb0\073" +
    "\uffb0\075\uffb0\077\uffb0\101\uffb0\104\uffb0\106\uffb0\107\uffb0" +
    "\112\uffb0\113\uffb0\122\uffb0\124\uffb0\133\uffb0\001\002\000" +
    "\004\133\u0107\001\002\000\004\011\360\001\002\000\004" +
    "\065\322\001\002\000\010\013\325\103\324\133\323\001" +
    "\002\000\004\007\355\001\002\000\004\005\333\001\002" +
    "\000\044\005\024\013\074\014\uffe6\016\072\056\071\057" +
    "\016\067\107\073\046\075\045\102\066\104\042\121\067" +
    "\127\063\130\073\131\061\132\070\133\065\001\002\000" +
    "\004\014\327\001\002\000\004\007\330\001\002\000\072" +
    "\005\uffd0\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046\uffd0\050" +
    "\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061\uffd0" +
    "\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0\101" +
    "\uffd0\104\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122\uffd0" +
    "\124\uffd0\133\uffd0\001\002\000\072\005\024\007\022\010" +
    "\332\044\041\045\037\046\035\050\032\051\031\052\030" +
    "\053\027\054\017\057\016\061\015\062\013\064\012\070" +
    "\047\073\046\075\045\077\044\101\043\104\042\106\036" +
    "\107\034\112\021\113\020\122\014\124\051\133\025\001" +
    "\002\000\074\002\uffdd\005\uffdd\007\uffdd\010\uffdd\044\uffdd" +
    "\045\uffdd\046\uffdd\050\uffdd\051\uffdd\052\uffdd\053\uffdd\054" +
    "\uffdd\057\uffdd\061\uffdd\062\uffdd\064\uffdd\070\uffdd\073\uffdd" +
    "\075\uffdd\077\uffdd\101\uffdd\104\uffdd\106\uffdd\107\uffdd\112" +
    "\uffdd\113\uffdd\122\uffdd\124\uffdd\133\uffdd\001\002\000\042" +
    "\005\024\013\074\016\072\056\071\057\016\067\107\073" +
    "\046\075\045\102\066\104\042\121\067\127\063\130\073" +
    "\131\061\132\070\133\065\001\002\000\006\006\335\011" +
    "\336\001\002\000\004\007\352\001\002\000\042\005\024" +
    "\013\074\016\072\056\071\057\016\067\107\073\046\075" +
    "\045\102\066\104\042\121\067\127\063\130\073\131\061" +
    "\132\070\133\065\001\002\000\006\006\340\011\341\001" +
    "\002\000\004\007\347\001\002\000\042\005\024\013\074" +
    "\016\072\056\071\057\016\067\107\073\046\075\045\102" +
    "\066\104\042\121\067\127\063\130\073\131\061\132\070" +
    "\133\065\001\002\000\004\006\343\001\002\000\004\007" +
    "\344\001\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0" +
    "\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054" +
    "\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0" +
    "\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112" +
    "\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\072" +
    "\005\024\007\022\010\346\044\041\045\037\046\035\050" +
    "\032\051\031\052\030\053\027\054\017\057\016\061\015" +
    "\062\013\064\012\070\047\073\046\075\045\077\044\101" +
    "\043\104\042\106\036\107\034\112\021\113\020\122\014" +
    "\124\051\133\025\001\002\000\074\002\uffda\005\uffda\007" +
    "\uffda\010\uffda\044\uffda\045\uffda\046\uffda\050\uffda\051\uffda" +
    "\052\uffda\053\uffda\054\uffda\057\uffda\061\uffda\062\uffda\064" +
    "\uffda\070\uffda\073\uffda\075\uffda\077\uffda\101\uffda\104\uffda" +
    "\106\uffda\107\uffda\112\uffda\113\uffda\122\uffda\124\uffda\133" +
    "\uffda\001\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0" +
    "\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054" +
    "\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0" +
    "\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112" +
    "\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\072" +
    "\005\024\007\022\010\351\044\041\045\037\046\035\050" +
    "\032\051\031\052\030\053\027\054\017\057\016\061\015" +
    "\062\013\064\012\070\047\073\046\075\045\077\044\101" +
    "\043\104\042\106\036\107\034\112\021\113\020\122\014" +
    "\124\051\133\025\001\002\000\074\002\uffdb\005\uffdb\007" +
    "\uffdb\010\uffdb\044\uffdb\045\uffdb\046\uffdb\050\uffdb\051\uffdb" +
    "\052\uffdb\053\uffdb\054\uffdb\057\uffdb\061\uffdb\062\uffdb\064" +
    "\uffdb\070\uffdb\073\uffdb\075\uffdb\077\uffdb\101\uffdb\104\uffdb" +
    "\106\uffdb\107\uffdb\112\uffdb\113\uffdb\122\uffdb\124\uffdb\133" +
    "\uffdb\001\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0" +
    "\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054" +
    "\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0" +
    "\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112" +
    "\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\072" +
    "\005\024\007\022\010\354\044\041\045\037\046\035\050" +
    "\032\051\031\052\030\053\027\054\017\057\016\061\015" +
    "\062\013\064\012\070\047\073\046\075\045\077\044\101" +
    "\043\104\042\106\036\107\034\112\021\113\020\122\014" +
    "\124\051\133\025\001\002\000\074\002\uffdc\005\uffdc\007" +
    "\uffdc\010\uffdc\044\uffdc\045\uffdc\046\uffdc\050\uffdc\051\uffdc" +
    "\052\uffdc\053\uffdc\054\uffdc\057\uffdc\061\uffdc\062\uffdc\064" +
    "\uffdc\070\uffdc\073\uffdc\075\uffdc\077\uffdc\101\uffdc\104\uffdc" +
    "\106\uffdc\107\uffdc\112\uffdc\113\uffdc\122\uffdc\124\uffdc\133" +
    "\uffdc\001\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0" +
    "\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054" +
    "\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0" +
    "\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112" +
    "\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\072" +
    "\005\024\007\022\010\357\044\041\045\037\046\035\050" +
    "\032\051\031\052\030\053\027\054\017\057\016\061\015" +
    "\062\013\064\012\070\047\073\046\075\045\077\044\101" +
    "\043\104\042\106\036\107\034\112\021\113\020\122\014" +
    "\124\051\133\025\001\002\000\074\002\uffde\005\uffde\007" +
    "\uffde\010\uffde\044\uffde\045\uffde\046\uffde\050\uffde\051\uffde" +
    "\052\uffde\053\uffde\054\uffde\057\uffde\061\uffde\062\uffde\064" +
    "\uffde\070\uffde\073\uffde\075\uffde\077\uffde\101\uffde\104\uffde" +
    "\106\uffde\107\uffde\112\uffde\113\uffde\122\uffde\124\uffde\133" +
    "\uffde\001\002\000\042\005\024\013\074\016\072\056\071" +
    "\057\016\067\107\073\046\075\045\102\066\104\042\121" +
    "\067\127\063\130\073\131\061\132\070\133\065\001\002" +
    "\000\004\011\362\001\002\000\004\133\364\001\002\000" +
    "\004\007\u0104\001\002\000\022\015\u0102\032\377\033\376" +
    "\034\375\035\374\036\373\037\372\040\371\001\002\000" +
    "\004\007\366\001\002\000\072\005\uffd0\007\uffd0\010\uffd0" +
    "\044\uffd0\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053" +
    "\uffd0\054\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0" +
    "\073\uffd0\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107" +
    "\uffd0\112\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002" +
    "\000\072\005\024\007\022\010\370\044\041\045\037\046" +
    "\035\050\032\051\031\052\030\053\027\054\017\057\016" +
    "\061\015\062\013\064\012\070\047\073\046\075\045\077" +
    "\044\101\043\104\042\106\036\107\034\112\021\113\020" +
    "\122\014\124\051\133\025\001\002\000\074\002\uffd8\005" +
    "\uffd8\007\uffd8\010\uffd8\044\uffd8\045\uffd8\046\uffd8\050\uffd8" +
    "\051\uffd8\052\uffd8\053\uffd8\054\uffd8\057\uffd8\061\uffd8\062" +
    "\uffd8\064\uffd8\070\uffd8\073\uffd8\075\uffd8\077\uffd8\101\uffd8" +
    "\104\uffd8\106\uffd8\107\uffd8\112\uffd8\113\uffd8\122\uffd8\124" +
    "\uffd8\133\uffd8\001\002\000\074\002\uff8d\005\uff8d\007\uff8d" +
    "\010\uff8d\044\uff8d\045\uff8d\046\uff8d\050\uff8d\051\uff8d\052" +
    "\uff8d\053\uff8d\054\uff8d\057\uff8d\061\uff8d\062\uff8d\064\uff8d" +
    "\070\uff8d\073\uff8d\075\uff8d\077\uff8d\101\uff8d\104\uff8d\106" +
    "\uff8d\107\uff8d\112\uff8d\113\uff8d\122\uff8d\124\uff8d\133\uff8d" +
    "\001\002\000\074\002\uff8e\005\uff8e\007\uff8e\010\uff8e\044" +
    "\uff8e\045\uff8e\046\uff8e\050\uff8e\051\uff8e\052\uff8e\053\uff8e" +
    "\054\uff8e\057\uff8e\061\uff8e\062\uff8e\064\uff8e\070\uff8e\073" +
    "\uff8e\075\uff8e\077\uff8e\101\uff8e\104\uff8e\106\uff8e\107\uff8e" +
    "\112\uff8e\113\uff8e\122\uff8e\124\uff8e\133\uff8e\001\002\000" +
    "\042\005\uff8f\013\uff8f\016\uff8f\056\uff8f\057\uff8f\067\uff8f" +
    "\073\uff8f\075\uff8f\102\uff8f\104\uff8f\121\uff8f\127\uff8f\130" +
    "\uff8f\131\uff8f\132\uff8f\133\uff8f\001\002\000\042\005\uff90" +
    "\013\uff90\016\uff90\056\uff90\057\uff90\067\uff90\073\uff90\075" +
    "\uff90\102\uff90\104\uff90\121\uff90\127\uff90\130\uff90\131\uff90" +
    "\132\uff90\133\uff90\001\002\000\042\005\uff91\013\uff91\016" +
    "\uff91\056\uff91\057\uff91\067\uff91\073\uff91\075\uff91\102\uff91" +
    "\104\uff91\121\uff91\127\uff91\130\uff91\131\uff91\132\uff91\133" +
    "\uff91\001\002\000\042\005\uff92\013\uff92\016\uff92\056\uff92" +
    "\057\uff92\067\uff92\073\uff92\075\uff92\102\uff92\104\uff92\121" +
    "\uff92\127\uff92\130\uff92\131\uff92\132\uff92\133\uff92\001\002" +
    "\000\042\005\uff93\013\uff93\016\uff93\056\uff93\057\uff93\067" +
    "\uff93\073\uff93\075\uff93\102\uff93\104\uff93\121\uff93\127\uff93" +
    "\130\uff93\131\uff93\132\uff93\133\uff93\001\002\000\074\002" +
    "\uffe0\005\uffe0\007\uffe0\010\uffe0\044\uffe0\045\uffe0\046\uffe0" +
    "\050\uffe0\051\uffe0\052\uffe0\053\uffe0\054\uffe0\057\uffe0\061" +
    "\uffe0\062\uffe0\064\uffe0\070\uffe0\073\uffe0\075\uffe0\077\uffe0" +
    "\101\uffe0\104\uffe0\106\uffe0\107\uffe0\112\uffe0\113\uffe0\122" +
    "\uffe0\124\uffe0\133\uffe0\001\002\000\042\005\024\013\074" +
    "\016\072\056\071\057\016\067\107\073\046\075\045\102" +
    "\066\104\042\121\067\127\063\130\073\131\061\132\070" +
    "\133\065\001\002\000\042\005\uff94\013\uff94\016\uff94\056" +
    "\uff94\057\uff94\067\uff94\073\uff94\075\uff94\102\uff94\104\uff94" +
    "\121\uff94\127\uff94\130\uff94\131\uff94\132\uff94\133\uff94\001" +
    "\002\000\074\002\uffe1\005\uffe1\007\uffe1\010\uffe1\044\uffe1" +
    "\045\uffe1\046\uffe1\050\uffe1\051\uffe1\052\uffe1\053\uffe1\054" +
    "\uffe1\057\uffe1\061\uffe1\062\uffe1\064\uffe1\070\uffe1\073\uffe1" +
    "\075\uffe1\077\uffe1\101\uffe1\104\uffe1\106\uffe1\107\uffe1\112" +
    "\uffe1\113\uffe1\122\uffe1\124\uffe1\133\uffe1\001\002\000\072" +
    "\005\uffd0\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046\uffd0\050" +
    "\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061\uffd0" +
    "\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0\101" +
    "\uffd0\104\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122\uffd0" +
    "\124\uffd0\133\uffd0\001\002\000\072\005\024\007\022\010" +
    "\u0106\044\041\045\037\046\035\050\032\051\031\052\030" +
    "\053\027\054\017\057\016\061\015\062\013\064\012\070" +
    "\047\073\046\075\045\077\044\101\043\104\042\106\036" +
    "\107\034\112\021\113\020\122\014\124\051\133\025\001" +
    "\002\000\074\002\uffd9\005\uffd9\007\uffd9\010\uffd9\044\uffd9" +
    "\045\uffd9\046\uffd9\050\uffd9\051\uffd9\052\uffd9\053\uffd9\054" +
    "\uffd9\057\uffd9\061\uffd9\062\uffd9\064\uffd9\070\uffd9\073\uffd9" +
    "\075\uffd9\077\uffd9\101\uffd9\104\uffd9\106\uffd9\107\uffd9\112" +
    "\uffd9\113\uffd9\122\uffd9\124\uffd9\133\uffd9\001\002\000\004" +
    "\015\057\001\002\000\074\002\uffeb\005\uffeb\007\uffeb\010" +
    "\uffeb\044\uffeb\045\uffeb\046\uffeb\050\uffeb\051\uffeb\052\uffeb" +
    "\053\uffeb\054\uffeb\057\uffeb\061\uffeb\062\uffeb\064\uffeb\070" +
    "\uffeb\073\uffeb\075\uffeb\077\uffeb\101\uffeb\104\uffeb\106\uffeb" +
    "\107\uffeb\112\uffeb\113\uffeb\122\uffeb\124\uffeb\133\uffeb\001" +
    "\002\000\006\007\u010a\066\u010b\001\002\000\072\005\uffd0" +
    "\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046\uffd0\050\uffd0\051" +
    "\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061\uffd0\062\uffd0" +
    "\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0\101\uffd0\104" +
    "\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122\uffd0\124\uffd0" +
    "\133\uffd0\001\002\000\004\133\u010c\001\002\000\004\007" +
    "\u010d\001\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0" +
    "\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054" +
    "\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0" +
    "\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112" +
    "\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\072" +
    "\005\024\007\022\010\u010f\044\041\045\037\046\035\050" +
    "\032\051\031\052\030\053\027\054\017\057\016\061\015" +
    "\062\013\064\012\070\047\073\046\075\045\077\044\101" +
    "\043\104\042\106\036\107\034\112\021\113\020\122\014" +
    "\124\051\133\025\001\002\000\074\002\ufffb\005\ufffb\007" +
    "\ufffb\010\ufffb\044\ufffb\045\ufffb\046\ufffb\050\ufffb\051\ufffb" +
    "\052\ufffb\053\ufffb\054\ufffb\057\ufffb\061\ufffb\062\ufffb\064" +
    "\ufffb\070\ufffb\073\ufffb\075\ufffb\077\ufffb\101\ufffb\104\ufffb" +
    "\106\ufffb\107\ufffb\112\ufffb\113\ufffb\122\ufffb\124\ufffb\133" +
    "\ufffb\001\002\000\072\005\024\007\022\010\u0111\044\041" +
    "\045\037\046\035\050\032\051\031\052\030\053\027\054" +
    "\017\057\016\061\015\062\013\064\012\070\047\073\046" +
    "\075\045\077\044\101\043\104\042\106\036\107\034\112" +
    "\021\113\020\122\014\124\051\133\025\001\002\000\074" +
    "\002\ufffc\005\ufffc\007\ufffc\010\ufffc\044\ufffc\045\ufffc\046" +
    "\ufffc\050\ufffc\051\ufffc\052\ufffc\053\ufffc\054\ufffc\057\ufffc" +
    "\061\ufffc\062\ufffc\064\ufffc\070\ufffc\073\ufffc\075\ufffc\077" +
    "\ufffc\101\ufffc\104\ufffc\106\ufffc\107\ufffc\112\ufffc\113\ufffc" +
    "\122\ufffc\124\ufffc\133\ufffc\001\002\000\004\005\u0113\001" +
    "\002\000\024\006\uffd3\044\041\045\037\050\032\054\017" +
    "\061\015\070\047\077\223\112\021\001\002\000\004\006" +
    "\u0115\001\002\000\004\007\u0116\001\002\000\072\005\uffd0" +
    "\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046\uffd0\050\uffd0\051" +
    "\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061\uffd0\062\uffd0" +
    "\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0\101\uffd0\104" +
    "\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122\uffd0\124\uffd0" +
    "\133\uffd0\001\002\000\072\005\024\007\022\010\u0118\044" +
    "\041\045\037\046\035\050\032\051\031\052\030\053\027" +
    "\054\017\057\016\061\015\062\013\064\012\070\047\073" +
    "\046\075\045\077\044\101\043\104\042\106\036\107\034" +
    "\112\021\113\020\122\014\124\051\133\025\001\002\000" +
    "\074\002\ufffd\005\ufffd\007\ufffd\010\ufffd\044\ufffd\045\ufffd" +
    "\046\ufffd\050\ufffd\051\ufffd\052\ufffd\053\ufffd\054\ufffd\057" +
    "\ufffd\061\ufffd\062\ufffd\064\ufffd\070\ufffd\073\ufffd\075\ufffd" +
    "\077\ufffd\101\ufffd\104\ufffd\106\ufffd\107\ufffd\112\ufffd\113" +
    "\ufffd\122\ufffd\124\ufffd\133\ufffd\001\002\000\024\043\u011a" +
    "\105\u011c\110\u011b\114\171\115\170\116\167\117\166\120" +
    "\165\133\172\001\002\000\004\005\u0125\001\002\000\004" +
    "\005\u0120\001\002\000\004\013\u011d\001\002\000\042\005" +
    "\024\013\074\016\072\056\071\057\016\067\107\073\046" +
    "\075\045\102\066\104\042\121\067\127\063\130\073\131" +
    "\061\132\070\133\065\001\002\000\004\014\u011f\001\002" +
    "\000\074\002\uffed\005\uffed\007\uffed\010\uffed\044\uffed\045" +
    "\uffed\046\uffed\050\uffed\051\uffed\052\uffed\053\uffed\054\uffed" +
    "\057\uffed\061\uffed\062\uffed\064\uffed\070\uffed\073\uffed\075" +
    "\uffed\077\uffed\101\uffed\104\uffed\106\uffed\107\uffed\112\uffed" +
    "\113\uffed\122\uffed\124\uffed\133\uffed\001\002\000\042\005" +
    "\024\013\074\016\072\056\071\057\016\067\107\073\046" +
    "\075\045\102\066\104\042\121\067\127\063\130\073\131" +
    "\061\132\070\133\065\001\002\000\004\011\u0122\001\002" +
    "\000\042\005\024\013\074\016\072\056\071\057\016\067" +
    "\107\073\046\075\045\102\066\104\042\121\067\127\063" +
    "\130\073\131\061\132\070\133\065\001\002\000\004\006" +
    "\u0124\001\002\000\074\002\uffec\005\uffec\007\uffec\010\uffec" +
    "\044\uffec\045\uffec\046\uffec\050\uffec\051\uffec\052\uffec\053" +
    "\uffec\054\uffec\057\uffec\061\uffec\062\uffec\064\uffec\070\uffec" +
    "\073\uffec\075\uffec\077\uffec\101\uffec\104\uffec\106\uffec\107" +
    "\uffec\112\uffec\113\uffec\122\uffec\124\uffec\133\uffec\001\002" +
    "\000\042\005\024\013\074\016\072\056\071\057\016\067" +
    "\107\073\046\075\045\102\066\104\042\121\067\127\063" +
    "\130\073\131\061\132\070\133\065\001\002\000\004\006" +
    "\u0127\001\002\000\074\002\uffee\005\uffee\007\uffee\010\uffee" +
    "\044\uffee\045\uffee\046\uffee\050\uffee\051\uffee\052\uffee\053" +
    "\uffee\054\uffee\057\uffee\061\uffee\062\uffee\064\uffee\070\uffee" +
    "\073\uffee\075\uffee\077\uffee\101\uffee\104\uffee\106\uffee\107" +
    "\uffee\112\uffee\113\uffee\122\uffee\124\uffee\133\uffee\001\002" +
    "\000\004\006\u0129\001\002\000\136\002\uffaa\005\uffaa\006" +
    "\uffaa\007\uffaa\010\uffaa\011\uffaa\014\uffaa\016\uffaa\017\uffaa" +
    "\020\uffaa\021\uffaa\022\uffaa\023\uffaa\024\uffaa\025\uffaa\026" +
    "\uffaa\027\uffaa\030\uffaa\031\uffaa\041\uffaa\042\uffaa\044\uffaa" +
    "\045\uffaa\046\uffaa\050\uffaa\051\uffaa\052\uffaa\053\uffaa\054" +
    "\uffaa\057\uffaa\061\uffaa\062\uffaa\064\uffaa\070\uffaa\073\uffaa" +
    "\075\uffaa\077\uffaa\101\uffaa\104\uffaa\106\uffaa\107\uffaa\112" +
    "\uffaa\113\uffaa\122\uffaa\124\uffaa\133\uffaa\001\002\000\072" +
    "\005\024\007\022\010\u012b\044\041\045\037\046\035\050" +
    "\032\051\031\052\030\053\027\054\017\057\016\061\015" +
    "\062\013\064\012\070\047\073\046\075\045\077\044\101" +
    "\043\104\042\106\036\107\034\112\021\113\020\122\014" +
    "\124\051\133\025\001\002\000\074\002\uffe8\005\uffe8\007" +
    "\uffe8\010\uffe8\044\uffe8\045\uffe8\046\uffe8\050\uffe8\051\uffe8" +
    "\052\uffe8\053\uffe8\054\uffe8\057\uffe8\061\uffe8\062\uffe8\064" +
    "\uffe8\070\uffe8\073\uffe8\075\uffe8\077\uffe8\101\uffe8\104\uffe8" +
    "\106\uffe8\107\uffe8\112\uffe8\113\uffe8\122\uffe8\124\uffe8\133" +
    "\uffe8\001\002\000\074\002\ufff5\005\ufff5\007\ufff5\010\ufff5" +
    "\044\ufff5\045\ufff5\046\ufff5\050\ufff5\051\ufff5\052\ufff5\053" +
    "\ufff5\054\ufff5\057\ufff5\061\ufff5\062\ufff5\064\ufff5\070\ufff5" +
    "\073\ufff5\075\ufff5\077\ufff5\101\ufff5\104\ufff5\106\ufff5\107" +
    "\ufff5\112\ufff5\113\ufff5\122\ufff5\124\ufff5\133\ufff5\001\002" +
    "\000\042\005\024\013\074\016\072\056\071\057\016\067" +
    "\107\073\046\075\045\102\066\104\042\121\067\127\063" +
    "\130\073\131\061\132\070\133\065\001\002\000\004\011" +
    "\u012f\001\002\000\006\013\u0131\133\u0130\001\002\000\004" +
    "\006\u0135\001\002\000\044\005\024\013\074\014\uffe6\016" +
    "\072\056\071\057\016\067\107\073\046\075\045\102\066" +
    "\104\042\121\067\127\063\130\073\131\061\132\070\133" +
    "\065\001\002\000\004\014\u0133\001\002\000\004\006\u0134" +
    "\001\002\000\136\002\uffb1\005\uffb1\006\uffb1\007\uffb1\010" +
    "\uffb1\011\uffb1\014\uffb1\016\uffb1\017\uffb1\020\uffb1\021\uffb1" +
    "\022\uffb1\023\uffb1\024\uffb1\025\uffb1\026\uffb1\027\uffb1\030" +
    "\uffb1\031\uffb1\041\uffb1\042\uffb1\044\uffb1\045\uffb1\046\uffb1" +
    "\050\uffb1\051\uffb1\052\uffb1\053\uffb1\054\uffb1\057\uffb1\061" +
    "\uffb1\062\uffb1\064\uffb1\070\uffb1\073\uffb1\075\uffb1\077\uffb1" +
    "\101\uffb1\104\uffb1\106\uffb1\107\uffb1\112\uffb1\113\uffb1\122" +
    "\uffb1\124\uffb1\133\uffb1\001\002\000\136\002\uffb2\005\uffb2" +
    "\006\uffb2\007\uffb2\010\uffb2\011\uffb2\014\uffb2\016\uffb2\017" +
    "\uffb2\020\uffb2\021\uffb2\022\uffb2\023\uffb2\024\uffb2\025\uffb2" +
    "\026\uffb2\027\uffb2\030\uffb2\031\uffb2\041\uffb2\042\uffb2\044" +
    "\uffb2\045\uffb2\046\uffb2\050\uffb2\051\uffb2\052\uffb2\053\uffb2" +
    "\054\uffb2\057\uffb2\061\uffb2\062\uffb2\064\uffb2\070\uffb2\073" +
    "\uffb2\075\uffb2\077\uffb2\101\uffb2\104\uffb2\106\uffb2\107\uffb2" +
    "\112\uffb2\113\uffb2\122\uffb2\124\uffb2\133\uffb2\001\002\000" +
    "\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046\uffd0" +
    "\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061" +
    "\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0" +
    "\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122" +
    "\uffd0\124\uffd0\133\uffd0\001\002\000\072\005\024\007\022" +
    "\010\u0138\044\041\045\037\046\035\050\032\051\031\052" +
    "\030\053\027\054\017\057\016\061\015\062\013\064\012" +
    "\070\047\073\046\075\045\077\044\101\043\104\042\106" +
    "\036\107\034\112\021\113\020\122\014\124\051\133\025" +
    "\001\002\000\004\047\u0139\001\002\000\004\005\u013a\001" +
    "\002\000\004\133\u013b\001\002\000\004\006\u013c\001\002" +
    "\000\004\007\u013d\001\002\000\072\005\uffd0\007\uffd0\010" +
    "\uffd0\044\uffd0\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052\uffd0" +
    "\053\uffd0\054\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0\070" +
    "\uffd0\073\uffd0\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106\uffd0" +
    "\107\uffd0\112\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0\001" +
    "\002\000\072\005\024\007\022\010\u013f\044\041\045\037" +
    "\046\035\050\032\051\031\052\030\053\027\054\017\057" +
    "\016\061\015\062\013\064\012\070\047\073\046\075\045" +
    "\077\044\101\043\104\042\106\036\107\034\112\021\113" +
    "\020\122\014\124\051\133\025\001\002\000\076\002\ufffa" +
    "\005\ufffa\007\ufffa\010\ufffa\044\ufffa\045\ufffa\046\ufffa\050" +
    "\ufffa\051\ufffa\052\ufffa\053\ufffa\054\ufffa\057\ufffa\060\u0140" +
    "\061\ufffa\062\ufffa\064\ufffa\070\ufffa\073\ufffa\075\ufffa\077" +
    "\ufffa\101\ufffa\104\ufffa\106\ufffa\107\ufffa\112\ufffa\113\ufffa" +
    "\122\ufffa\124\ufffa\133\ufffa\001\002\000\004\007\u0141\001" +
    "\002\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0\045\uffd0" +
    "\046\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057" +
    "\uffd0\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075\uffd0" +
    "\077\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112\uffd0\113" +
    "\uffd0\122\uffd0\124\uffd0\133\uffd0\001\002\000\072\005\024" +
    "\007\022\010\u0143\044\041\045\037\046\035\050\032\051" +
    "\031\052\030\053\027\054\017\057\016\061\015\062\013" +
    "\064\012\070\047\073\046\075\045\077\044\101\043\104" +
    "\042\106\036\107\034\112\021\113\020\122\014\124\051" +
    "\133\025\001\002\000\074\002\ufff9\005\ufff9\007\ufff9\010" +
    "\ufff9\044\ufff9\045\ufff9\046\ufff9\050\ufff9\051\ufff9\052\ufff9" +
    "\053\ufff9\054\ufff9\057\ufff9\061\ufff9\062\ufff9\064\ufff9\070" +
    "\ufff9\073\ufff9\075\ufff9\077\ufff9\101\ufff9\104\ufff9\106\ufff9" +
    "\107\ufff9\112\ufff9\113\ufff9\122\ufff9\124\ufff9\133\ufff9\001" +
    "\002\000\004\133\u0147\001\002\000\004\133\uff81\001\002" +
    "\000\004\133\uff80\001\002\000\004\005\u0148\001\002\000" +
    "\024\006\uffd3\044\041\045\037\050\032\054\017\061\015" +
    "\070\047\077\223\112\021\001\002\000\004\006\u014a\001" +
    "\002\000\004\007\u014b\001\002\000\072\005\uffd0\007\uffd0" +
    "\010\uffd0\044\uffd0\045\uffd0\046\uffd0\050\uffd0\051\uffd0\052" +
    "\uffd0\053\uffd0\054\uffd0\057\uffd0\061\uffd0\062\uffd0\064\uffd0" +
    "\070\uffd0\073\uffd0\075\uffd0\077\uffd0\101\uffd0\104\uffd0\106" +
    "\uffd0\107\uffd0\112\uffd0\113\uffd0\122\uffd0\124\uffd0\133\uffd0" +
    "\001\002\000\072\005\024\007\022\010\u014d\044\041\045" +
    "\037\046\035\050\032\051\031\052\030\053\027\054\017" +
    "\057\016\061\015\062\013\064\012\070\047\073\046\075" +
    "\045\077\044\101\043\104\042\106\036\107\034\112\021" +
    "\113\020\122\014\124\051\133\025\001\002\000\074\002" +
    "\ufffe\005\ufffe\007\ufffe\010\ufffe\044\ufffe\045\ufffe\046\ufffe" +
    "\050\ufffe\051\ufffe\052\ufffe\053\ufffe\054\ufffe\057\ufffe\061" +
    "\ufffe\062\ufffe\064\ufffe\070\ufffe\073\ufffe\075\ufffe\077\ufffe" +
    "\101\ufffe\104\ufffe\106\ufffe\107\ufffe\112\ufffe\113\ufffe\122" +
    "\ufffe\124\ufffe\133\ufffe\001\002\000\004\007\u014f\001\002" +
    "\000\072\005\uffd0\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046" +
    "\uffd0\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0" +
    "\061\uffd0\062\uffd0\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077" +
    "\uffd0\101\uffd0\104\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0" +
    "\122\uffd0\124\uffd0\133\uffd0\001\002\000\072\005\024\007" +
    "\022\010\u0151\044\041\045\037\046\035\050\032\051\031" +
    "\052\030\053\027\054\017\057\016\061\015\062\013\064" +
    "\012\070\047\073\046\075\045\077\044\101\043\104\042" +
    "\106\036\107\034\112\021\113\020\122\014\124\051\133" +
    "\025\001\002\000\076\002\uffd7\005\uffd7\007\uffd7\010\uffd7" +
    "\044\uffd7\045\uffd7\046\uffd7\050\uffd7\051\uffd7\052\uffd7\053" +
    "\uffd7\054\uffd7\055\u0152\057\uffd7\061\uffd7\062\uffd7\064\uffd7" +
    "\070\uffd7\073\uffd7\075\uffd7\077\uffd7\101\uffd7\104\uffd7\106" +
    "\uffd7\107\uffd7\112\uffd7\113\uffd7\122\uffd7\124\uffd7\133\uffd7" +
    "\001\002\000\006\007\u0153\064\012\001\002\000\072\005" +
    "\uffd0\007\uffd0\010\uffd0\044\uffd0\045\uffd0\046\uffd0\050\uffd0" +
    "\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061\uffd0\062" +
    "\uffd0\064\uffd0\070\uffd0\073\uffd0\075\uffd0\077\uffd0\101\uffd0" +
    "\104\uffd0\106\uffd0\107\uffd0\112\uffd0\113\uffd0\122\uffd0\124" +
    "\uffd0\133\uffd0\001\002\000\074\002\uffd5\005\uffd5\007\uffd5" +
    "\010\uffd5\044\uffd5\045\uffd5\046\uffd5\050\uffd5\051\uffd5\052" +
    "\uffd5\053\uffd5\054\uffd5\057\uffd5\061\uffd5\062\uffd5\064\uffd5" +
    "\070\uffd5\073\uffd5\075\uffd5\077\uffd5\101\uffd5\104\uffd5\106" +
    "\uffd5\107\uffd5\112\uffd5\113\uffd5\122\uffd5\124\uffd5\133\uffd5" +
    "\001\002\000\072\005\024\007\022\010\u0156\044\041\045" +
    "\037\046\035\050\032\051\031\052\030\053\027\054\017" +
    "\057\016\061\015\062\013\064\012\070\047\073\046\075" +
    "\045\077\044\101\043\104\042\106\036\107\034\112\021" +
    "\113\020\122\014\124\051\133\025\001\002\000\074\002" +
    "\uffd6\005\uffd6\007\uffd6\010\uffd6\044\uffd6\045\uffd6\046\uffd6" +
    "\050\uffd6\051\uffd6\052\uffd6\053\uffd6\054\uffd6\057\uffd6\061" +
    "\uffd6\062\uffd6\064\uffd6\070\uffd6\073\uffd6\075\uffd6\077\uffd6" +
    "\101\uffd6\104\uffd6\106\uffd6\107\uffd6\112\uffd6\113\uffd6\122" +
    "\uffd6\124\uffd6\133\uffd6\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0155\000\006\002\003\016\004\001\001\000\002\001" +
    "\001\000\024\003\032\006\051\007\025\010\047\011\037" +
    "\012\054\013\022\021\052\045\053\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\010\001\001\000\024" +
    "\003\032\006\051\007\025\010\047\011\037\012\054\013" +
    "\022\021\052\045\053\001\001\000\044\017\110\021\107" +
    "\022\112\023\057\024\061\025\074\026\075\027\102\030" +
    "\103\033\u014d\034\105\035\104\036\101\037\100\040\076" +
    "\041\063\042\111\001\001\000\006\044\u0143\045\u0145\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\044\017\110\021\107\022\112\023" +
    "\057\024\061\025\074\026\075\027\102\030\103\033\u012b" +
    "\034\105\035\104\036\101\037\100\040\076\041\063\042" +
    "\111\001\001\000\002\001\001\000\004\016\u0129\001\001" +
    "\000\002\001\001\000\044\017\110\021\107\022\112\023" +
    "\057\024\061\025\074\026\075\027\102\030\103\033\u0127" +
    "\034\105\035\104\036\101\037\100\040\076\041\063\042" +
    "\111\001\001\000\006\031\u0100\032\377\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\044\017\110" +
    "\021\107\022\112\023\057\024\061\025\074\026\075\027" +
    "\102\030\103\033\u0107\034\105\035\104\036\101\037\100" +
    "\040\076\041\063\042\111\001\001\000\002\001\001\000" +
    "\006\006\317\045\316\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\044\017" +
    "\110\021\107\022\112\023\057\024\061\025\074\026\075" +
    "\027\102\030\103\033\304\034\105\035\104\036\101\037" +
    "\100\040\076\041\063\042\111\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\044\017\110\021\107\022\112\023\057" +
    "\024\061\025\074\026\075\027\102\030\103\033\245\034" +
    "\105\035\104\036\101\037\100\040\076\041\063\042\111" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\044\017\110" +
    "\021\107\022\112\023\057\024\061\025\074\026\075\027" +
    "\102\030\103\033\077\034\105\035\104\036\101\037\100" +
    "\040\076\041\063\042\111\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\050\004\141\005\142\017\110\021" +
    "\107\022\112\023\057\024\061\025\074\026\075\027\102" +
    "\030\103\033\143\034\105\035\104\036\101\037\100\040" +
    "\076\041\063\042\111\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\017\110\021\107\042\114\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\034\017\110\021\107\022" +
    "\112\023\057\024\061\025\074\026\075\027\122\036\101" +
    "\037\100\040\076\041\063\042\111\001\001\000\002\001" +
    "\001\000\032\017\110\021\107\022\112\023\057\024\061" +
    "\025\074\026\075\036\124\037\100\040\076\041\063\042" +
    "\111\001\001\000\002\001\001\000\022\017\110\021\107" +
    "\022\112\023\057\024\061\025\140\041\063\042\111\001" +
    "\001\000\022\017\110\021\107\022\112\023\057\024\061" +
    "\025\127\041\063\042\111\001\001\000\002\001\001\000" +
    "\020\017\110\021\107\022\112\023\057\024\061\041\137" +
    "\042\111\001\001\000\020\017\110\021\107\022\112\023" +
    "\057\024\061\041\136\042\111\001\001\000\020\017\110" +
    "\021\107\022\112\023\057\024\061\041\135\042\111\001" +
    "\001\000\020\017\110\021\107\022\112\023\057\024\061" +
    "\041\134\042\111\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\050\004\141\005\146\017\110\021\107" +
    "\022\112\023\057\024\061\025\074\026\075\027\102\030" +
    "\103\033\143\034\105\035\104\036\101\037\100\040\076" +
    "\041\063\042\111\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\046\017\110\021\107\022\112\023" +
    "\057\024\061\025\074\026\075\027\102\030\103\033\205" +
    "\034\105\035\104\036\101\037\100\040\076\041\063\042" +
    "\111\043\231\001\001\000\044\017\110\021\107\022\112" +
    "\023\057\024\061\025\074\026\075\027\102\030\103\033" +
    "\227\034\105\035\104\036\101\037\100\040\076\041\063" +
    "\042\111\001\001\000\004\046\172\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\046\017\110\021\107\022\112\023\057\024\061\025" +
    "\074\026\075\027\102\030\103\033\205\034\105\035\104" +
    "\036\101\037\100\040\076\041\063\042\111\043\204\001" +
    "\001\000\044\017\110\021\107\022\112\023\057\024\061" +
    "\025\074\026\075\027\102\030\103\033\202\034\105\035" +
    "\104\036\101\037\100\040\076\041\063\042\111\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\046\017\110\021\107\022\112\023\057" +
    "\024\061\025\074\026\075\027\102\030\103\033\205\034" +
    "\105\035\104\036\101\037\100\040\076\041\063\042\111" +
    "\043\207\001\001\000\002\001\001\000\002\001\001\000" +
    "\044\017\110\021\107\022\112\023\057\024\061\025\074" +
    "\026\075\027\102\030\103\033\212\034\105\035\104\036" +
    "\101\037\100\040\076\041\063\042\111\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\044\017\110\021\107\022\112\023\057\024\061" +
    "\025\074\026\075\027\102\030\103\033\217\034\105\035" +
    "\104\036\101\037\100\040\076\041\063\042\111\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\045\223\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\014" +
    "\017\110\021\107\022\112\023\244\042\111\001\001\000" +
    "\014\017\110\021\107\022\112\023\235\042\111\001\001" +
    "\000\002\001\001\000\012\017\110\021\107\022\243\042" +
    "\111\001\001\000\012\017\110\021\107\022\242\042\111" +
    "\001\001\000\012\017\110\021\107\022\241\042\111\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\016\247\001" +
    "\001\000\024\003\032\006\051\007\025\010\047\011\037" +
    "\012\054\013\022\021\052\045\053\001\001\000\002\001" +
    "\001\000\010\014\254\015\252\045\253\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\010\014" +
    "\254\015\256\045\253\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\016\262\001\001\000" +
    "\024\003\032\006\051\007\025\010\047\011\037\012\054" +
    "\013\022\021\052\045\053\001\001\000\002\001\001\000" +
    "\044\017\110\021\107\022\112\023\057\024\061\025\074" +
    "\026\075\027\102\030\103\033\265\034\105\035\104\036" +
    "\101\037\100\040\076\041\063\042\111\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\050\004" +
    "\141\005\271\017\110\021\107\022\112\023\057\024\061" +
    "\025\074\026\075\027\102\030\103\033\143\034\105\035" +
    "\104\036\101\037\100\040\076\041\063\042\111\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\046\017\110\021\107\022" +
    "\112\023\057\024\061\025\074\026\075\027\102\030\103" +
    "\033\205\034\105\035\104\036\101\037\100\040\076\041" +
    "\063\042\111\043\302\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\044\017\110\021\107\022" +
    "\112\023\057\024\061\025\074\026\075\027\102\030\103" +
    "\033\306\034\105\035\104\036\101\037\100\040\076\041" +
    "\063\042\111\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\050\004\141\005\312\017\110\021" +
    "\107\022\112\023\057\024\061\025\074\026\075\027\102" +
    "\030\103\033\143\034\105\035\104\036\101\037\100\040" +
    "\076\041\063\042\111\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\050\004\141\005" +
    "\325\017\110\021\107\022\112\023\057\024\061\025\074" +
    "\026\075\027\102\030\103\033\143\034\105\035\104\036" +
    "\101\037\100\040\076\041\063\042\111\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\016\330\001\001\000" +
    "\024\003\032\006\051\007\025\010\047\011\037\012\054" +
    "\013\022\021\052\045\053\001\001\000\002\001\001\000" +
    "\044\017\110\021\107\022\112\023\057\024\061\025\074" +
    "\026\075\027\102\030\103\033\333\034\105\035\104\036" +
    "\101\037\100\040\076\041\063\042\111\001\001\000\002" +
    "\001\001\000\002\001\001\000\044\017\110\021\107\022" +
    "\112\023\057\024\061\025\074\026\075\027\102\030\103" +
    "\033\336\034\105\035\104\036\101\037\100\040\076\041" +
    "\063\042\111\001\001\000\002\001\001\000\002\001\001" +
    "\000\044\017\110\021\107\022\112\023\057\024\061\025" +
    "\074\026\075\027\102\030\103\033\341\034\105\035\104" +
    "\036\101\037\100\040\076\041\063\042\111\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\344\001\001" +
    "\000\024\003\032\006\051\007\025\010\047\011\037\012" +
    "\054\013\022\021\052\045\053\001\001\000\002\001\001" +
    "\000\004\016\347\001\001\000\024\003\032\006\051\007" +
    "\025\010\047\011\037\012\054\013\022\021\052\045\053" +
    "\001\001\000\002\001\001\000\004\016\352\001\001\000" +
    "\024\003\032\006\051\007\025\010\047\011\037\012\054" +
    "\013\022\021\052\045\053\001\001\000\002\001\001\000" +
    "\004\016\355\001\001\000\024\003\032\006\051\007\025" +
    "\010\047\011\037\012\054\013\022\021\052\045\053\001" +
    "\001\000\002\001\001\000\044\017\110\021\107\022\112" +
    "\023\057\024\061\025\074\026\075\027\102\030\103\033" +
    "\360\034\105\035\104\036\101\037\100\040\076\041\063" +
    "\042\111\001\001\000\002\001\001\000\006\010\364\011" +
    "\362\001\001\000\002\001\001\000\006\031\u0100\032\377" +
    "\001\001\000\002\001\001\000\004\016\366\001\001\000" +
    "\024\003\032\006\051\007\025\010\047\011\037\012\054" +
    "\013\022\021\052\045\053\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\044\017\110\021\107\022\112" +
    "\023\057\024\061\025\074\026\075\027\102\030\103\033" +
    "\u0102\034\105\035\104\036\101\037\100\040\076\041\063" +
    "\042\111\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\016\u0104\001\001\000\024\003\032\006\051\007\025" +
    "\010\047\011\037\012\054\013\022\021\052\045\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\004\016\u010f\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\u010d\001\001\000\024" +
    "\003\032\006\051\007\025\010\047\011\037\012\054\013" +
    "\022\021\052\045\053\001\001\000\002\001\001\000\024" +
    "\003\032\006\051\007\025\010\047\011\037\012\054\013" +
    "\022\021\052\045\053\001\001\000\002\001\001\000\002" +
    "\001\001\000\010\014\254\015\u0113\045\253\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\016\u0116\001\001" +
    "\000\024\003\032\006\051\007\025\010\047\011\037\012" +
    "\054\013\022\021\052\045\053\001\001\000\002\001\001" +
    "\000\004\046\172\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\044\017\110\021\107\022\112" +
    "\023\057\024\061\025\074\026\075\027\102\030\103\033" +
    "\u011d\034\105\035\104\036\101\037\100\040\076\041\063" +
    "\042\111\001\001\000\002\001\001\000\002\001\001\000" +
    "\044\017\110\021\107\022\112\023\057\024\061\025\074" +
    "\026\075\027\102\030\103\033\u0120\034\105\035\104\036" +
    "\101\037\100\040\076\041\063\042\111\001\001\000\002" +
    "\001\001\000\044\017\110\021\107\022\112\023\057\024" +
    "\061\025\074\026\075\027\102\030\103\033\u0122\034\105" +
    "\035\104\036\101\037\100\040\076\041\063\042\111\001" +
    "\001\000\002\001\001\000\002\001\001\000\044\017\110" +
    "\021\107\022\112\023\057\024\061\025\074\026\075\027" +
    "\102\030\103\033\u0125\034\105\035\104\036\101\037\100" +
    "\040\076\041\063\042\111\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\024" +
    "\003\032\006\051\007\025\010\047\011\037\012\054\013" +
    "\022\021\052\045\053\001\001\000\002\001\001\000\002" +
    "\001\001\000\044\017\110\021\107\022\112\023\057\024" +
    "\061\025\074\026\075\027\102\030\103\033\u012d\034\105" +
    "\035\104\036\101\037\100\040\076\041\063\042\111\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\050\004\141\005\u0131\017\110\021\107\022\112\023" +
    "\057\024\061\025\074\026\075\027\102\030\103\033\143" +
    "\034\105\035\104\036\101\037\100\040\076\041\063\042" +
    "\111\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\016\u0136\001\001\000" +
    "\024\003\032\006\051\007\025\010\047\011\037\012\054" +
    "\013\022\021\052\045\053\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\016\u013d\001\001\000\024\003\032\006" +
    "\051\007\025\010\047\011\037\012\054\013\022\021\052" +
    "\045\053\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\016\u0141\001\001\000\024\003\032\006\051\007\025" +
    "\010\047\011\037\012\054\013\022\021\052\045\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\014\254\015" +
    "\u0148\045\253\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\u014b\001\001\000\024\003\032\006\051\007" +
    "\025\010\047\011\037\012\054\013\022\021\052\045\053" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\016" +
    "\u014f\001\001\000\024\003\032\006\051\007\025\010\047" +
    "\011\037\012\054\013\022\021\052\045\053\001\001\000" +
    "\002\001\001\000\004\013\u0153\001\001\000\004\016\u0154" +
    "\001\001\000\002\001\001\000\024\003\032\006\051\007" +
    "\025\010\047\011\037\012\054\013\022\021\052\045\053" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public lang.Absyn.Program pProgram() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (lang.Absyn.Program) res.value;
  }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Program start_val = (lang.Absyn.Program)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= ListStm 
            {
              lang.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListStm p_1 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.PStms(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.PStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PStms)RESULT).line_num = -1;
  ((lang.Absyn.PStms)RESULT).col_num = -1;
  ((lang.Absyn.PStms)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Program ::= _SYMB_60 _SYMB_0 _SYMB_47 ListStm 
            {
              lang.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.PFunctionalModeStms(p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Stm ::= _SYMB_46 FuncType _IDENT_ _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.FuncType p_2 = (lang.Absyn.FuncType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_5 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefFun(p_2,p_3,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefFun)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefFun)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefFun)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefFun)RESULT).line_num = -1;
  ((lang.Absyn.DefFun)RESULT).col_num = -1;
  ((lang.Absyn.DefFun)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Stm ::= _SYMB_38 _IDENT_ _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_4 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_7 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefConstructor(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefConstructor)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefConstructor)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefConstructor)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefConstructor)RESULT).line_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).col_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Stm ::= _SYMB_37 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefClass(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClass)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClass)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClass)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClass)RESULT).line_num = -1;
  ((lang.Absyn.DefClass)RESULT).col_num = -1;
  ((lang.Absyn.DefClass)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Stm ::= _SYMB_37 _IDENT_ _SYMB_50 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefClassInherits(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClassInherits)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClassInherits)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).col_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Stm ::= _SYMB_78 _SYMB_3 ListStm _SYMB_4 _SYMB_35 _SYMB_1 _IDENT_ _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		lang.Absyn.ListStm p_3 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_7 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_10 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_11 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.STryCatch(p_3,p_7,p_10);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_7xleft,p_10xleft);
if (leftLoc != null) {
  ((lang.Absyn.STryCatch)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.STryCatch)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.STryCatch)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.STryCatch)RESULT).line_num = -1;
  ((lang.Absyn.STryCatch)RESULT).col_num = -1;
  ((lang.Absyn.STryCatch)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-10)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Stm ::= _SYMB_78 _SYMB_3 ListStm _SYMB_4 _SYMB_35 _SYMB_1 _IDENT_ _SYMB_2 _SYMB_3 ListStm _SYMB_4 _SYMB_44 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-14)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xright;
		lang.Absyn.ListStm p_3 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		String p_7 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.ListStm p_10 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_11 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_12 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_13xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_13xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_13 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_14xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_14xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_14 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_15xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_15xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_15 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.STryCatchFinally(p_3,p_7,p_10,p_14);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_7xleft,p_10xleft,p_14xleft);
if (leftLoc != null) {
  ((lang.Absyn.STryCatchFinally)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.STryCatchFinally)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.STryCatchFinally)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.STryCatchFinally)RESULT).line_num = -1;
  ((lang.Absyn.STryCatchFinally)RESULT).col_num = -1;
  ((lang.Absyn.STryCatchFinally)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Stm ::= _SYMB_61 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPrint(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPrint)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPrint)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPrint)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPrint)RESULT).line_num = -1;
  ((lang.Absyn.SPrint)RESULT).col_num = -1;
  ((lang.Absyn.SPrint)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Stm ::= _SYMB_34 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SBreak();
((lang.Absyn.SBreak)RESULT).line_num = -1;
((lang.Absyn.SBreak)RESULT).col_num = -1;
((lang.Absyn.SBreak)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Stm ::= _SYMB_39 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SContinue();
((lang.Absyn.SContinue)RESULT).line_num = -1;
((lang.Absyn.SContinue)RESULT).col_num = -1;
((lang.Absyn.SContinue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Stm ::= _SYMB_71 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SThrow(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SThrow)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SThrow)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SThrow)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SThrow)RESULT).line_num = -1;
  ((lang.Absyn.SThrow)RESULT).col_num = -1;
  ((lang.Absyn.SThrow)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Stm ::= Stm_Initialise 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Initialise p_1 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.InitialiseStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.InitialiseStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.InitialiseStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).col_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Stm ::= Stm_Declare 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Declare p_1 = (lang.Absyn.Stm_Declare)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DeclareStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.DeclareStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DeclareStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DeclareStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DeclareStm)RESULT).line_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).col_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Stm ::= Stm_Assign 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Assign p_1 = (lang.Absyn.Stm_Assign)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.AssignStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.AssignStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.AssignStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.AssignStm)RESULT).line_num = -1;
  ((lang.Absyn.AssignStm)RESULT).col_num = -1;
  ((lang.Absyn.AssignStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Stm ::= Stm_Loop 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Loop p_1 = (lang.Absyn.Stm_Loop)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.LoopStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LoopStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LoopStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LoopStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LoopStm)RESULT).line_num = -1;
  ((lang.Absyn.LoopStm)RESULT).col_num = -1;
  ((lang.Absyn.LoopStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Stm ::= Stm_IncrmDecrm 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_IncrmDecrm p_1 = (lang.Absyn.Stm_IncrmDecrm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.IncrnDecrmStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Stm ::= Exp16 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCall(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCall)RESULT).line_num = -1;
  ((lang.Absyn.SCall)RESULT).col_num = -1;
  ((lang.Absyn.SCall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Stm ::= _IDENT_ _SYMB_6 _SYMB_31 _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SAppend(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAppend)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAppend)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAppend)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAppend)RESULT).line_num = -1;
  ((lang.Absyn.SAppend)RESULT).col_num = -1;
  ((lang.Absyn.SAppend)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Stm ::= _IDENT_ _SYMB_6 _SYMB_65 _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SRemove(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SRemove)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SRemove)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SRemove)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SRemove)RESULT).line_num = -1;
  ((lang.Absyn.SRemove)RESULT).col_num = -1;
  ((lang.Absyn.SRemove)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Stm ::= _IDENT_ _SYMB_6 _SYMB_68 _SYMB_1 Exp _SYMB_5 Exp _SYMB_2 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_7 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SSet(p_1,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SSet)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SSet)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SSet)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SSet)RESULT).line_num = -1;
  ((lang.Absyn.SSet)RESULT).col_num = -1;
  ((lang.Absyn.SSet)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Stm ::= _SYMB_67 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SReturn(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SReturn)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SReturn)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SReturn)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SReturn)RESULT).line_num = -1;
  ((lang.Absyn.SReturn)RESULT).col_num = -1;
  ((lang.Absyn.SReturn)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Stm ::= _SYMB_59 _IDENT_ _SYMB_9 _SYMB_58 _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_7 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SObjInit(p_2,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SObjInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SObjInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SObjInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SObjInit)RESULT).line_num = -1;
  ((lang.Absyn.SObjInit)RESULT).col_num = -1;
  ((lang.Absyn.SObjInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Stm ::= If_Stm 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.If_Stm p_1 = (lang.Absyn.If_Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.IfS(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IfS)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IfS)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IfS)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IfS)RESULT).line_num = -1;
  ((lang.Absyn.IfS)RESULT).col_num = -1;
  ((lang.Absyn.IfS)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // Stm ::= _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_2 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Block(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.Block)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.Block)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.Block)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.Block)RESULT).line_num = -1;
  ((lang.Absyn.Block)RESULT).col_num = -1;
  ((lang.Absyn.Block)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // Item ::= Exp 
            {
              lang.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.LstItem(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LstItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LstItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LstItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LstItem)RESULT).line_num = -1;
  ((lang.Absyn.LstItem)RESULT).col_num = -1;
  ((lang.Absyn.LstItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ListItem ::= 
            {
              lang.Absyn.ListItem RESULT =null;
		 RESULT = new lang.Absyn.ListItem(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // ListItem ::= Item 
            {
              lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Item p_1 = (lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // ListItem ::= Item _SYMB_5 ListItem 
            {
              lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Item p_1 = (lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListItem p_3 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Stm_Initialise ::= VarType _IDENT_ _SYMB_9 Exp 
            {
              lang.Absyn.Stm_Initialise RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SInit(p_1,p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SInit)RESULT).line_num = -1;
  ((lang.Absyn.SInit)RESULT).col_num = -1;
  ((lang.Absyn.SInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Initialise",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Stm_Declare ::= VarType _IDENT_ 
            {
              lang.Absyn.Stm_Declare RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SDecl)RESULT).line_num = -1;
  ((lang.Absyn.SDecl)RESULT).col_num = -1;
  ((lang.Absyn.SDecl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Declare",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Stm_Assign ::= _IDENT_ Assign_Op Exp 
            {
              lang.Absyn.Stm_Assign RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Assign_Op p_2 = (lang.Absyn.Assign_Op)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SAssign(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAssign)RESULT).line_num = -1;
  ((lang.Absyn.SAssign)RESULT).col_num = -1;
  ((lang.Absyn.SAssign)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Assign",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Stm_IncrmDecrm ::= _IDENT_ IncrmDecrm_Op 
            {
              lang.Absyn.Stm_IncrmDecrm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.IncrmDecrm_Op p_2 = (lang.Absyn.IncrmDecrm_Op)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIncrmDecrm(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_IncrmDecrm",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Stm_Loop ::= _SYMB_80 Exp _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SWhile(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SWhile)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SWhile)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SWhile)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SWhile)RESULT).line_num = -1;
  ((lang.Absyn.SWhile)RESULT).col_num = -1;
  ((lang.Absyn.SWhile)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Stm_Loop ::= _SYMB_66 _IDENT_ _SYMB_49 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopIdent(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Stm_Loop ::= _SYMB_66 _IDENT_ _SYMB_49 _SYMB_7 ListItem _SYMB_8 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListItem p_5 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopList(p_2,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopList)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Stm_Loop ::= _SYMB_66 _IDENT_ _SYMB_49 _SYMB_63 _SYMB_1 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_9 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_10 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStart(p_2,p_6,p_9);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_9xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Stm_Loop ::= _SYMB_66 _IDENT_ _SYMB_49 _SYMB_63 _SYMB_1 Exp _SYMB_5 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_8 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_10 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_11 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_12 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStartStop(p_2,p_6,p_8,p_11);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_11xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Stm_Loop ::= _SYMB_66 _IDENT_ _SYMB_49 _SYMB_63 _SYMB_1 Exp _SYMB_5 Exp _SYMB_5 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		lang.Absyn.Exp p_8 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_10 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_11 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_12 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_13xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_13xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_13 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_14xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_14xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_14 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStartStopEnd(p_2,p_6,p_8,p_10,p_13);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_10xleft,p_13xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // Stm_Loop ::= _SYMB_66 Stm_Initialise _SYMB_5 Exp _SYMB_5 Stm_IncrmDecrm _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Stm_Initialise p_2 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Stm_IncrmDecrm p_6 = (lang.Absyn.Stm_IncrmDecrm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCLoop(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoop)RESULT).line_num = -1;
  ((lang.Absyn.SCLoop)RESULT).col_num = -1;
  ((lang.Absyn.SCLoop)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // Stm_Loop ::= _SYMB_66 Stm_Initialise _SYMB_5 Exp _SYMB_5 Stm_Assign _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Stm_Initialise p_2 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Stm_Assign p_6 = (lang.Absyn.Stm_Assign)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCLoopAssign(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoopAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // If_Stm ::= _SYMB_48 Exp _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIf(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIf)RESULT).line_num = -1;
  ((lang.Absyn.SIf)RESULT).col_num = -1;
  ((lang.Absyn.SIf)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // If_Stm ::= _SYMB_48 Exp _SYMB_3 ListStm _SYMB_4 _SYMB_41 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIfElse(p_2,p_4,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElse)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElse)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElse)RESULT).line_num = -1;
  ((lang.Absyn.SIfElse)RESULT).col_num = -1;
  ((lang.Absyn.SIfElse)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // If_Stm ::= _SYMB_48 Exp _SYMB_3 ListStm _SYMB_4 _SYMB_41 If_Stm 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.If_Stm p_7 = (lang.Absyn.If_Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIfElseIf(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElseIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElseIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).col_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // Arg ::= VarType _IDENT_ 
            {
              lang.Absyn.Arg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ArgDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ArgDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ArgDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ArgDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ArgDecl)RESULT).line_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).col_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arg",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ListArg ::= 
            {
              lang.Absyn.ListArg RESULT =null;
		 RESULT = new lang.Absyn.ListArg(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ListArg ::= Arg 
            {
              lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Arg p_1 = (lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListArg(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ListArg ::= Arg _SYMB_5 ListArg 
            {
              lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Arg p_1 = (lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListArg p_3 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // ListStm ::= 
            {
              lang.Absyn.ListStm RESULT =null;
		 RESULT = new lang.Absyn.ListStm(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStm",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // ListStm ::= ListStm Stm 
            {
              lang.Absyn.ListStm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_1 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm p_2 = (lang.Absyn.Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStm",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Exp15 ::= _INTEGER_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EInt)RESULT).line_num = -1;
  ((lang.Absyn.EInt)RESULT).col_num = -1;
  ((lang.Absyn.EInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Exp15 ::= _SYMB_10 _INTEGER_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENegInt(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegInt)RESULT).line_num = -1;
  ((lang.Absyn.ENegInt)RESULT).col_num = -1;
  ((lang.Absyn.ENegInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Exp15 ::= _CHAR_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Character p_1 = (Character)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EChar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EChar)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EChar)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EChar)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EChar)RESULT).line_num = -1;
  ((lang.Absyn.EChar)RESULT).col_num = -1;
  ((lang.Absyn.EChar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Exp15 ::= _DOUBLE_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Double p_1 = (Double)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EDouble(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDouble)RESULT).line_num = -1;
  ((lang.Absyn.EDouble)RESULT).col_num = -1;
  ((lang.Absyn.EDouble)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Exp15 ::= _SYMB_10 _DOUBLE_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Double p_2 = (Double)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENegDouble(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegDouble)RESULT).line_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).col_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Exp15 ::= _STRING_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EString)RESULT).line_num = -1;
  ((lang.Absyn.EString)RESULT).col_num = -1;
  ((lang.Absyn.EString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Exp15 ::= _SYMB_77 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ETrue();
((lang.Absyn.ETrue)RESULT).line_num = -1;
((lang.Absyn.ETrue)RESULT).col_num = -1;
((lang.Absyn.ETrue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Exp15 ::= _SYMB_42 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFalse();
((lang.Absyn.EFalse)RESULT).line_num = -1;
((lang.Absyn.EFalse)RESULT).col_num = -1;
((lang.Absyn.EFalse)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Exp15 ::= _IDENT_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EId(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EId)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EId)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EId)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EId)RESULT).line_num = -1;
  ((lang.Absyn.EId)RESULT).col_num = -1;
  ((lang.Absyn.EId)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_54 _SYMB_1 VarType _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.VarType p_5 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EType(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EType)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EType)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EType)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EType)RESULT).line_num = -1;
  ((lang.Absyn.EType)RESULT).col_num = -1;
  ((lang.Absyn.EType)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Exp15 ::= _IDENT_ _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListItem(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListItem)RESULT).line_num = -1;
  ((lang.Absyn.EListItem)RESULT).col_num = -1;
  ((lang.Absyn.EListItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_81 _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListWith(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListWith)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListWith)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListWith)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListWith)RESULT).line_num = -1;
  ((lang.Absyn.EListWith)RESULT).col_num = -1;
  ((lang.Absyn.EListWith)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_82 _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListWithout(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListWithout)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListWithout)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListWithout)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListWithout)RESULT).line_num = -1;
  ((lang.Absyn.EListWithout)RESULT).col_num = -1;
  ((lang.Absyn.EListWithout)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Exp15 ::= _SYMB_7 ListItem _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListItem p_2 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EList(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.EList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EList)RESULT).line_num = -1;
  ((lang.Absyn.EList)RESULT).col_num = -1;
  ((lang.Absyn.EList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_69 _SYMB_1 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListSize(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListSize)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListSize)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListSize)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListSize)RESULT).line_num = -1;
  ((lang.Absyn.EListSize)RESULT).col_num = -1;
  ((lang.Absyn.EListSize)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_53 _SYMB_1 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListIsEmpty(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListIsEmpty)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListIsEmpty)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListIsEmpty)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListIsEmpty)RESULT).line_num = -1;
  ((lang.Absyn.EListIsEmpty)RESULT).col_num = -1;
  ((lang.Absyn.EListIsEmpty)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Exp15 ::= _SYMB_51 _SYMB_1 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EInput();
((lang.Absyn.EInput)RESULT).line_num = -1;
((lang.Absyn.EInput)RESULT).col_num = -1;
((lang.Absyn.EInput)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Exp15 ::= _SYMB_51 _SYMB_1 _STRING_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EInputString(p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EInputString)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EInputString)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EInputString)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EInputString)RESULT).line_num = -1;
  ((lang.Absyn.EInputString)RESULT).col_num = -1;
  ((lang.Absyn.EInputString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_56 _SYMB_1 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EStrLength(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EStrLength)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EStrLength)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EStrLength)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EStrLength)RESULT).line_num = -1;
  ((lang.Absyn.EStrLength)RESULT).col_num = -1;
  ((lang.Absyn.EStrLength)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Exp15 ::= _SYMB_62 _SYMB_1 _INTEGER_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Integer p_3 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ERand(p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ERand)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ERand)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ERand)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ERand)RESULT).line_num = -1;
  ((lang.Absyn.ERand)RESULT).col_num = -1;
  ((lang.Absyn.ERand)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Exp15 ::= Exp16 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // ListIdent ::= 
            {
              lang.Absyn.ListIdent RESULT =null;
		 RESULT = new lang.Absyn.ListIdent(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // ListIdent ::= _IDENT_ 
            {
              lang.Absyn.ListIdent RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListIdent(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // ListIdent ::= _IDENT_ _SYMB_5 ListIdent 
            {
              lang.Absyn.ListIdent RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListIdent p_3 = (lang.Absyn.ListIdent)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Exp16 ::= _IDENT_ _SYMB_6 TypeCast _SYMB_1 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.TypeCast p_3 = (lang.Absyn.TypeCast)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ETypeCast(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ETypeCast)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ETypeCast)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ETypeCast)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ETypeCast)RESULT).line_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).col_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Exp16 ::= _SYMB_55 _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_3 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELambda(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELambda)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELambda)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELambda)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELambda)RESULT).line_num = -1;
  ((lang.Absyn.ELambda)RESULT).col_num = -1;
  ((lang.Absyn.ELambda)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Exp16 ::= _SYMB_57 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMapIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapIdent)RESULT).line_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).col_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Exp16 ::= _SYMB_57 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMapList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapList)RESULT).line_num = -1;
  ((lang.Absyn.EMapList)RESULT).col_num = -1;
  ((lang.Absyn.EMapList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Exp16 ::= _SYMB_43 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFilterIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).col_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Exp16 ::= _SYMB_43 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFilterList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterList)RESULT).line_num = -1;
  ((lang.Absyn.EFilterList)RESULT).col_num = -1;
  ((lang.Absyn.EFilterList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Exp16 ::= _SYMB_64 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EReduceIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).col_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Exp16 ::= _SYMB_64 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EReduceList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceList)RESULT).line_num = -1;
  ((lang.Absyn.EReduceList)RESULT).col_num = -1;
  ((lang.Absyn.EReduceList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESelect(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelect)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelect)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelect)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelect)RESULT).line_num = -1;
  ((lang.Absyn.ESelect)RESULT).col_num = -1;
  ((lang.Absyn.ESelect)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESelectListItem(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelectListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelectListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).col_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Exp16 ::= _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_3 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ECall(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ECall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ECall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ECall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ECall)RESULT).line_num = -1;
  ((lang.Absyn.ECall)RESULT).col_num = -1;
  ((lang.Absyn.ECall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_5 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EObjCall(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EObjCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EObjCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EObjCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EObjCall)RESULT).line_num = -1;
  ((lang.Absyn.EObjCall)RESULT).col_num = -1;
  ((lang.Absyn.EObjCall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Exp16 ::= _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Exp13 ::= Exp13 _SYMB_11 Exp14 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EPow(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EPow)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EPow)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EPow)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EPow)RESULT).line_num = -1;
  ((lang.Absyn.EPow)RESULT).col_num = -1;
  ((lang.Absyn.EPow)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp13",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Exp13 ::= Exp14 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp13",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Exp12 ::= Exp12 _SYMB_12 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMul(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMul)RESULT).line_num = -1;
  ((lang.Absyn.EMul)RESULT).col_num = -1;
  ((lang.Absyn.EMul)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Exp12 ::= Exp12 _SYMB_13 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EDiv(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDiv)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDiv)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDiv)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDiv)RESULT).line_num = -1;
  ((lang.Absyn.EDiv)RESULT).col_num = -1;
  ((lang.Absyn.EDiv)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Exp12 ::= Exp12 _SYMB_14 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMod(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMod)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMod)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMod)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMod)RESULT).line_num = -1;
  ((lang.Absyn.EMod)RESULT).col_num = -1;
  ((lang.Absyn.EMod)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Exp12 ::= Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Exp11 ::= Exp11 _SYMB_15 Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EAdd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAdd)RESULT).line_num = -1;
  ((lang.Absyn.EAdd)RESULT).col_num = -1;
  ((lang.Absyn.EAdd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Exp11 ::= Exp11 _SYMB_10 Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESub(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESub)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESub)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESub)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESub)RESULT).line_num = -1;
  ((lang.Absyn.ESub)RESULT).col_num = -1;
  ((lang.Absyn.ESub)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Exp11 ::= Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Exp9 ::= Exp9 _SYMB_16 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELt)RESULT).line_num = -1;
  ((lang.Absyn.ELt)RESULT).col_num = -1;
  ((lang.Absyn.ELt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Exp9 ::= Exp9 _SYMB_17 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EGt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGt)RESULT).line_num = -1;
  ((lang.Absyn.EGt)RESULT).col_num = -1;
  ((lang.Absyn.EGt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Exp9 ::= Exp9 _SYMB_18 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELEq)RESULT).line_num = -1;
  ((lang.Absyn.ELEq)RESULT).col_num = -1;
  ((lang.Absyn.ELEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Exp9 ::= Exp9 _SYMB_19 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EGEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGEq)RESULT).line_num = -1;
  ((lang.Absyn.EGEq)RESULT).col_num = -1;
  ((lang.Absyn.EGEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Exp9 ::= Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Exp8 ::= Exp8 _SYMB_20 Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EEq)RESULT).line_num = -1;
  ((lang.Absyn.EEq)RESULT).col_num = -1;
  ((lang.Absyn.EEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Exp8 ::= Exp8 _SYMB_21 Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENEq)RESULT).line_num = -1;
  ((lang.Absyn.ENEq)RESULT).col_num = -1;
  ((lang.Absyn.ENEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Exp8 ::= Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Exp4 ::= Exp4 _SYMB_29 Exp5 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAnd)RESULT).line_num = -1;
  ((lang.Absyn.EAnd)RESULT).col_num = -1;
  ((lang.Absyn.EAnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Exp4 ::= Exp5 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Exp3 ::= Exp3 _SYMB_30 Exp4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EOr)RESULT).line_num = -1;
  ((lang.Absyn.EOr)RESULT).col_num = -1;
  ((lang.Absyn.EOr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp3",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Exp3 ::= Exp4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp3",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Assign_Op ::= _SYMB_9 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Assign();
((lang.Absyn.Assign)RESULT).line_num = -1;
((lang.Absyn.Assign)RESULT).col_num = -1;
((lang.Absyn.Assign)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Assign_Op ::= _SYMB_22 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignMul();
((lang.Absyn.AssignMul)RESULT).line_num = -1;
((lang.Absyn.AssignMul)RESULT).col_num = -1;
((lang.Absyn.AssignMul)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Assign_Op ::= _SYMB_23 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignDiv();
((lang.Absyn.AssignDiv)RESULT).line_num = -1;
((lang.Absyn.AssignDiv)RESULT).col_num = -1;
((lang.Absyn.AssignDiv)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Assign_Op ::= _SYMB_24 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignMod();
((lang.Absyn.AssignMod)RESULT).line_num = -1;
((lang.Absyn.AssignMod)RESULT).col_num = -1;
((lang.Absyn.AssignMod)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Assign_Op ::= _SYMB_25 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignAdd();
((lang.Absyn.AssignAdd)RESULT).line_num = -1;
((lang.Absyn.AssignAdd)RESULT).col_num = -1;
((lang.Absyn.AssignAdd)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Assign_Op ::= _SYMB_26 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignSub();
((lang.Absyn.AssignSub)RESULT).line_num = -1;
((lang.Absyn.AssignSub)RESULT).col_num = -1;
((lang.Absyn.AssignSub)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // IncrmDecrm_Op ::= _SYMB_27 
            {
              lang.Absyn.IncrmDecrm_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Increment();
((lang.Absyn.Increment)RESULT).line_num = -1;
((lang.Absyn.Increment)RESULT).col_num = -1;
((lang.Absyn.Increment)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IncrmDecrm_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // IncrmDecrm_Op ::= _SYMB_28 
            {
              lang.Absyn.IncrmDecrm_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Decrement();
((lang.Absyn.Decrement)RESULT).line_num = -1;
((lang.Absyn.Decrement)RESULT).col_num = -1;
((lang.Absyn.Decrement)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IncrmDecrm_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Exp ::= Exp1 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Exp1 ::= Exp2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp1",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // Exp2 ::= Exp3 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp2",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // Exp5 ::= Exp6 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp5",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // Exp6 ::= Exp7 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp6",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // Exp7 ::= Exp8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp7",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // Exp10 ::= Exp11 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp10",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // Exp14 ::= Exp15 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp14",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // ListExp ::= 
            {
              lang.Absyn.ListExp RESULT =null;
		 RESULT = new lang.Absyn.ListExp(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // ListExp ::= Exp 
            {
              lang.Absyn.ListExp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListExp(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // ListExp ::= Exp _SYMB_5 ListExp 
            {
              lang.Absyn.ListExp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = ((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListExp p_3 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // FuncType ::= _SYMB_79 
            {
              lang.Absyn.FuncType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.FuncType_void();
((lang.Absyn.FuncType_void)RESULT).line_num = -1;
((lang.Absyn.FuncType_void)RESULT).col_num = -1;
((lang.Absyn.FuncType_void)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FuncType",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // FuncType ::= VarType 
            {
              lang.Absyn.FuncType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.FuncTypeVarType(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FuncType",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // VarType ::= _SYMB_52 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_int();
((lang.Absyn.VarType_int)RESULT).line_num = -1;
((lang.Absyn.VarType_int)RESULT).col_num = -1;
((lang.Absyn.VarType_int)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // VarType ::= _SYMB_40 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_double();
((lang.Absyn.VarType_double)RESULT).line_num = -1;
((lang.Absyn.VarType_double)RESULT).col_num = -1;
((lang.Absyn.VarType_double)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // VarType ::= _SYMB_33 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_bool();
((lang.Absyn.VarType_bool)RESULT).line_num = -1;
((lang.Absyn.VarType_bool)RESULT).col_num = -1;
((lang.Absyn.VarType_bool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // VarType ::= _SYMB_36 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_char();
((lang.Absyn.VarType_char)RESULT).line_num = -1;
((lang.Absyn.VarType_char)RESULT).col_num = -1;
((lang.Absyn.VarType_char)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // VarType ::= _SYMB_70 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_string();
((lang.Absyn.VarType_string)RESULT).line_num = -1;
((lang.Absyn.VarType_string)RESULT).col_num = -1;
((lang.Absyn.VarType_string)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // VarType ::= _SYMB_32 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_auto();
((lang.Absyn.VarType_auto)RESULT).line_num = -1;
((lang.Absyn.VarType_auto)RESULT).col_num = -1;
((lang.Absyn.VarType_auto)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // VarType ::= _SYMB_45 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_func();
((lang.Absyn.VarType_func)RESULT).line_num = -1;
((lang.Absyn.VarType_func)RESULT).col_num = -1;
((lang.Absyn.VarType_func)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 137: // VarType ::= _SYMB_59 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_object();
((lang.Absyn.VarType_object)RESULT).line_num = -1;
((lang.Absyn.VarType_object)RESULT).col_num = -1;
((lang.Absyn.VarType_object)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 138: // TypeCast ::= _SYMB_75 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toInt();
((lang.Absyn.TypeCast_toInt)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 139: // TypeCast ::= _SYMB_74 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toDouble();
((lang.Absyn.TypeCast_toDouble)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 140: // TypeCast ::= _SYMB_72 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toBool();
((lang.Absyn.TypeCast_toBool)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 141: // TypeCast ::= _SYMB_73 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toChar();
((lang.Absyn.TypeCast_toChar)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 142: // TypeCast ::= _SYMB_76 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = ((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toString();
((lang.Absyn.TypeCast_toString)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
