
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package lang;

import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\211\000\002\002\004\000\002\002\003\000\002\002" +
    "\006\000\002\003\013\000\002\003\012\000\002\003\007" +
    "\000\002\003\011\000\002\003\004\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
    "\003\003\000\002\003\003\000\002\003\003\000\002\003" +
    "\003\000\002\003\010\000\002\003\010\000\002\003\004" +
    "\000\002\003\012\000\002\003\007\000\002\003\003\000" +
    "\002\003\005\000\002\004\003\000\002\005\002\000\002" +
    "\005\003\000\002\005\005\000\002\006\006\000\002\007" +
    "\004\000\002\010\005\000\002\011\004\000\002\012\007" +
    "\000\002\012\011\000\002\012\013\000\002\012\014\000" +
    "\002\012\016\000\002\012\020\000\002\012\013\000\002" +
    "\012\013\000\002\013\007\000\002\013\013\000\002\013" +
    "\011\000\002\014\004\000\002\015\002\000\002\015\003" +
    "\000\002\015\005\000\002\016\002\000\002\016\004\000" +
    "\002\017\003\000\002\017\004\000\002\017\003\000\002" +
    "\017\003\000\002\017\004\000\002\017\003\000\002\017" +
    "\003\000\002\017\003\000\002\017\003\000\002\017\006" +
    "\000\002\017\010\000\002\017\010\000\002\017\005\000" +
    "\002\017\005\000\002\017\005\000\002\017\005\000\002" +
    "\017\006\000\002\017\003\000\002\020\002\000\002\020" +
    "\003\000\002\020\005\000\002\021\005\000\002\021\011" +
    "\000\002\021\010\000\002\021\012\000\002\021\010\000" +
    "\002\021\012\000\002\021\010\000\002\021\012\000\002" +
    "\021\005\000\002\021\010\000\002\021\006\000\002\021" +
    "\010\000\002\021\005\000\002\022\005\000\002\022\003" +
    "\000\002\023\005\000\002\023\005\000\002\023\005\000" +
    "\002\023\003\000\002\024\005\000\002\024\005\000\002" +
    "\024\003\000\002\025\005\000\002\025\005\000\002\025" +
    "\005\000\002\025\005\000\002\025\003\000\002\026\005" +
    "\000\002\026\005\000\002\026\003\000\002\027\005\000" +
    "\002\027\003\000\002\030\005\000\002\030\003\000\002" +
    "\031\003\000\002\031\003\000\002\031\003\000\002\031" +
    "\003\000\002\031\003\000\002\031\003\000\002\032\003" +
    "\000\002\032\003\000\002\033\003\000\002\034\003\000" +
    "\002\035\003\000\002\036\003\000\002\037\003\000\002" +
    "\040\003\000\002\041\003\000\002\042\003\000\002\043" +
    "\002\000\002\043\003\000\002\043\005\000\002\044\003" +
    "\000\002\044\003\000\002\045\003\000\002\045\003\000" +
    "\002\045\003\000\002\045\003\000\002\045\003\000\002" +
    "\045\003\000\002\045\003\000\002\045\003\000\002\046" +
    "\003\000\002\046\003\000\002\046\003\000\002\046\003" +
    "\000\002\046\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0134\000\072\002\uffd3\005\uffd3\007\uffd3\044\uffd3\045" +
    "\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3\053\uffd3" +
    "\054\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067\uffd3\070" +
    "\uffd3\072\uffd3\074\uffd3\075\006\076\uffd3\101\uffd3\103\uffd3" +
    "\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002\000\004\002" +
    "\u0136\001\002\000\070\002\000\005\041\007\037\044\022" +
    "\045\020\046\015\047\013\050\012\051\054\052\053\053" +
    "\051\054\036\057\035\060\033\061\031\063\030\067\046" +
    "\070\045\072\044\074\043\076\042\101\025\103\023\104" +
    "\016\106\014\116\034\125\024\001\002\000\004\004\007" +
    "\001\002\000\004\062\010\001\002\000\070\002\uffd3\005" +
    "\uffd3\007\uffd3\044\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3" +
    "\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061" +
    "\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3" +
    "\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001" +
    "\002\000\070\002\uffff\005\041\007\037\044\022\045\020" +
    "\046\015\047\013\050\012\051\054\052\053\053\051\054" +
    "\036\057\035\060\033\061\031\063\030\067\046\070\045" +
    "\072\044\074\043\076\042\101\025\103\023\104\016\106" +
    "\014\116\034\125\024\001\002\000\004\125\u012d\001\002" +
    "\000\004\125\uff82\001\002\000\004\125\uff81\001\002\000" +
    "\072\002\ufff9\005\ufff9\007\ufff9\010\ufff9\044\ufff9\045\ufff9" +
    "\046\ufff9\047\ufff9\050\ufff9\051\ufff9\052\ufff9\053\ufff9\054" +
    "\ufff9\057\ufff9\060\ufff9\061\ufff9\063\ufff9\067\ufff9\070\ufff9" +
    "\072\ufff9\074\ufff9\076\ufff9\101\ufff9\103\ufff9\104\ufff9\106" +
    "\ufff9\116\ufff9\125\ufff9\001\002\000\042\005\041\013\073" +
    "\016\072\056\070\057\035\066\110\070\045\072\044\077" +
    "\102\101\025\114\071\121\063\122\074\123\061\124\067" +
    "\125\066\001\002\000\072\002\ufff4\005\ufff4\007\ufff4\010" +
    "\ufff4\044\ufff4\045\ufff4\046\ufff4\047\ufff4\050\ufff4\051\ufff4" +
    "\052\ufff4\053\ufff4\054\ufff4\057\ufff4\060\ufff4\061\ufff4\063" +
    "\ufff4\067\ufff4\070\ufff4\072\ufff4\074\ufff4\076\ufff4\101\ufff4" +
    "\103\ufff4\104\ufff4\106\ufff4\116\ufff4\125\ufff4\001\002\000" +
    "\004\125\uff83\001\002\000\072\002\uffd2\005\uffd2\007\uffd2" +
    "\010\uffd2\044\uffd2\045\uffd2\046\uffd2\047\uffd2\050\uffd2\051" +
    "\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\060\uffd2\061\uffd2" +
    "\063\uffd2\067\uffd2\070\uffd2\072\uffd2\074\uffd2\076\uffd2\101" +
    "\uffd2\103\uffd2\104\uffd2\106\uffd2\116\uffd2\125\uffd2\001\002" +
    "\000\004\125\uff80\001\002\000\024\044\022\045\020\047" +
    "\013\054\036\060\033\067\046\074\055\106\014\125\u0100" +
    "\001\002\000\026\005\154\012\353\015\364\032\361\033" +
    "\360\034\357\035\356\036\355\037\354\040\352\001\002" +
    "\000\004\005\341\001\002\000\072\002\ufff5\005\ufff5\007" +
    "\ufff5\010\ufff5\044\ufff5\045\ufff5\046\ufff5\047\ufff5\050\ufff5" +
    "\051\ufff5\052\ufff5\053\ufff5\054\ufff5\057\ufff5\060\ufff5\061" +
    "\ufff5\063\ufff5\067\ufff5\070\ufff5\072\ufff5\074\ufff5\076\ufff5" +
    "\101\ufff5\103\ufff5\104\ufff5\106\ufff5\116\ufff5\125\ufff5\001" +
    "\002\000\072\002\ufff3\005\ufff3\007\ufff3\010\ufff3\044\ufff3" +
    "\045\ufff3\046\ufff3\047\ufff3\050\ufff3\051\ufff3\052\ufff3\053" +
    "\ufff3\054\ufff3\057\ufff3\060\ufff3\061\ufff3\063\ufff3\067\ufff3" +
    "\070\ufff3\072\ufff3\074\ufff3\076\ufff3\101\ufff3\103\ufff3\104" +
    "\ufff3\106\ufff3\116\ufff3\125\ufff3\001\002\000\042\005\041" +
    "\013\073\016\072\056\070\057\035\066\110\070\045\072" +
    "\044\077\102\101\025\114\071\121\063\122\074\123\061" +
    "\124\067\125\066\001\002\000\024\044\022\045\020\047" +
    "\013\054\036\060\033\067\046\074\055\106\014\115\320" +
    "\001\002\000\072\002\ufff7\005\ufff7\007\ufff7\010\ufff7\044" +
    "\ufff7\045\ufff7\046\ufff7\047\ufff7\050\ufff7\051\ufff7\052\ufff7" +
    "\053\ufff7\054\ufff7\057\ufff7\060\ufff7\061\ufff7\063\ufff7\067" +
    "\ufff7\070\ufff7\072\ufff7\074\ufff7\076\ufff7\101\ufff7\103\ufff7" +
    "\104\ufff7\106\ufff7\116\ufff7\125\ufff7\001\002\000\004\125" +
    "\uff7f\001\002\000\042\005\041\013\073\016\072\056\070" +
    "\057\035\066\110\070\045\072\044\077\102\101\025\114" +
    "\071\121\063\122\074\123\061\124\067\125\066\001\002" +
    "\000\004\005\301\001\002\000\004\125\uff84\001\002\000" +
    "\070\005\uffd3\007\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3" +
    "\047\uffd3\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057" +
    "\uffd3\060\uffd3\061\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3" +
    "\074\uffd3\076\uffd3\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116" +
    "\uffd3\125\uffd3\001\002\000\004\125\274\001\002\000\042" +
    "\005\041\013\073\016\072\056\070\057\035\066\110\070" +
    "\045\072\044\077\102\101\025\114\071\121\063\122\074" +
    "\123\061\124\067\125\066\001\002\000\042\005\041\013" +
    "\073\016\072\056\070\057\035\066\110\070\045\072\044" +
    "\077\102\101\025\114\071\121\063\122\074\123\061\124" +
    "\067\125\066\001\002\000\004\125\262\001\002\000\004" +
    "\005\251\001\002\000\004\005\243\001\002\000\004\125" +
    "\uff85\001\002\000\072\002\uffec\005\uffec\007\uffec\010\uffec" +
    "\044\uffec\045\uffec\046\uffec\047\uffec\050\uffec\051\uffec\052" +
    "\uffec\053\uffec\054\uffec\057\uffec\060\uffec\061\uffec\063\uffec" +
    "\067\uffec\070\uffec\072\uffec\074\uffec\076\uffec\101\uffec\103" +
    "\uffec\104\uffec\106\uffec\116\uffec\125\uffec\001\002\000\072" +
    "\002\ufff2\005\ufff2\007\ufff2\010\ufff2\044\ufff2\045\ufff2\046" +
    "\ufff2\047\ufff2\050\ufff2\051\ufff2\052\ufff2\053\ufff2\054\ufff2" +
    "\057\ufff2\060\ufff2\061\ufff2\063\ufff2\067\ufff2\070\ufff2\072" +
    "\ufff2\074\ufff2\076\ufff2\101\ufff2\103\ufff2\104\ufff2\106\ufff2" +
    "\116\ufff2\125\ufff2\001\002\000\072\002\ufff8\005\ufff8\007" +
    "\ufff8\010\ufff8\044\ufff8\045\ufff8\046\ufff8\047\ufff8\050\ufff8" +
    "\051\ufff8\052\ufff8\053\ufff8\054\ufff8\057\ufff8\060\ufff8\061" +
    "\ufff8\063\ufff8\067\ufff8\070\ufff8\072\ufff8\074\ufff8\076\ufff8" +
    "\101\ufff8\103\ufff8\104\ufff8\106\ufff8\116\ufff8\125\ufff8\001" +
    "\002\000\072\002\ufff6\005\ufff6\007\ufff6\010\ufff6\044\ufff6" +
    "\045\ufff6\046\ufff6\047\ufff6\050\ufff6\051\ufff6\052\ufff6\053" +
    "\ufff6\054\ufff6\057\ufff6\060\ufff6\061\ufff6\063\ufff6\067\ufff6" +
    "\070\ufff6\072\ufff6\074\ufff6\076\ufff6\101\ufff6\103\ufff6\104" +
    "\ufff6\106\ufff6\116\ufff6\125\ufff6\001\002\000\004\125\227" +
    "\001\002\000\022\044\022\045\020\047\013\054\036\060" +
    "\033\067\046\074\055\106\014\001\002\000\004\125\uff7e" +
    "\001\002\000\004\125\057\001\002\000\004\015\060\001" +
    "\002\000\042\005\041\013\073\016\072\056\070\057\035" +
    "\066\110\070\045\072\044\077\102\101\025\114\071\121" +
    "\063\122\074\123\061\124\067\125\066\001\002\000\134" +
    "\002\uffd1\005\uffd1\006\uffd1\007\uffd1\010\uffd1\011\uffd1\014" +
    "\uffd1\016\uffd1\017\uffd1\020\uffd1\021\uffd1\022\uffd1\023\uffd1" +
    "\024\uffd1\025\uffd1\026\uffd1\027\uffd1\030\uffd1\031\uffd1\041" +
    "\uffd1\042\uffd1\044\uffd1\045\uffd1\046\uffd1\047\uffd1\050\uffd1" +
    "\051\uffd1\052\uffd1\053\uffd1\054\uffd1\057\uffd1\060\uffd1\061" +
    "\uffd1\063\uffd1\067\uffd1\070\uffd1\072\uffd1\074\uffd1\076\uffd1" +
    "\101\uffd1\103\uffd1\104\uffd1\106\uffd1\116\uffd1\125\uffd1\001" +
    "\002\000\132\002\uffa7\005\uffa7\006\uffa7\007\uffa7\010\uffa7" +
    "\011\uffa7\014\uffa7\016\uffa7\020\222\021\221\022\220\023" +
    "\uffa7\024\uffa7\025\uffa7\026\uffa7\027\uffa7\030\uffa7\031\uffa7" +
    "\041\uffa7\042\uffa7\044\uffa7\045\uffa7\046\uffa7\047\uffa7\050" +
    "\uffa7\051\uffa7\052\uffa7\053\uffa7\054\uffa7\057\uffa7\060\uffa7" +
    "\061\uffa7\063\uffa7\067\uffa7\070\uffa7\072\uffa7\074\uffa7\076" +
    "\uffa7\101\uffa7\103\uffa7\104\uffa7\106\uffa7\116\uffa7\125\uffa7" +
    "\001\002\000\134\002\uffcc\005\uffcc\006\uffcc\007\uffcc\010" +
    "\uffcc\011\uffcc\014\uffcc\016\uffcc\017\uffcc\020\uffcc\021\uffcc" +
    "\022\uffcc\023\uffcc\024\uffcc\025\uffcc\026\uffcc\027\uffcc\030" +
    "\uffcc\031\uffcc\041\uffcc\042\uffcc\044\uffcc\045\uffcc\046\uffcc" +
    "\047\uffcc\050\uffcc\051\uffcc\052\uffcc\053\uffcc\054\uffcc\057" +
    "\uffcc\060\uffcc\061\uffcc\063\uffcc\067\uffcc\070\uffcc\072\uffcc" +
    "\074\uffcc\076\uffcc\101\uffcc\103\uffcc\104\uffcc\106\uffcc\116" +
    "\uffcc\125\uffcc\001\002\000\124\002\uff8c\005\uff8c\006\uff8c" +
    "\007\uff8c\010\uff8c\011\uff8c\014\uff8c\016\215\023\216\024" +
    "\uff8c\025\uff8c\026\uff8c\027\uff8c\030\uff8c\031\uff8c\041\uff8c" +
    "\042\uff8c\044\uff8c\045\uff8c\046\uff8c\047\uff8c\050\uff8c\051" +
    "\uff8c\052\uff8c\053\uff8c\054\uff8c\057\uff8c\060\uff8c\061\uff8c" +
    "\063\uff8c\067\uff8c\070\uff8c\072\uff8c\074\uff8c\076\uff8c\101" +
    "\uff8c\103\uff8c\104\uff8c\106\uff8c\116\uff8c\125\uff8c\001\002" +
    "\000\120\002\uffa2\005\uffa2\006\uffa2\007\uffa2\010\uffa2\011" +
    "\uffa2\014\uffa2\024\uffa2\025\uffa2\026\uffa2\027\uffa2\030\uffa2" +
    "\031\uffa2\041\uffa2\042\uffa2\044\uffa2\045\uffa2\046\uffa2\047" +
    "\uffa2\050\uffa2\051\uffa2\052\uffa2\053\uffa2\054\uffa2\057\uffa2" +
    "\060\uffa2\061\uffa2\063\uffa2\067\uffa2\070\uffa2\072\uffa2\074" +
    "\uffa2\076\uffa2\101\uffa2\103\uffa2\104\uffa2\106\uffa2\116\uffa2" +
    "\125\uffa2\001\002\000\140\002\uffc9\005\154\006\uffc9\007" +
    "\uffc9\010\uffc9\011\uffc9\012\156\013\155\014\uffc9\016\uffc9" +
    "\017\uffc9\020\uffc9\021\uffc9\022\uffc9\023\uffc9\024\uffc9\025" +
    "\uffc9\026\uffc9\027\uffc9\030\uffc9\031\uffc9\041\uffc9\042\uffc9" +
    "\044\uffc9\045\uffc9\046\uffc9\047\uffc9\050\uffc9\051\uffc9\052" +
    "\uffc9\053\uffc9\054\uffc9\057\uffc9\060\uffc9\061\uffc9\063\uffc9" +
    "\067\uffc9\070\uffc9\072\uffc9\074\uffc9\076\uffc9\101\uffc9\103" +
    "\uffc9\104\uffc9\106\uffc9\116\uffc9\125\uffc9\001\002\000\134" +
    "\002\uffce\005\uffce\006\uffce\007\uffce\010\uffce\011\uffce\014" +
    "\uffce\016\uffce\017\uffce\020\uffce\021\uffce\022\uffce\023\uffce" +
    "\024\uffce\025\uffce\026\uffce\027\uffce\030\uffce\031\uffce\041" +
    "\uffce\042\uffce\044\uffce\045\uffce\046\uffce\047\uffce\050\uffce" +
    "\051\uffce\052\uffce\053\uffce\054\uffce\057\uffce\060\uffce\061" +
    "\uffce\063\uffce\067\uffce\070\uffce\072\uffce\074\uffce\076\uffce" +
    "\101\uffce\103\uffce\104\uffce\106\uffce\116\uffce\125\uffce\001" +
    "\002\000\134\002\uffca\005\uffca\006\uffca\007\uffca\010\uffca" +
    "\011\uffca\014\uffca\016\uffca\017\uffca\020\uffca\021\uffca\022" +
    "\uffca\023\uffca\024\uffca\025\uffca\026\uffca\027\uffca\030\uffca" +
    "\031\uffca\041\uffca\042\uffca\044\uffca\045\uffca\046\uffca\047" +
    "\uffca\050\uffca\051\uffca\052\uffca\053\uffca\054\uffca\057\uffca" +
    "\060\uffca\061\uffca\063\uffca\067\uffca\070\uffca\072\uffca\074" +
    "\uffca\076\uffca\101\uffca\103\uffca\104\uffca\106\uffca\116\uffca" +
    "\125\uffca\001\002\000\134\002\uffcb\005\uffcb\006\uffcb\007" +
    "\uffcb\010\uffcb\011\uffcb\014\uffcb\016\uffcb\017\uffcb\020\uffcb" +
    "\021\uffcb\022\uffcb\023\uffcb\024\uffcb\025\uffcb\026\uffcb\027" +
    "\uffcb\030\uffcb\031\uffcb\041\uffcb\042\uffcb\044\uffcb\045\uffcb" +
    "\046\uffcb\047\uffcb\050\uffcb\051\uffcb\052\uffcb\053\uffcb\054" +
    "\uffcb\057\uffcb\060\uffcb\061\uffcb\063\uffcb\067\uffcb\070\uffcb" +
    "\072\uffcb\074\uffcb\076\uffcb\101\uffcb\103\uffcb\104\uffcb\106" +
    "\uffcb\116\uffcb\125\uffcb\001\002\000\006\123\152\124\153" +
    "\001\002\000\044\005\041\013\073\014\uffe9\016\072\056" +
    "\070\057\035\066\110\070\045\072\044\077\102\101\025" +
    "\114\071\121\063\122\074\123\061\124\067\125\066\001" +
    "\002\000\134\002\uffcf\005\uffcf\006\uffcf\007\uffcf\010\uffcf" +
    "\011\uffcf\014\uffcf\016\uffcf\017\uffcf\020\uffcf\021\uffcf\022" +
    "\uffcf\023\uffcf\024\uffcf\025\uffcf\026\uffcf\027\uffcf\030\uffcf" +
    "\031\uffcf\041\uffcf\042\uffcf\044\uffcf\045\uffcf\046\uffcf\047" +
    "\uffcf\050\uffcf\051\uffcf\052\uffcf\053\uffcf\054\uffcf\057\uffcf" +
    "\060\uffcf\061\uffcf\063\uffcf\067\uffcf\070\uffcf\072\uffcf\074" +
    "\uffcf\076\uffcf\101\uffcf\103\uffcf\104\uffcf\106\uffcf\116\uffcf" +
    "\125\uffcf\001\002\000\120\002\uff9f\005\uff9f\006\uff9f\007" +
    "\uff9f\010\uff9f\011\uff9f\014\uff9f\024\136\025\135\026\134" +
    "\027\133\030\uff9f\031\uff9f\041\uff9f\042\uff9f\044\uff9f\045" +
    "\uff9f\046\uff9f\047\uff9f\050\uff9f\051\uff9f\052\uff9f\053\uff9f" +
    "\054\uff9f\057\uff9f\060\uff9f\061\uff9f\063\uff9f\067\uff9f\070" +
    "\uff9f\072\uff9f\074\uff9f\076\uff9f\101\uff9f\103\uff9f\104\uff9f" +
    "\106\uff9f\116\uff9f\125\uff9f\001\002\000\110\002\uff8d\005" +
    "\uff8d\006\uff8d\007\uff8d\010\uff8d\011\uff8d\014\uff8d\030\131" +
    "\031\130\041\uff8d\042\uff8d\044\uff8d\045\uff8d\046\uff8d\047" +
    "\uff8d\050\uff8d\051\uff8d\052\uff8d\053\uff8d\054\uff8d\057\uff8d" +
    "\060\uff8d\061\uff8d\063\uff8d\067\uff8d\070\uff8d\072\uff8d\074" +
    "\uff8d\076\uff8d\101\uff8d\103\uff8d\104\uff8d\106\uff8d\116\uff8d" +
    "\125\uff8d\001\002\000\104\002\uff8e\005\uff8e\006\uff8e\007" +
    "\uff8e\010\uff8e\011\uff8e\014\uff8e\041\uff8e\042\uff8e\044\uff8e" +
    "\045\uff8e\046\uff8e\047\uff8e\050\uff8e\051\uff8e\052\uff8e\053" +
    "\uff8e\054\uff8e\057\uff8e\060\uff8e\061\uff8e\063\uff8e\067\uff8e" +
    "\070\uff8e\072\uff8e\074\uff8e\076\uff8e\101\uff8e\103\uff8e\104" +
    "\uff8e\106\uff8e\116\uff8e\125\uff8e\001\002\000\072\002\uffed" +
    "\005\uffed\007\uffed\010\uffed\044\uffed\045\uffed\046\uffed\047" +
    "\uffed\050\uffed\051\uffed\052\uffed\053\uffed\054\uffed\057\uffed" +
    "\060\uffed\061\uffed\063\uffed\067\uffed\070\uffed\072\uffed\074" +
    "\uffed\076\uffed\101\uffed\103\uffed\104\uffed\106\uffed\116\uffed" +
    "\125\uffed\001\002\000\104\002\uff8f\005\uff8f\006\uff8f\007" +
    "\uff8f\010\uff8f\011\uff8f\014\uff8f\041\uff8f\042\uff8f\044\uff8f" +
    "\045\uff8f\046\uff8f\047\uff8f\050\uff8f\051\uff8f\052\uff8f\053" +
    "\uff8f\054\uff8f\057\uff8f\060\uff8f\061\uff8f\063\uff8f\067\uff8f" +
    "\070\uff8f\072\uff8f\074\uff8f\076\uff8f\101\uff8f\103\uff8f\104" +
    "\uff8f\106\uff8f\116\uff8f\125\uff8f\001\002\000\004\005\125" +
    "\001\002\000\104\002\uff9d\005\uff9d\006\uff9d\007\uff9d\010" +
    "\uff9d\011\uff9d\014\uff9d\041\uff9d\042\uff9d\044\uff9d\045\uff9d" +
    "\046\uff9d\047\uff9d\050\uff9d\051\uff9d\052\uff9d\053\uff9d\054" +
    "\uff9d\057\uff9d\060\uff9d\061\uff9d\063\uff9d\067\uff9d\070\uff9d" +
    "\072\uff9d\074\uff9d\076\uff9d\101\uff9d\103\uff9d\104\uff9d\106" +
    "\uff9d\116\uff9d\125\uff9d\001\002\000\104\002\uff9b\005\uff9b" +
    "\006\uff9b\007\uff9b\010\uff9b\011\uff9b\014\uff9b\041\123\042" +
    "\uff9b\044\uff9b\045\uff9b\046\uff9b\047\uff9b\050\uff9b\051\uff9b" +
    "\052\uff9b\053\uff9b\054\uff9b\057\uff9b\060\uff9b\061\uff9b\063" +
    "\uff9b\067\uff9b\070\uff9b\072\uff9b\074\uff9b\076\uff9b\101\uff9b" +
    "\103\uff9b\104\uff9b\106\uff9b\116\uff9b\125\uff9b\001\002\000" +
    "\102\002\uff90\005\uff90\006\uff90\007\uff90\010\uff90\011\uff90" +
    "\014\uff90\042\121\044\uff90\045\uff90\046\uff90\047\uff90\050" +
    "\uff90\051\uff90\052\uff90\053\uff90\054\uff90\057\uff90\060\uff90" +
    "\061\uff90\063\uff90\067\uff90\070\uff90\072\uff90\074\uff90\076" +
    "\uff90\101\uff90\103\uff90\104\uff90\106\uff90\116\uff90\125\uff90" +
    "\001\002\000\100\002\uff91\005\uff91\006\uff91\007\uff91\010" +
    "\uff91\011\uff91\014\uff91\044\uff91\045\uff91\046\uff91\047\uff91" +
    "\050\uff91\051\uff91\052\uff91\053\uff91\054\uff91\057\uff91\060" +
    "\uff91\061\uff91\063\uff91\067\uff91\070\uff91\072\uff91\074\uff91" +
    "\076\uff91\101\uff91\103\uff91\104\uff91\106\uff91\116\uff91\125" +
    "\uff91\001\002\000\100\002\uff92\005\uff92\006\uff92\007\uff92" +
    "\010\uff92\011\uff92\014\uff92\044\uff92\045\uff92\046\uff92\047" +
    "\uff92\050\uff92\051\uff92\052\uff92\053\uff92\054\uff92\057\uff92" +
    "\060\uff92\061\uff92\063\uff92\067\uff92\070\uff92\072\uff92\074" +
    "\uff92\076\uff92\101\uff92\103\uff92\104\uff92\106\uff92\116\uff92" +
    "\125\uff92\001\002\000\004\005\117\001\002\000\134\002" +
    "\uffc0\005\uffc0\006\uffc0\007\uffc0\010\uffc0\011\uffc0\014\uffc0" +
    "\016\uffc0\017\uffc0\020\uffc0\021\uffc0\022\uffc0\023\uffc0\024" +
    "\uffc0\025\uffc0\026\uffc0\027\uffc0\030\uffc0\031\uffc0\041\uffc0" +
    "\042\uffc0\044\uffc0\045\uffc0\046\uffc0\047\uffc0\050\uffc0\051" +
    "\uffc0\052\uffc0\053\uffc0\054\uffc0\057\uffc0\060\uffc0\061\uffc0" +
    "\063\uffc0\067\uffc0\070\uffc0\072\uffc0\074\uffc0\076\uffc0\101" +
    "\uffc0\103\uffc0\104\uffc0\106\uffc0\116\uffc0\125\uffc0\001\002" +
    "\000\134\002\uff8b\005\uff8b\006\uff8b\007\uff8b\010\uff8b\011" +
    "\uff8b\014\uff8b\016\uff8b\017\uff8b\020\uff8b\021\uff8b\022\uff8b" +
    "\023\uff8b\024\uff8b\025\uff8b\026\uff8b\027\uff8b\030\uff8b\031" +
    "\uff8b\041\uff8b\042\uff8b\044\uff8b\045\uff8b\046\uff8b\047\uff8b" +
    "\050\uff8b\051\uff8b\052\uff8b\053\uff8b\054\uff8b\057\uff8b\060" +
    "\uff8b\061\uff8b\063\uff8b\067\uff8b\070\uff8b\072\uff8b\074\uff8b" +
    "\076\uff8b\101\uff8b\103\uff8b\104\uff8b\106\uff8b\116\uff8b\125" +
    "\uff8b\001\002\000\134\002\uffae\005\uffae\006\uffae\007\uffae" +
    "\010\uffae\011\uffae\014\uffae\016\uffae\017\uffae\020\uffae\021" +
    "\uffae\022\uffae\023\uffae\024\uffae\025\uffae\026\uffae\027\uffae" +
    "\030\uffae\031\uffae\041\uffae\042\uffae\044\uffae\045\uffae\046" +
    "\uffae\047\uffae\050\uffae\051\uffae\052\uffae\053\uffae\054\uffae" +
    "\057\uffae\060\uffae\061\uffae\063\uffae\067\uffae\070\uffae\072" +
    "\uffae\074\uffae\076\uffae\101\uffae\103\uffae\104\uffae\106\uffae" +
    "\116\uffae\125\uffae\001\002\000\134\002\uffaa\005\uffaa\006" +
    "\uffaa\007\uffaa\010\uffaa\011\uffaa\014\uffaa\016\uffaa\017\115" +
    "\020\uffaa\021\uffaa\022\uffaa\023\uffaa\024\uffaa\025\uffaa\026" +
    "\uffaa\027\uffaa\030\uffaa\031\uffaa\041\uffaa\042\uffaa\044\uffaa" +
    "\045\uffaa\046\uffaa\047\uffaa\050\uffaa\051\uffaa\052\uffaa\053" +
    "\uffaa\054\uffaa\057\uffaa\060\uffaa\061\uffaa\063\uffaa\067\uffaa" +
    "\070\uffaa\072\uffaa\074\uffaa\076\uffaa\101\uffaa\103\uffaa\104" +
    "\uffaa\106\uffaa\116\uffaa\125\uffaa\001\002\000\042\005\041" +
    "\013\073\016\072\056\070\057\035\066\110\070\045\072" +
    "\044\077\102\101\025\114\071\121\063\122\074\123\061" +
    "\124\067\125\066\001\002\000\134\002\uffaf\005\uffaf\006" +
    "\uffaf\007\uffaf\010\uffaf\011\uffaf\014\uffaf\016\uffaf\017\uffaf" +
    "\020\uffaf\021\uffaf\022\uffaf\023\uffaf\024\uffaf\025\uffaf\026" +
    "\uffaf\027\uffaf\030\uffaf\031\uffaf\041\uffaf\042\uffaf\044\uffaf" +
    "\045\uffaf\046\uffaf\047\uffaf\050\uffaf\051\uffaf\052\uffaf\053" +
    "\uffaf\054\uffaf\057\uffaf\060\uffaf\061\uffaf\063\uffaf\067\uffaf" +
    "\070\uffaf\072\uffaf\074\uffaf\076\uffaf\101\uffaf\103\uffaf\104" +
    "\uffaf\106\uffaf\116\uffaf\125\uffaf\001\002\000\004\006\120" +
    "\001\002\000\134\002\uffc3\005\uffc3\006\uffc3\007\uffc3\010" +
    "\uffc3\011\uffc3\014\uffc3\016\uffc3\017\uffc3\020\uffc3\021\uffc3" +
    "\022\uffc3\023\uffc3\024\uffc3\025\uffc3\026\uffc3\027\uffc3\030" +
    "\uffc3\031\uffc3\041\uffc3\042\uffc3\044\uffc3\045\uffc3\046\uffc3" +
    "\047\uffc3\050\uffc3\051\uffc3\052\uffc3\053\uffc3\054\uffc3\057" +
    "\uffc3\060\uffc3\061\uffc3\063\uffc3\067\uffc3\070\uffc3\072\uffc3" +
    "\074\uffc3\076\uffc3\101\uffc3\103\uffc3\104\uffc3\106\uffc3\116" +
    "\uffc3\125\uffc3\001\002\000\042\005\041\013\073\016\072" +
    "\056\070\057\035\066\110\070\045\072\044\077\102\101" +
    "\025\114\071\121\063\122\074\123\061\124\067\125\066" +
    "\001\002\000\104\002\uff9c\005\uff9c\006\uff9c\007\uff9c\010" +
    "\uff9c\011\uff9c\014\uff9c\041\123\042\uff9c\044\uff9c\045\uff9c" +
    "\046\uff9c\047\uff9c\050\uff9c\051\uff9c\052\uff9c\053\uff9c\054" +
    "\uff9c\057\uff9c\060\uff9c\061\uff9c\063\uff9c\067\uff9c\070\uff9c" +
    "\072\uff9c\074\uff9c\076\uff9c\101\uff9c\103\uff9c\104\uff9c\106" +
    "\uff9c\116\uff9c\125\uff9c\001\002\000\042\005\041\013\073" +
    "\016\072\056\070\057\035\066\110\070\045\072\044\077" +
    "\102\101\025\114\071\121\063\122\074\123\061\124\067" +
    "\125\066\001\002\000\104\002\uff9e\005\uff9e\006\uff9e\007" +
    "\uff9e\010\uff9e\011\uff9e\014\uff9e\041\uff9e\042\uff9e\044\uff9e" +
    "\045\uff9e\046\uff9e\047\uff9e\050\uff9e\051\uff9e\052\uff9e\053" +
    "\uff9e\054\uff9e\057\uff9e\060\uff9e\061\uff9e\063\uff9e\067\uff9e" +
    "\070\uff9e\072\uff9e\074\uff9e\076\uff9e\101\uff9e\103\uff9e\104" +
    "\uff9e\106\uff9e\116\uff9e\125\uff9e\001\002\000\004\123\126" +
    "\001\002\000\004\006\127\001\002\000\134\002\uffc1\005" +
    "\uffc1\006\uffc1\007\uffc1\010\uffc1\011\uffc1\014\uffc1\016\uffc1" +
    "\017\uffc1\020\uffc1\021\uffc1\022\uffc1\023\uffc1\024\uffc1\025" +
    "\uffc1\026\uffc1\027\uffc1\030\uffc1\031\uffc1\041\uffc1\042\uffc1" +
    "\044\uffc1\045\uffc1\046\uffc1\047\uffc1\050\uffc1\051\uffc1\052" +
    "\uffc1\053\uffc1\054\uffc1\057\uffc1\060\uffc1\061\uffc1\063\uffc1" +
    "\067\uffc1\070\uffc1\072\uffc1\074\uffc1\076\uffc1\101\uffc1\103" +
    "\uffc1\104\uffc1\106\uffc1\116\uffc1\125\uffc1\001\002\000\042" +
    "\005\041\013\073\016\072\056\070\057\035\066\110\070" +
    "\045\072\044\077\102\101\025\114\071\121\063\122\074" +
    "\123\061\124\067\125\066\001\002\000\042\005\041\013" +
    "\073\016\072\056\070\057\035\066\110\070\045\072\044" +
    "\077\102\101\025\114\071\121\063\122\074\123\061\124" +
    "\067\125\066\001\002\000\120\002\uffa1\005\uffa1\006\uffa1" +
    "\007\uffa1\010\uffa1\011\uffa1\014\uffa1\024\136\025\135\026" +
    "\134\027\133\030\uffa1\031\uffa1\041\uffa1\042\uffa1\044\uffa1" +
    "\045\uffa1\046\uffa1\047\uffa1\050\uffa1\051\uffa1\052\uffa1\053" +
    "\uffa1\054\uffa1\057\uffa1\060\uffa1\061\uffa1\063\uffa1\067\uffa1" +
    "\070\uffa1\072\uffa1\074\uffa1\076\uffa1\101\uffa1\103\uffa1\104" +
    "\uffa1\106\uffa1\116\uffa1\125\uffa1\001\002\000\042\005\041" +
    "\013\073\016\072\056\070\057\035\066\110\070\045\072" +
    "\044\077\102\101\025\114\071\121\063\122\074\123\061" +
    "\124\067\125\066\001\002\000\042\005\041\013\073\016" +
    "\072\056\070\057\035\066\110\070\045\072\044\077\102" +
    "\101\025\114\071\121\063\122\074\123\061\124\067\125" +
    "\066\001\002\000\042\005\041\013\073\016\072\056\070" +
    "\057\035\066\110\070\045\072\044\077\102\101\025\114" +
    "\071\121\063\122\074\123\061\124\067\125\066\001\002" +
    "\000\042\005\041\013\073\016\072\056\070\057\035\066" +
    "\110\070\045\072\044\077\102\101\025\114\071\121\063" +
    "\122\074\123\061\124\067\125\066\001\002\000\120\002" +
    "\uffa6\005\uffa6\006\uffa6\007\uffa6\010\uffa6\011\uffa6\014\uffa6" +
    "\024\uffa6\025\uffa6\026\uffa6\027\uffa6\030\uffa6\031\uffa6\041" +
    "\uffa6\042\uffa6\044\uffa6\045\uffa6\046\uffa6\047\uffa6\050\uffa6" +
    "\051\uffa6\052\uffa6\053\uffa6\054\uffa6\057\uffa6\060\uffa6\061" +
    "\uffa6\063\uffa6\067\uffa6\070\uffa6\072\uffa6\074\uffa6\076\uffa6" +
    "\101\uffa6\103\uffa6\104\uffa6\106\uffa6\116\uffa6\125\uffa6\001" +
    "\002\000\120\002\uffa5\005\uffa5\006\uffa5\007\uffa5\010\uffa5" +
    "\011\uffa5\014\uffa5\024\uffa5\025\uffa5\026\uffa5\027\uffa5\030" +
    "\uffa5\031\uffa5\041\uffa5\042\uffa5\044\uffa5\045\uffa5\046\uffa5" +
    "\047\uffa5\050\uffa5\051\uffa5\052\uffa5\053\uffa5\054\uffa5\057" +
    "\uffa5\060\uffa5\061\uffa5\063\uffa5\067\uffa5\070\uffa5\072\uffa5" +
    "\074\uffa5\076\uffa5\101\uffa5\103\uffa5\104\uffa5\106\uffa5\116" +
    "\uffa5\125\uffa5\001\002\000\120\002\uffa4\005\uffa4\006\uffa4" +
    "\007\uffa4\010\uffa4\011\uffa4\014\uffa4\024\uffa4\025\uffa4\026" +
    "\uffa4\027\uffa4\030\uffa4\031\uffa4\041\uffa4\042\uffa4\044\uffa4" +
    "\045\uffa4\046\uffa4\047\uffa4\050\uffa4\051\uffa4\052\uffa4\053" +
    "\uffa4\054\uffa4\057\uffa4\060\uffa4\061\uffa4\063\uffa4\067\uffa4" +
    "\070\uffa4\072\uffa4\074\uffa4\076\uffa4\101\uffa4\103\uffa4\104" +
    "\uffa4\106\uffa4\116\uffa4\125\uffa4\001\002\000\120\002\uffa3" +
    "\005\uffa3\006\uffa3\007\uffa3\010\uffa3\011\uffa3\014\uffa3\024" +
    "\uffa3\025\uffa3\026\uffa3\027\uffa3\030\uffa3\031\uffa3\041\uffa3" +
    "\042\uffa3\044\uffa3\045\uffa3\046\uffa3\047\uffa3\050\uffa3\051" +
    "\uffa3\052\uffa3\053\uffa3\054\uffa3\057\uffa3\060\uffa3\061\uffa3" +
    "\063\uffa3\067\uffa3\070\uffa3\072\uffa3\074\uffa3\076\uffa3\101" +
    "\uffa3\103\uffa3\104\uffa3\106\uffa3\116\uffa3\125\uffa3\001\002" +
    "\000\120\002\uffa0\005\uffa0\006\uffa0\007\uffa0\010\uffa0\011" +
    "\uffa0\014\uffa0\024\136\025\135\026\134\027\133\030\uffa0" +
    "\031\uffa0\041\uffa0\042\uffa0\044\uffa0\045\uffa0\046\uffa0\047" +
    "\uffa0\050\uffa0\051\uffa0\052\uffa0\053\uffa0\054\uffa0\057\uffa0" +
    "\060\uffa0\061\uffa0\063\uffa0\067\uffa0\070\uffa0\072\uffa0\074" +
    "\uffa0\076\uffa0\101\uffa0\103\uffa0\104\uffa0\106\uffa0\116\uffa0" +
    "\125\uffa0\001\002\000\006\011\150\014\uffe8\001\002\000" +
    "\004\014\147\001\002\000\006\011\uffea\014\uffea\001\002" +
    "\000\134\002\uffc5\005\uffc5\006\uffc5\007\uffc5\010\uffc5\011" +
    "\uffc5\014\uffc5\016\uffc5\017\uffc5\020\uffc5\021\uffc5\022\uffc5" +
    "\023\uffc5\024\uffc5\025\uffc5\026\uffc5\027\uffc5\030\uffc5\031" +
    "\uffc5\041\uffc5\042\uffc5\044\uffc5\045\uffc5\046\uffc5\047\uffc5" +
    "\050\uffc5\051\uffc5\052\uffc5\053\uffc5\054\uffc5\057\uffc5\060" +
    "\uffc5\061\uffc5\063\uffc5\067\uffc5\070\uffc5\072\uffc5\074\uffc5" +
    "\076\uffc5\101\uffc5\103\uffc5\104\uffc5\106\uffc5\116\uffc5\125" +
    "\uffc5\001\002\000\044\005\041\013\073\014\uffe9\016\072" +
    "\056\070\057\035\066\110\070\045\072\044\077\102\101" +
    "\025\114\071\121\063\122\074\123\061\124\067\125\066" +
    "\001\002\000\004\014\uffe7\001\002\000\134\002\uffd0\005" +
    "\uffd0\006\uffd0\007\uffd0\010\uffd0\011\uffd0\014\uffd0\016\uffd0" +
    "\017\uffd0\020\uffd0\021\uffd0\022\uffd0\023\uffd0\024\uffd0\025" +
    "\uffd0\026\uffd0\027\uffd0\030\uffd0\031\uffd0\041\uffd0\042\uffd0" +
    "\044\uffd0\045\uffd0\046\uffd0\047\uffd0\050\uffd0\051\uffd0\052" +
    "\uffd0\053\uffd0\054\uffd0\057\uffd0\060\uffd0\061\uffd0\063\uffd0" +
    "\067\uffd0\070\uffd0\072\uffd0\074\uffd0\076\uffd0\101\uffd0\103" +
    "\uffd0\104\uffd0\106\uffd0\116\uffd0\125\uffd0\001\002\000\134" +
    "\002\uffcd\005\uffcd\006\uffcd\007\uffcd\010\uffcd\011\uffcd\014" +
    "\uffcd\016\uffcd\017\uffcd\020\uffcd\021\uffcd\022\uffcd\023\uffcd" +
    "\024\uffcd\025\uffcd\026\uffcd\027\uffcd\030\uffcd\031\uffcd\041" +
    "\uffcd\042\uffcd\044\uffcd\045\uffcd\046\uffcd\047\uffcd\050\uffcd" +
    "\051\uffcd\052\uffcd\053\uffcd\054\uffcd\057\uffcd\060\uffcd\061" +
    "\uffcd\063\uffcd\067\uffcd\070\uffcd\072\uffcd\074\uffcd\076\uffcd" +
    "\101\uffcd\103\uffcd\104\uffcd\106\uffcd\116\uffcd\125\uffcd\001" +
    "\002\000\044\005\041\006\uff8a\013\073\016\072\056\070" +
    "\057\035\066\110\070\045\072\044\077\102\101\025\114" +
    "\071\121\063\122\074\123\061\124\067\125\066\001\002" +
    "\000\042\005\041\013\073\016\072\056\070\057\035\066" +
    "\110\070\045\072\044\077\102\101\025\114\071\121\063" +
    "\122\074\123\061\124\067\125\066\001\002\000\026\071" +
    "\157\105\171\107\170\110\166\111\164\112\167\113\165" +
    "\117\161\120\160\125\163\001\002\000\134\002\uffc2\005" +
    "\uffc2\006\uffc2\007\uffc2\010\uffc2\011\uffc2\014\uffc2\016\uffc2" +
    "\017\uffc2\020\uffc2\021\uffc2\022\uffc2\023\uffc2\024\uffc2\025" +
    "\uffc2\026\uffc2\027\uffc2\030\uffc2\031\uffc2\041\uffc2\042\uffc2" +
    "\044\uffc2\045\uffc2\046\uffc2\047\uffc2\050\uffc2\051\uffc2\052" +
    "\uffc2\053\uffc2\054\uffc2\057\uffc2\060\uffc2\061\uffc2\063\uffc2" +
    "\067\uffc2\070\uffc2\072\uffc2\074\uffc2\076\uffc2\101\uffc2\103" +
    "\uffc2\104\uffc2\106\uffc2\116\uffc2\125\uffc2\001\002\000\004" +
    "\013\206\001\002\000\004\005\203\001\002\000\134\002" +
    "\uffbc\005\uffbc\006\uffbc\007\uffbc\010\uffbc\011\uffbc\014\uffbc" +
    "\016\uffbc\017\uffbc\020\uffbc\021\uffbc\022\uffbc\023\uffbc\024" +
    "\uffbc\025\uffbc\026\uffbc\027\uffbc\030\uffbc\031\uffbc\041\uffbc" +
    "\042\uffbc\044\uffbc\045\uffbc\046\uffbc\047\uffbc\050\uffbc\051" +
    "\uffbc\052\uffbc\053\uffbc\054\uffbc\057\uffbc\060\uffbc\061\uffbc" +
    "\063\uffbc\067\uffbc\070\uffbc\072\uffbc\074\uffbc\076\uffbc\101" +
    "\uffbc\103\uffbc\104\uffbc\106\uffbc\116\uffbc\125\uffbc\001\002" +
    "\000\136\002\uffb4\005\172\006\uffb4\007\uffb4\010\uffb4\011" +
    "\uffb4\013\173\014\uffb4\016\uffb4\017\uffb4\020\uffb4\021\uffb4" +
    "\022\uffb4\023\uffb4\024\uffb4\025\uffb4\026\uffb4\027\uffb4\030" +
    "\uffb4\031\uffb4\041\uffb4\042\uffb4\044\uffb4\045\uffb4\046\uffb4" +
    "\047\uffb4\050\uffb4\051\uffb4\052\uffb4\053\uffb4\054\uffb4\057" +
    "\uffb4\060\uffb4\061\uffb4\063\uffb4\067\uffb4\070\uffb4\072\uffb4" +
    "\074\uffb4\076\uffb4\101\uffb4\103\uffb4\104\uffb4\106\uffb4\116" +
    "\uffb4\125\uffb4\001\002\000\134\002\uff7c\005\uff7c\006\uff7c" +
    "\007\uff7c\010\uff7c\011\uff7c\014\uff7c\016\uff7c\017\uff7c\020" +
    "\uff7c\021\uff7c\022\uff7c\023\uff7c\024\uff7c\025\uff7c\026\uff7c" +
    "\027\uff7c\030\uff7c\031\uff7c\041\uff7c\042\uff7c\044\uff7c\045" +
    "\uff7c\046\uff7c\047\uff7c\050\uff7c\051\uff7c\052\uff7c\053\uff7c" +
    "\054\uff7c\057\uff7c\060\uff7c\061\uff7c\063\uff7c\067\uff7c\070" +
    "\uff7c\072\uff7c\074\uff7c\076\uff7c\101\uff7c\103\uff7c\104\uff7c" +
    "\106\uff7c\116\uff7c\125\uff7c\001\002\000\134\002\uff79\005" +
    "\uff79\006\uff79\007\uff79\010\uff79\011\uff79\014\uff79\016\uff79" +
    "\017\uff79\020\uff79\021\uff79\022\uff79\023\uff79\024\uff79\025" +
    "\uff79\026\uff79\027\uff79\030\uff79\031\uff79\041\uff79\042\uff79" +
    "\044\uff79\045\uff79\046\uff79\047\uff79\050\uff79\051\uff79\052" +
    "\uff79\053\uff79\054\uff79\057\uff79\060\uff79\061\uff79\063\uff79" +
    "\067\uff79\070\uff79\072\uff79\074\uff79\076\uff79\101\uff79\103" +
    "\uff79\104\uff79\106\uff79\116\uff79\125\uff79\001\002\000\134" +
    "\002\uff7a\005\uff7a\006\uff7a\007\uff7a\010\uff7a\011\uff7a\014" +
    "\uff7a\016\uff7a\017\uff7a\020\uff7a\021\uff7a\022\uff7a\023\uff7a" +
    "\024\uff7a\025\uff7a\026\uff7a\027\uff7a\030\uff7a\031\uff7a\041" +
    "\uff7a\042\uff7a\044\uff7a\045\uff7a\046\uff7a\047\uff7a\050\uff7a" +
    "\051\uff7a\052\uff7a\053\uff7a\054\uff7a\057\uff7a\060\uff7a\061" +
    "\uff7a\063\uff7a\067\uff7a\070\uff7a\072\uff7a\074\uff7a\076\uff7a" +
    "\101\uff7a\103\uff7a\104\uff7a\106\uff7a\116\uff7a\125\uff7a\001" +
    "\002\000\134\002\uff7d\005\uff7d\006\uff7d\007\uff7d\010\uff7d" +
    "\011\uff7d\014\uff7d\016\uff7d\017\uff7d\020\uff7d\021\uff7d\022" +
    "\uff7d\023\uff7d\024\uff7d\025\uff7d\026\uff7d\027\uff7d\030\uff7d" +
    "\031\uff7d\041\uff7d\042\uff7d\044\uff7d\045\uff7d\046\uff7d\047" +
    "\uff7d\050\uff7d\051\uff7d\052\uff7d\053\uff7d\054\uff7d\057\uff7d" +
    "\060\uff7d\061\uff7d\063\uff7d\067\uff7d\070\uff7d\072\uff7d\074" +
    "\uff7d\076\uff7d\101\uff7d\103\uff7d\104\uff7d\106\uff7d\116\uff7d" +
    "\125\uff7d\001\002\000\134\002\uff7b\005\uff7b\006\uff7b\007" +
    "\uff7b\010\uff7b\011\uff7b\014\uff7b\016\uff7b\017\uff7b\020\uff7b" +
    "\021\uff7b\022\uff7b\023\uff7b\024\uff7b\025\uff7b\026\uff7b\027" +
    "\uff7b\030\uff7b\031\uff7b\041\uff7b\042\uff7b\044\uff7b\045\uff7b" +
    "\046\uff7b\047\uff7b\050\uff7b\051\uff7b\052\uff7b\053\uff7b\054" +
    "\uff7b\057\uff7b\060\uff7b\061\uff7b\063\uff7b\067\uff7b\070\uff7b" +
    "\072\uff7b\074\uff7b\076\uff7b\101\uff7b\103\uff7b\104\uff7b\106" +
    "\uff7b\116\uff7b\125\uff7b\001\002\000\134\002\uffc4\005\uffc4" +
    "\006\uffc4\007\uffc4\010\uffc4\011\uffc4\014\uffc4\016\uffc4\017" +
    "\uffc4\020\uffc4\021\uffc4\022\uffc4\023\uffc4\024\uffc4\025\uffc4" +
    "\026\uffc4\027\uffc4\030\uffc4\031\uffc4\041\uffc4\042\uffc4\044" +
    "\uffc4\045\uffc4\046\uffc4\047\uffc4\050\uffc4\051\uffc4\052\uffc4" +
    "\053\uffc4\054\uffc4\057\uffc4\060\uffc4\061\uffc4\063\uffc4\067" +
    "\uffc4\070\uffc4\072\uffc4\074\uffc4\076\uffc4\101\uffc4\103\uffc4" +
    "\104\uffc4\106\uffc4\116\uffc4\125\uffc4\001\002\000\044\005" +
    "\041\006\uff8a\013\073\016\072\056\070\057\035\066\110" +
    "\070\045\072\044\077\102\101\025\114\071\121\063\122" +
    "\074\123\061\124\067\125\066\001\002\000\042\005\041" +
    "\013\073\016\072\056\070\057\035\066\110\070\045\072" +
    "\044\077\102\101\025\114\071\121\063\122\074\123\061" +
    "\124\067\125\066\001\002\000\004\014\175\001\002\000" +
    "\134\002\uffb3\005\uffb3\006\uffb3\007\uffb3\010\uffb3\011\uffb3" +
    "\014\uffb3\016\uffb3\017\uffb3\020\uffb3\021\uffb3\022\uffb3\023" +
    "\uffb3\024\uffb3\025\uffb3\026\uffb3\027\uffb3\030\uffb3\031\uffb3" +
    "\041\uffb3\042\uffb3\044\uffb3\045\uffb3\046\uffb3\047\uffb3\050" +
    "\uffb3\051\uffb3\052\uffb3\053\uffb3\054\uffb3\057\uffb3\060\uffb3" +
    "\061\uffb3\063\uffb3\067\uffb3\070\uffb3\072\uffb3\074\uffb3\076" +
    "\uffb3\101\uffb3\103\uffb3\104\uffb3\106\uffb3\116\uffb3\125\uffb3" +
    "\001\002\000\004\006\202\001\002\000\006\006\uff89\011" +
    "\200\001\002\000\044\005\041\006\uff8a\013\073\016\072" +
    "\056\070\057\035\066\110\070\045\072\044\077\102\101" +
    "\025\114\071\121\063\122\074\123\061\124\067\125\066" +
    "\001\002\000\004\006\uff88\001\002\000\134\002\uffb1\005" +
    "\uffb1\006\uffb1\007\uffb1\010\uffb1\011\uffb1\014\uffb1\016\uffb1" +
    "\017\uffb1\020\uffb1\021\uffb1\022\uffb1\023\uffb1\024\uffb1\025" +
    "\uffb1\026\uffb1\027\uffb1\030\uffb1\031\uffb1\041\uffb1\042\uffb1" +
    "\044\uffb1\045\uffb1\046\uffb1\047\uffb1\050\uffb1\051\uffb1\052" +
    "\uffb1\053\uffb1\054\uffb1\057\uffb1\060\uffb1\061\uffb1\063\uffb1" +
    "\067\uffb1\070\uffb1\072\uffb1\074\uffb1\076\uffb1\101\uffb1\103" +
    "\uffb1\104\uffb1\106\uffb1\116\uffb1\125\uffb1\001\002\000\042" +
    "\005\041\013\073\016\072\056\070\057\035\066\110\070" +
    "\045\072\044\077\102\101\025\114\071\121\063\122\074" +
    "\123\061\124\067\125\066\001\002\000\004\006\205\001" +
    "\002\000\134\002\uffc7\005\uffc7\006\uffc7\007\uffc7\010\uffc7" +
    "\011\uffc7\014\uffc7\016\uffc7\017\uffc7\020\uffc7\021\uffc7\022" +
    "\uffc7\023\uffc7\024\uffc7\025\uffc7\026\uffc7\027\uffc7\030\uffc7" +
    "\031\uffc7\041\uffc7\042\uffc7\044\uffc7\045\uffc7\046\uffc7\047" +
    "\uffc7\050\uffc7\051\uffc7\052\uffc7\053\uffc7\054\uffc7\057\uffc7" +
    "\060\uffc7\061\uffc7\063\uffc7\067\uffc7\070\uffc7\072\uffc7\074" +
    "\uffc7\076\uffc7\101\uffc7\103\uffc7\104\uffc7\106\uffc7\116\uffc7" +
    "\125\uffc7\001\002\000\042\005\041\013\073\016\072\056" +
    "\070\057\035\066\110\070\045\072\044\077\102\101\025" +
    "\114\071\121\063\122\074\123\061\124\067\125\066\001" +
    "\002\000\004\014\210\001\002\000\134\002\uffc6\005\uffc6" +
    "\006\uffc6\007\uffc6\010\uffc6\011\uffc6\014\uffc6\016\uffc6\017" +
    "\uffc6\020\uffc6\021\uffc6\022\uffc6\023\uffc6\024\uffc6\025\uffc6" +
    "\026\uffc6\027\uffc6\030\uffc6\031\uffc6\041\uffc6\042\uffc6\044" +
    "\uffc6\045\uffc6\046\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6" +
    "\053\uffc6\054\uffc6\057\uffc6\060\uffc6\061\uffc6\063\uffc6\067" +
    "\uffc6\070\uffc6\072\uffc6\074\uffc6\076\uffc6\101\uffc6\103\uffc6" +
    "\104\uffc6\106\uffc6\116\uffc6\125\uffc6\001\002\000\004\014" +
    "\212\001\002\000\134\002\uffc8\005\uffc8\006\uffc8\007\uffc8" +
    "\010\uffc8\011\uffc8\014\uffc8\016\uffc8\017\uffc8\020\uffc8\021" +
    "\uffc8\022\uffc8\023\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8" +
    "\030\uffc8\031\uffc8\041\uffc8\042\uffc8\044\uffc8\045\uffc8\046" +
    "\uffc8\047\uffc8\050\uffc8\051\uffc8\052\uffc8\053\uffc8\054\uffc8" +
    "\057\uffc8\060\uffc8\061\uffc8\063\uffc8\067\uffc8\070\uffc8\072" +
    "\uffc8\074\uffc8\076\uffc8\101\uffc8\103\uffc8\104\uffc8\106\uffc8" +
    "\116\uffc8\125\uffc8\001\002\000\004\006\214\001\002\000" +
    "\134\002\uffb2\005\uffb2\006\uffb2\007\uffb2\010\uffb2\011\uffb2" +
    "\014\uffb2\016\uffb2\017\uffb2\020\uffb2\021\uffb2\022\uffb2\023" +
    "\uffb2\024\uffb2\025\uffb2\026\uffb2\027\uffb2\030\uffb2\031\uffb2" +
    "\041\uffb2\042\uffb2\044\uffb2\045\uffb2\046\uffb2\047\uffb2\050" +
    "\uffb2\051\uffb2\052\uffb2\053\uffb2\054\uffb2\057\uffb2\060\uffb2" +
    "\061\uffb2\063\uffb2\067\uffb2\070\uffb2\072\uffb2\074\uffb2\076" +
    "\uffb2\101\uffb2\103\uffb2\104\uffb2\106\uffb2\116\uffb2\125\uffb2" +
    "\001\002\000\042\005\041\013\073\016\072\056\070\057" +
    "\035\066\110\070\045\072\044\077\102\101\025\114\071" +
    "\121\063\122\074\123\061\124\067\125\066\001\002\000" +
    "\042\005\041\013\073\016\072\056\070\057\035\066\110" +
    "\070\045\072\044\077\102\101\025\114\071\121\063\122" +
    "\074\123\061\124\067\125\066\001\002\000\132\002\uffa9" +
    "\005\uffa9\006\uffa9\007\uffa9\010\uffa9\011\uffa9\014\uffa9\016" +
    "\uffa9\020\222\021\221\022\220\023\uffa9\024\uffa9\025\uffa9" +
    "\026\uffa9\027\uffa9\030\uffa9\031\uffa9\041\uffa9\042\uffa9\044" +
    "\uffa9\045\uffa9\046\uffa9\047\uffa9\050\uffa9\051\uffa9\052\uffa9" +
    "\053\uffa9\054\uffa9\057\uffa9\060\uffa9\061\uffa9\063\uffa9\067" +
    "\uffa9\070\uffa9\072\uffa9\074\uffa9\076\uffa9\101\uffa9\103\uffa9" +
    "\104\uffa9\106\uffa9\116\uffa9\125\uffa9\001\002\000\042\005" +
    "\041\013\073\016\072\056\070\057\035\066\110\070\045" +
    "\072\044\077\102\101\025\114\071\121\063\122\074\123" +
    "\061\124\067\125\066\001\002\000\042\005\041\013\073" +
    "\016\072\056\070\057\035\066\110\070\045\072\044\077" +
    "\102\101\025\114\071\121\063\122\074\123\061\124\067" +
    "\125\066\001\002\000\042\005\041\013\073\016\072\056" +
    "\070\057\035\066\110\070\045\072\044\077\102\101\025" +
    "\114\071\121\063\122\074\123\061\124\067\125\066\001" +
    "\002\000\134\002\uffad\005\uffad\006\uffad\007\uffad\010\uffad" +
    "\011\uffad\014\uffad\016\uffad\017\115\020\uffad\021\uffad\022" +
    "\uffad\023\uffad\024\uffad\025\uffad\026\uffad\027\uffad\030\uffad" +
    "\031\uffad\041\uffad\042\uffad\044\uffad\045\uffad\046\uffad\047" +
    "\uffad\050\uffad\051\uffad\052\uffad\053\uffad\054\uffad\057\uffad" +
    "\060\uffad\061\uffad\063\uffad\067\uffad\070\uffad\072\uffad\074" +
    "\uffad\076\uffad\101\uffad\103\uffad\104\uffad\106\uffad\116\uffad" +
    "\125\uffad\001\002\000\134\002\uffac\005\uffac\006\uffac\007" +
    "\uffac\010\uffac\011\uffac\014\uffac\016\uffac\017\115\020\uffac" +
    "\021\uffac\022\uffac\023\uffac\024\uffac\025\uffac\026\uffac\027" +
    "\uffac\030\uffac\031\uffac\041\uffac\042\uffac\044\uffac\045\uffac" +
    "\046\uffac\047\uffac\050\uffac\051\uffac\052\uffac\053\uffac\054" +
    "\uffac\057\uffac\060\uffac\061\uffac\063\uffac\067\uffac\070\uffac" +
    "\072\uffac\074\uffac\076\uffac\101\uffac\103\uffac\104\uffac\106" +
    "\uffac\116\uffac\125\uffac\001\002\000\134\002\uffab\005\uffab" +
    "\006\uffab\007\uffab\010\uffab\011\uffab\014\uffab\016\uffab\017" +
    "\115\020\uffab\021\uffab\022\uffab\023\uffab\024\uffab\025\uffab" +
    "\026\uffab\027\uffab\030\uffab\031\uffab\041\uffab\042\uffab\044" +
    "\uffab\045\uffab\046\uffab\047\uffab\050\uffab\051\uffab\052\uffab" +
    "\053\uffab\054\uffab\057\uffab\060\uffab\061\uffab\063\uffab\067" +
    "\uffab\070\uffab\072\uffab\074\uffab\076\uffab\101\uffab\103\uffab" +
    "\104\uffab\106\uffab\116\uffab\125\uffab\001\002\000\132\002" +
    "\uffa8\005\uffa8\006\uffa8\007\uffa8\010\uffa8\011\uffa8\014\uffa8" +
    "\016\uffa8\020\222\021\221\022\220\023\uffa8\024\uffa8\025" +
    "\uffa8\026\uffa8\027\uffa8\030\uffa8\031\uffa8\041\uffa8\042\uffa8" +
    "\044\uffa8\045\uffa8\046\uffa8\047\uffa8\050\uffa8\051\uffa8\052" +
    "\uffa8\053\uffa8\054\uffa8\057\uffa8\060\uffa8\061\uffa8\063\uffa8" +
    "\067\uffa8\070\uffa8\072\uffa8\074\uffa8\076\uffa8\101\uffa8\103" +
    "\uffa8\104\uffa8\106\uffa8\116\uffa8\125\uffa8\001\002\000\004" +
    "\005\230\001\002\000\024\006\uffd6\044\022\045\020\047" +
    "\013\054\036\060\033\067\046\074\055\106\014\001\002" +
    "\000\004\006\237\001\002\000\004\125\236\001\002\000" +
    "\006\006\uffd5\011\234\001\002\000\024\006\uffd6\044\022" +
    "\045\020\047\013\054\036\060\033\067\046\074\055\106" +
    "\014\001\002\000\004\006\uffd4\001\002\000\006\006\uffd7" +
    "\011\uffd7\001\002\000\004\007\240\001\002\000\070\005" +
    "\uffd3\007\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3\047\uffd3" +
    "\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3\060" +
    "\uffd3\061\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074\uffd3" +
    "\076\uffd3\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3\125" +
    "\uffd3\001\002\000\070\005\041\007\037\010\242\044\022" +
    "\045\020\046\015\047\013\050\012\051\054\052\053\053" +
    "\051\054\036\057\035\060\033\061\031\063\030\067\046" +
    "\070\045\072\044\074\043\076\042\101\025\103\023\104" +
    "\016\106\014\116\034\125\024\001\002\000\072\002\ufffd" +
    "\005\ufffd\007\ufffd\010\ufffd\044\ufffd\045\ufffd\046\ufffd\047" +
    "\ufffd\050\ufffd\051\ufffd\052\ufffd\053\ufffd\054\ufffd\057\ufffd" +
    "\060\ufffd\061\ufffd\063\ufffd\067\ufffd\070\ufffd\072\ufffd\074" +
    "\ufffd\076\ufffd\101\ufffd\103\ufffd\104\ufffd\106\ufffd\116\ufffd" +
    "\125\ufffd\001\002\000\024\006\uffd6\044\022\045\020\047" +
    "\013\054\036\060\033\067\046\074\055\106\014\001\002" +
    "\000\004\006\245\001\002\000\004\007\246\001\002\000" +
    "\070\005\uffd3\007\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3" +
    "\047\uffd3\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057" +
    "\uffd3\060\uffd3\061\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3" +
    "\074\uffd3\076\uffd3\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116" +
    "\uffd3\125\uffd3\001\002\000\070\005\041\007\037\010\250" +
    "\044\022\045\020\046\015\047\013\050\012\051\054\052" +
    "\053\053\051\054\036\057\035\060\033\061\031\063\030" +
    "\067\046\070\045\072\044\074\043\076\042\101\025\103" +
    "\023\104\016\106\014\116\034\125\024\001\002\000\134" +
    "\002\uffbb\005\uffbb\006\uffbb\007\uffbb\010\uffbb\011\uffbb\014" +
    "\uffbb\016\uffbb\017\uffbb\020\uffbb\021\uffbb\022\uffbb\023\uffbb" +
    "\024\uffbb\025\uffbb\026\uffbb\027\uffbb\030\uffbb\031\uffbb\041" +
    "\uffbb\042\uffbb\044\uffbb\045\uffbb\046\uffbb\047\uffbb\050\uffbb" +
    "\051\uffbb\052\uffbb\053\uffbb\054\uffbb\057\uffbb\060\uffbb\061" +
    "\uffbb\063\uffbb\067\uffbb\070\uffbb\072\uffbb\074\uffbb\076\uffbb" +
    "\101\uffbb\103\uffbb\104\uffbb\106\uffbb\116\uffbb\125\uffbb\001" +
    "\002\000\042\005\041\013\073\016\072\056\070\057\035" +
    "\066\110\070\045\072\044\077\102\101\025\114\071\121" +
    "\063\122\074\123\061\124\067\125\066\001\002\000\004" +
    "\011\253\001\002\000\006\013\255\125\254\001\002\000" +
    "\004\006\261\001\002\000\044\005\041\013\073\014\uffe9" +
    "\016\072\056\070\057\035\066\110\070\045\072\044\077" +
    "\102\101\025\114\071\121\063\122\074\123\061\124\067" +
    "\125\066\001\002\000\004\014\257\001\002\000\004\006" +
    "\260\001\002\000\134\002\uffb9\005\uffb9\006\uffb9\007\uffb9" +
    "\010\uffb9\011\uffb9\014\uffb9\016\uffb9\017\uffb9\020\uffb9\021" +
    "\uffb9\022\uffb9\023\uffb9\024\uffb9\025\uffb9\026\uffb9\027\uffb9" +
    "\030\uffb9\031\uffb9\041\uffb9\042\uffb9\044\uffb9\045\uffb9\046" +
    "\uffb9\047\uffb9\050\uffb9\051\uffb9\052\uffb9\053\uffb9\054\uffb9" +
    "\057\uffb9\060\uffb9\061\uffb9\063\uffb9\067\uffb9\070\uffb9\072" +
    "\uffb9\074\uffb9\076\uffb9\101\uffb9\103\uffb9\104\uffb9\106\uffb9" +
    "\116\uffb9\125\uffb9\001\002\000\134\002\uffba\005\uffba\006" +
    "\uffba\007\uffba\010\uffba\011\uffba\014\uffba\016\uffba\017\uffba" +
    "\020\uffba\021\uffba\022\uffba\023\uffba\024\uffba\025\uffba\026" +
    "\uffba\027\uffba\030\uffba\031\uffba\041\uffba\042\uffba\044\uffba" +
    "\045\uffba\046\uffba\047\uffba\050\uffba\051\uffba\052\uffba\053" +
    "\uffba\054\uffba\057\uffba\060\uffba\061\uffba\063\uffba\067\uffba" +
    "\070\uffba\072\uffba\074\uffba\076\uffba\101\uffba\103\uffba\104" +
    "\uffba\106\uffba\116\uffba\125\uffba\001\002\000\004\015\263" +
    "\001\002\000\004\073\264\001\002\000\004\125\265\001" +
    "\002\000\004\005\266\001\002\000\044\005\041\006\uff8a" +
    "\013\073\016\072\056\070\057\035\066\110\070\045\072" +
    "\044\077\102\101\025\114\071\121\063\122\074\123\061" +
    "\124\067\125\066\001\002\000\004\006\270\001\002\000" +
    "\072\002\uffee\005\uffee\007\uffee\010\uffee\044\uffee\045\uffee" +
    "\046\uffee\047\uffee\050\uffee\051\uffee\052\uffee\053\uffee\054" +
    "\uffee\057\uffee\060\uffee\061\uffee\063\uffee\067\uffee\070\uffee" +
    "\072\uffee\074\uffee\076\uffee\101\uffee\103\uffee\104\uffee\106" +
    "\uffee\116\uffee\125\uffee\001\002\000\072\002\ufffa\005\ufffa" +
    "\007\ufffa\010\ufffa\044\ufffa\045\ufffa\046\ufffa\047\ufffa\050" +
    "\ufffa\051\ufffa\052\ufffa\053\ufffa\054\ufffa\057\ufffa\060\ufffa" +
    "\061\ufffa\063\ufffa\067\ufffa\070\ufffa\072\ufffa\074\ufffa\076" +
    "\ufffa\101\ufffa\103\ufffa\104\ufffa\106\ufffa\116\ufffa\125\ufffa" +
    "\001\002\000\004\006\273\001\002\000\134\002\uffb0\005" +
    "\uffb0\006\uffb0\007\uffb0\010\uffb0\011\uffb0\014\uffb0\016\uffb0" +
    "\017\uffb0\020\uffb0\021\uffb0\022\uffb0\023\uffb0\024\uffb0\025" +
    "\uffb0\026\uffb0\027\uffb0\030\uffb0\031\uffb0\041\uffb0\042\uffb0" +
    "\044\uffb0\045\uffb0\046\uffb0\047\uffb0\050\uffb0\051\uffb0\052" +
    "\uffb0\053\uffb0\054\uffb0\057\uffb0\060\uffb0\061\uffb0\063\uffb0" +
    "\067\uffb0\070\uffb0\072\uffb0\074\uffb0\076\uffb0\101\uffb0\103" +
    "\uffb0\104\uffb0\106\uffb0\116\uffb0\125\uffb0\001\002\000\074" +
    "\002\uffe5\005\uffe5\007\uffe5\010\uffe5\015\275\044\uffe5\045" +
    "\uffe5\046\uffe5\047\uffe5\050\uffe5\051\uffe5\052\uffe5\053\uffe5" +
    "\054\uffe5\057\uffe5\060\uffe5\061\uffe5\063\uffe5\067\uffe5\070" +
    "\uffe5\072\uffe5\074\uffe5\076\uffe5\101\uffe5\103\uffe5\104\uffe5" +
    "\106\uffe5\116\uffe5\125\uffe5\001\002\000\042\005\041\013" +
    "\073\016\072\056\070\057\035\066\110\070\045\072\044" +
    "\077\102\101\025\114\071\121\063\122\074\123\061\124" +
    "\067\125\066\001\002\000\074\002\uffe6\005\uffe6\007\uffe6" +
    "\010\uffe6\011\uffe6\044\uffe6\045\uffe6\046\uffe6\047\uffe6\050" +
    "\uffe6\051\uffe6\052\uffe6\053\uffe6\054\uffe6\057\uffe6\060\uffe6" +
    "\061\uffe6\063\uffe6\067\uffe6\070\uffe6\072\uffe6\074\uffe6\076" +
    "\uffe6\101\uffe6\103\uffe6\104\uffe6\106\uffe6\116\uffe6\125\uffe6" +
    "\001\002\000\070\005\041\007\037\010\300\044\022\045" +
    "\020\046\015\047\013\050\012\051\054\052\053\053\051" +
    "\054\036\057\035\060\033\061\031\063\030\067\046\070" +
    "\045\072\044\074\043\076\042\101\025\103\023\104\016" +
    "\106\014\116\034\125\024\001\002\000\072\002\uffeb\005" +
    "\uffeb\007\uffeb\010\uffeb\044\uffeb\045\uffeb\046\uffeb\047\uffeb" +
    "\050\uffeb\051\uffeb\052\uffeb\053\uffeb\054\uffeb\057\uffeb\060" +
    "\uffeb\061\uffeb\063\uffeb\067\uffeb\070\uffeb\072\uffeb\074\uffeb" +
    "\076\uffeb\101\uffeb\103\uffeb\104\uffeb\106\uffeb\116\uffeb\125" +
    "\uffeb\001\002\000\042\005\041\013\073\016\072\056\070" +
    "\057\035\066\110\070\045\072\044\077\102\101\025\114" +
    "\071\121\063\122\074\123\061\124\067\125\066\001\002" +
    "\000\004\011\303\001\002\000\006\013\305\125\304\001" +
    "\002\000\004\006\311\001\002\000\044\005\041\013\073" +
    "\014\uffe9\016\072\056\070\057\035\066\110\070\045\072" +
    "\044\077\102\101\025\114\071\121\063\122\074\123\061" +
    "\124\067\125\066\001\002\000\004\014\307\001\002\000" +
    "\004\006\310\001\002\000\134\002\uffb7\005\uffb7\006\uffb7" +
    "\007\uffb7\010\uffb7\011\uffb7\014\uffb7\016\uffb7\017\uffb7\020" +
    "\uffb7\021\uffb7\022\uffb7\023\uffb7\024\uffb7\025\uffb7\026\uffb7" +
    "\027\uffb7\030\uffb7\031\uffb7\041\uffb7\042\uffb7\044\uffb7\045" +
    "\uffb7\046\uffb7\047\uffb7\050\uffb7\051\uffb7\052\uffb7\053\uffb7" +
    "\054\uffb7\057\uffb7\060\uffb7\061\uffb7\063\uffb7\067\uffb7\070" +
    "\uffb7\072\uffb7\074\uffb7\076\uffb7\101\uffb7\103\uffb7\104\uffb7" +
    "\106\uffb7\116\uffb7\125\uffb7\001\002\000\134\002\uffb8\005" +
    "\uffb8\006\uffb8\007\uffb8\010\uffb8\011\uffb8\014\uffb8\016\uffb8" +
    "\017\uffb8\020\uffb8\021\uffb8\022\uffb8\023\uffb8\024\uffb8\025" +
    "\uffb8\026\uffb8\027\uffb8\030\uffb8\031\uffb8\041\uffb8\042\uffb8" +
    "\044\uffb8\045\uffb8\046\uffb8\047\uffb8\050\uffb8\051\uffb8\052" +
    "\uffb8\053\uffb8\054\uffb8\057\uffb8\060\uffb8\061\uffb8\063\uffb8" +
    "\067\uffb8\070\uffb8\072\uffb8\074\uffb8\076\uffb8\101\uffb8\103" +
    "\uffb8\104\uffb8\106\uffb8\116\uffb8\125\uffb8\001\002\000\004" +
    "\007\313\001\002\000\070\005\uffd3\007\uffd3\010\uffd3\044" +
    "\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3" +
    "\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067" +
    "\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3\101\uffd3\103\uffd3" +
    "\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002\000\070\005" +
    "\041\007\037\010\315\044\022\045\020\046\015\047\013" +
    "\050\012\051\054\052\053\053\051\054\036\057\035\060" +
    "\033\061\031\063\030\067\046\070\045\072\044\074\043" +
    "\076\042\101\025\103\023\104\016\106\014\116\034\125" +
    "\024\001\002\000\072\002\uffe2\005\uffe2\007\uffe2\010\uffe2" +
    "\044\uffe2\045\uffe2\046\uffe2\047\uffe2\050\uffe2\051\uffe2\052" +
    "\uffe2\053\uffe2\054\uffe2\057\uffe2\060\uffe2\061\uffe2\063\uffe2" +
    "\067\uffe2\070\uffe2\072\uffe2\074\uffe2\076\uffe2\101\uffe2\103" +
    "\uffe2\104\uffe2\106\uffe2\116\uffe2\125\uffe2\001\002\000\004" +
    "\125\321\001\002\000\004\125\uff86\001\002\000\004\125" +
    "\uff87\001\002\000\004\005\322\001\002\000\024\006\uffd6" +
    "\044\022\045\020\047\013\054\036\060\033\067\046\074" +
    "\055\106\014\001\002\000\004\006\324\001\002\000\004" +
    "\007\325\001\002\000\070\005\uffd3\007\uffd3\010\uffd3\044" +
    "\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3" +
    "\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067" +
    "\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3\101\uffd3\103\uffd3" +
    "\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002\000\070\005" +
    "\041\007\037\010\327\044\022\045\020\046\015\047\013" +
    "\050\012\051\054\052\053\053\051\054\036\057\035\060" +
    "\033\061\031\063\030\067\046\070\045\072\044\074\043" +
    "\076\042\101\025\103\023\104\016\106\014\116\034\125" +
    "\024\001\002\000\072\002\ufffe\005\ufffe\007\ufffe\010\ufffe" +
    "\044\ufffe\045\ufffe\046\ufffe\047\ufffe\050\ufffe\051\ufffe\052" +
    "\ufffe\053\ufffe\054\ufffe\057\ufffe\060\ufffe\061\ufffe\063\ufffe" +
    "\067\ufffe\070\ufffe\072\ufffe\074\ufffe\076\ufffe\101\ufffe\103" +
    "\ufffe\104\ufffe\106\ufffe\116\ufffe\125\ufffe\001\002\000\004" +
    "\007\331\001\002\000\070\005\uffd3\007\uffd3\010\uffd3\044" +
    "\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3" +
    "\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067" +
    "\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3\101\uffd3\103\uffd3" +
    "\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002\000\070\005" +
    "\041\007\037\010\333\044\022\045\020\046\015\047\013" +
    "\050\012\051\054\052\053\053\051\054\036\057\035\060" +
    "\033\061\031\063\030\067\046\070\045\072\044\074\043" +
    "\076\042\101\025\103\023\104\016\106\014\116\034\125" +
    "\024\001\002\000\074\002\uffda\005\uffda\007\uffda\010\uffda" +
    "\044\uffda\045\uffda\046\uffda\047\uffda\050\uffda\051\uffda\052" +
    "\uffda\053\uffda\054\uffda\055\334\057\uffda\060\uffda\061\uffda" +
    "\063\uffda\067\uffda\070\uffda\072\uffda\074\uffda\076\uffda\101" +
    "\uffda\103\uffda\104\uffda\106\uffda\116\uffda\125\uffda\001\002" +
    "\000\006\007\335\063\030\001\002\000\070\005\uffd3\007" +
    "\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3" +
    "\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061" +
    "\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3" +
    "\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001" +
    "\002\000\072\002\uffd8\005\uffd8\007\uffd8\010\uffd8\044\uffd8" +
    "\045\uffd8\046\uffd8\047\uffd8\050\uffd8\051\uffd8\052\uffd8\053" +
    "\uffd8\054\uffd8\057\uffd8\060\uffd8\061\uffd8\063\uffd8\067\uffd8" +
    "\070\uffd8\072\uffd8\074\uffd8\076\uffd8\101\uffd8\103\uffd8\104" +
    "\uffd8\106\uffd8\116\uffd8\125\uffd8\001\002\000\070\005\041" +
    "\007\037\010\340\044\022\045\020\046\015\047\013\050" +
    "\012\051\054\052\053\053\051\054\036\057\035\060\033" +
    "\061\031\063\030\067\046\070\045\072\044\074\043\076" +
    "\042\101\025\103\023\104\016\106\014\116\034\125\024" +
    "\001\002\000\072\002\uffd9\005\uffd9\007\uffd9\010\uffd9\044" +
    "\uffd9\045\uffd9\046\uffd9\047\uffd9\050\uffd9\051\uffd9\052\uffd9" +
    "\053\uffd9\054\uffd9\057\uffd9\060\uffd9\061\uffd9\063\uffd9\067" +
    "\uffd9\070\uffd9\072\uffd9\074\uffd9\076\uffd9\101\uffd9\103\uffd9" +
    "\104\uffd9\106\uffd9\116\uffd9\125\uffd9\001\002\000\042\005" +
    "\041\013\073\016\072\056\070\057\035\066\110\070\045" +
    "\072\044\077\102\101\025\114\071\121\063\122\074\123" +
    "\061\124\067\125\066\001\002\000\004\011\343\001\002" +
    "\000\006\013\345\125\344\001\002\000\004\006\351\001" +
    "\002\000\044\005\041\013\073\014\uffe9\016\072\056\070" +
    "\057\035\066\110\070\045\072\044\077\102\101\025\114" +
    "\071\121\063\122\074\123\061\124\067\125\066\001\002" +
    "\000\004\014\347\001\002\000\004\006\350\001\002\000" +
    "\134\002\uffb5\005\uffb5\006\uffb5\007\uffb5\010\uffb5\011\uffb5" +
    "\014\uffb5\016\uffb5\017\uffb5\020\uffb5\021\uffb5\022\uffb5\023" +
    "\uffb5\024\uffb5\025\uffb5\026\uffb5\027\uffb5\030\uffb5\031\uffb5" +
    "\041\uffb5\042\uffb5\044\uffb5\045\uffb5\046\uffb5\047\uffb5\050" +
    "\uffb5\051\uffb5\052\uffb5\053\uffb5\054\uffb5\057\uffb5\060\uffb5" +
    "\061\uffb5\063\uffb5\067\uffb5\070\uffb5\072\uffb5\074\uffb5\076" +
    "\uffb5\101\uffb5\103\uffb5\104\uffb5\106\uffb5\116\uffb5\125\uffb5" +
    "\001\002\000\134\002\uffb6\005\uffb6\006\uffb6\007\uffb6\010" +
    "\uffb6\011\uffb6\014\uffb6\016\uffb6\017\uffb6\020\uffb6\021\uffb6" +
    "\022\uffb6\023\uffb6\024\uffb6\025\uffb6\026\uffb6\027\uffb6\030" +
    "\uffb6\031\uffb6\041\uffb6\042\uffb6\044\uffb6\045\uffb6\046\uffb6" +
    "\047\uffb6\050\uffb6\051\uffb6\052\uffb6\053\uffb6\054\uffb6\057" +
    "\uffb6\060\uffb6\061\uffb6\063\uffb6\067\uffb6\070\uffb6\072\uffb6" +
    "\074\uffb6\076\uffb6\101\uffb6\103\uffb6\104\uffb6\106\uffb6\116" +
    "\uffb6\125\uffb6\001\002\000\072\002\uff93\005\uff93\007\uff93" +
    "\010\uff93\044\uff93\045\uff93\046\uff93\047\uff93\050\uff93\051" +
    "\uff93\052\uff93\053\uff93\054\uff93\057\uff93\060\uff93\061\uff93" +
    "\063\uff93\067\uff93\070\uff93\072\uff93\074\uff93\076\uff93\101" +
    "\uff93\103\uff93\104\uff93\106\uff93\116\uff93\125\uff93\001\002" +
    "\000\022\043\366\102\367\107\170\110\166\111\164\112" +
    "\167\113\165\125\163\001\002\000\072\002\uff94\005\uff94" +
    "\007\uff94\010\uff94\044\uff94\045\uff94\046\uff94\047\uff94\050" +
    "\uff94\051\uff94\052\uff94\053\uff94\054\uff94\057\uff94\060\uff94" +
    "\061\uff94\063\uff94\067\uff94\070\uff94\072\uff94\074\uff94\076" +
    "\uff94\101\uff94\103\uff94\104\uff94\106\uff94\116\uff94\125\uff94" +
    "\001\002\000\042\005\uff95\013\uff95\016\uff95\056\uff95\057" +
    "\uff95\066\uff95\070\uff95\072\uff95\077\uff95\101\uff95\114\uff95" +
    "\121\uff95\122\uff95\123\uff95\124\uff95\125\uff95\001\002\000" +
    "\042\005\uff96\013\uff96\016\uff96\056\uff96\057\uff96\066\uff96" +
    "\070\uff96\072\uff96\077\uff96\101\uff96\114\uff96\121\uff96\122" +
    "\uff96\123\uff96\124\uff96\125\uff96\001\002\000\042\005\uff97" +
    "\013\uff97\016\uff97\056\uff97\057\uff97\066\uff97\070\uff97\072" +
    "\uff97\077\uff97\101\uff97\114\uff97\121\uff97\122\uff97\123\uff97" +
    "\124\uff97\125\uff97\001\002\000\042\005\uff98\013\uff98\016" +
    "\uff98\056\uff98\057\uff98\066\uff98\070\uff98\072\uff98\077\uff98" +
    "\101\uff98\114\uff98\121\uff98\122\uff98\123\uff98\124\uff98\125" +
    "\uff98\001\002\000\042\005\uff99\013\uff99\016\uff99\056\uff99" +
    "\057\uff99\066\uff99\070\uff99\072\uff99\077\uff99\101\uff99\114" +
    "\uff99\121\uff99\122\uff99\123\uff99\124\uff99\125\uff99\001\002" +
    "\000\072\002\uffe3\005\uffe3\007\uffe3\010\uffe3\044\uffe3\045" +
    "\uffe3\046\uffe3\047\uffe3\050\uffe3\051\uffe3\052\uffe3\053\uffe3" +
    "\054\uffe3\057\uffe3\060\uffe3\061\uffe3\063\uffe3\067\uffe3\070" +
    "\uffe3\072\uffe3\074\uffe3\076\uffe3\101\uffe3\103\uffe3\104\uffe3" +
    "\106\uffe3\116\uffe3\125\uffe3\001\002\000\042\005\041\013" +
    "\073\016\072\056\070\057\035\066\110\070\045\072\044" +
    "\077\102\101\025\114\071\121\063\122\074\123\061\124" +
    "\067\125\066\001\002\000\042\005\uff9a\013\uff9a\016\uff9a" +
    "\056\uff9a\057\uff9a\066\uff9a\070\uff9a\072\uff9a\077\uff9a\101" +
    "\uff9a\114\uff9a\121\uff9a\122\uff9a\123\uff9a\124\uff9a\125\uff9a" +
    "\001\002\000\072\002\uffe4\005\uffe4\007\uffe4\010\uffe4\044" +
    "\uffe4\045\uffe4\046\uffe4\047\uffe4\050\uffe4\051\uffe4\052\uffe4" +
    "\053\uffe4\054\uffe4\057\uffe4\060\uffe4\061\uffe4\063\uffe4\067" +
    "\uffe4\070\uffe4\072\uffe4\074\uffe4\076\uffe4\101\uffe4\103\uffe4" +
    "\104\uffe4\106\uffe4\116\uffe4\125\uffe4\001\002\000\004\005" +
    "\373\001\002\000\004\013\370\001\002\000\042\005\041" +
    "\013\073\016\072\056\070\057\035\066\110\070\045\072" +
    "\044\077\102\101\025\114\071\121\063\122\074\123\061" +
    "\124\067\125\066\001\002\000\004\014\372\001\002\000" +
    "\072\002\ufff0\005\ufff0\007\ufff0\010\ufff0\044\ufff0\045\ufff0" +
    "\046\ufff0\047\ufff0\050\ufff0\051\ufff0\052\ufff0\053\ufff0\054" +
    "\ufff0\057\ufff0\060\ufff0\061\ufff0\063\ufff0\067\ufff0\070\ufff0" +
    "\072\ufff0\074\ufff0\076\ufff0\101\ufff0\103\ufff0\104\ufff0\106" +
    "\ufff0\116\ufff0\125\ufff0\001\002\000\042\005\041\013\073" +
    "\016\072\056\070\057\035\066\110\070\045\072\044\077" +
    "\102\101\025\114\071\121\063\122\074\123\061\124\067" +
    "\125\066\001\002\000\004\006\375\001\002\000\072\002" +
    "\ufff1\005\ufff1\007\ufff1\010\ufff1\044\ufff1\045\ufff1\046\ufff1" +
    "\047\ufff1\050\ufff1\051\ufff1\052\ufff1\053\ufff1\054\ufff1\057" +
    "\ufff1\060\ufff1\061\ufff1\063\ufff1\067\ufff1\070\ufff1\072\ufff1" +
    "\074\ufff1\076\ufff1\101\ufff1\103\ufff1\104\ufff1\106\ufff1\116" +
    "\ufff1\125\ufff1\001\002\000\004\125\u012b\001\002\000\004" +
    "\011\u011f\001\002\000\004\064\u0101\001\002\000\010\013" +
    "\u0103\100\u0104\125\u0102\001\002\000\004\007\u011c\001\002" +
    "\000\044\005\041\013\073\014\uffe9\016\072\056\070\057" +
    "\035\066\110\070\045\072\044\077\102\101\025\114\071" +
    "\121\063\122\074\123\061\124\067\125\066\001\002\000" +
    "\004\005\u0105\001\002\000\042\005\041\013\073\016\072" +
    "\056\070\057\035\066\110\070\045\072\044\077\102\101" +
    "\025\114\071\121\063\122\074\123\061\124\067\125\066" +
    "\001\002\000\006\006\u0107\011\u0108\001\002\000\004\007" +
    "\u0114\001\002\000\042\005\041\013\073\016\072\056\070" +
    "\057\035\066\110\070\045\072\044\077\102\101\025\114" +
    "\071\121\063\122\074\123\061\124\067\125\066\001\002" +
    "\000\006\006\u010a\011\u010b\001\002\000\004\007\u0111\001" +
    "\002\000\042\005\041\013\073\016\072\056\070\057\035" +
    "\066\110\070\045\072\044\077\102\101\025\114\071\121" +
    "\063\122\074\123\061\124\067\125\066\001\002\000\004" +
    "\006\u010d\001\002\000\004\007\u010e\001\002\000\070\005" +
    "\uffd3\007\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3\047\uffd3" +
    "\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3\060" +
    "\uffd3\061\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074\uffd3" +
    "\076\uffd3\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3\125" +
    "\uffd3\001\002\000\070\005\041\007\037\010\u0110\044\022" +
    "\045\020\046\015\047\013\050\012\051\054\052\053\053" +
    "\051\054\036\057\035\060\033\061\031\063\030\067\046" +
    "\070\045\072\044\074\043\076\042\101\025\103\023\104" +
    "\016\106\014\116\034\125\024\001\002\000\072\002\uffdd" +
    "\005\uffdd\007\uffdd\010\uffdd\044\uffdd\045\uffdd\046\uffdd\047" +
    "\uffdd\050\uffdd\051\uffdd\052\uffdd\053\uffdd\054\uffdd\057\uffdd" +
    "\060\uffdd\061\uffdd\063\uffdd\067\uffdd\070\uffdd\072\uffdd\074" +
    "\uffdd\076\uffdd\101\uffdd\103\uffdd\104\uffdd\106\uffdd\116\uffdd" +
    "\125\uffdd\001\002\000\070\005\uffd3\007\uffd3\010\uffd3\044" +
    "\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3" +
    "\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067" +
    "\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3\101\uffd3\103\uffd3" +
    "\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002\000\070\005" +
    "\041\007\037\010\u0113\044\022\045\020\046\015\047\013" +
    "\050\012\051\054\052\053\053\051\054\036\057\035\060" +
    "\033\061\031\063\030\067\046\070\045\072\044\074\043" +
    "\076\042\101\025\103\023\104\016\106\014\116\034\125" +
    "\024\001\002\000\072\002\uffde\005\uffde\007\uffde\010\uffde" +
    "\044\uffde\045\uffde\046\uffde\047\uffde\050\uffde\051\uffde\052" +
    "\uffde\053\uffde\054\uffde\057\uffde\060\uffde\061\uffde\063\uffde" +
    "\067\uffde\070\uffde\072\uffde\074\uffde\076\uffde\101\uffde\103" +
    "\uffde\104\uffde\106\uffde\116\uffde\125\uffde\001\002\000\070" +
    "\005\uffd3\007\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3\047" +
    "\uffd3\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3" +
    "\060\uffd3\061\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074" +
    "\uffd3\076\uffd3\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3" +
    "\125\uffd3\001\002\000\070\005\041\007\037\010\u0116\044" +
    "\022\045\020\046\015\047\013\050\012\051\054\052\053" +
    "\053\051\054\036\057\035\060\033\061\031\063\030\067" +
    "\046\070\045\072\044\074\043\076\042\101\025\103\023" +
    "\104\016\106\014\116\034\125\024\001\002\000\072\002" +
    "\uffdf\005\uffdf\007\uffdf\010\uffdf\044\uffdf\045\uffdf\046\uffdf" +
    "\047\uffdf\050\uffdf\051\uffdf\052\uffdf\053\uffdf\054\uffdf\057" +
    "\uffdf\060\uffdf\061\uffdf\063\uffdf\067\uffdf\070\uffdf\072\uffdf" +
    "\074\uffdf\076\uffdf\101\uffdf\103\uffdf\104\uffdf\106\uffdf\116" +
    "\uffdf\125\uffdf\001\002\000\004\014\u0118\001\002\000\004" +
    "\007\u0119\001\002\000\070\005\uffd3\007\uffd3\010\uffd3\044" +
    "\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3" +
    "\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067" +
    "\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3\101\uffd3\103\uffd3" +
    "\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002\000\070\005" +
    "\041\007\037\010\u011b\044\022\045\020\046\015\047\013" +
    "\050\012\051\054\052\053\053\051\054\036\057\035\060" +
    "\033\061\031\063\030\067\046\070\045\072\044\074\043" +
    "\076\042\101\025\103\023\104\016\106\014\116\034\125" +
    "\024\001\002\000\072\002\uffe0\005\uffe0\007\uffe0\010\uffe0" +
    "\044\uffe0\045\uffe0\046\uffe0\047\uffe0\050\uffe0\051\uffe0\052" +
    "\uffe0\053\uffe0\054\uffe0\057\uffe0\060\uffe0\061\uffe0\063\uffe0" +
    "\067\uffe0\070\uffe0\072\uffe0\074\uffe0\076\uffe0\101\uffe0\103" +
    "\uffe0\104\uffe0\106\uffe0\116\uffe0\125\uffe0\001\002\000\070" +
    "\005\uffd3\007\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3\047" +
    "\uffd3\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3" +
    "\060\uffd3\061\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074" +
    "\uffd3\076\uffd3\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3" +
    "\125\uffd3\001\002\000\070\005\041\007\037\010\u011e\044" +
    "\022\045\020\046\015\047\013\050\012\051\054\052\053" +
    "\053\051\054\036\057\035\060\033\061\031\063\030\067" +
    "\046\070\045\072\044\074\043\076\042\101\025\103\023" +
    "\104\016\106\014\116\034\125\024\001\002\000\072\002" +
    "\uffe1\005\uffe1\007\uffe1\010\uffe1\044\uffe1\045\uffe1\046\uffe1" +
    "\047\uffe1\050\uffe1\051\uffe1\052\uffe1\053\uffe1\054\uffe1\057" +
    "\uffe1\060\uffe1\061\uffe1\063\uffe1\067\uffe1\070\uffe1\072\uffe1" +
    "\074\uffe1\076\uffe1\101\uffe1\103\uffe1\104\uffe1\106\uffe1\116" +
    "\uffe1\125\uffe1\001\002\000\042\005\041\013\073\016\072" +
    "\056\070\057\035\066\110\070\045\072\044\077\102\101" +
    "\025\114\071\121\063\122\074\123\061\124\067\125\066" +
    "\001\002\000\004\011\u0121\001\002\000\004\125\u0123\001" +
    "\002\000\004\007\u0128\001\002\000\022\015\364\032\361" +
    "\033\360\034\357\035\356\036\355\037\354\040\352\001" +
    "\002\000\004\007\u0125\001\002\000\070\005\uffd3\007\uffd3" +
    "\010\uffd3\044\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051" +
    "\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061\uffd3" +
    "\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3\101" +
    "\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002" +
    "\000\070\005\041\007\037\010\u0127\044\022\045\020\046" +
    "\015\047\013\050\012\051\054\052\053\053\051\054\036" +
    "\057\035\060\033\061\031\063\030\067\046\070\045\072" +
    "\044\074\043\076\042\101\025\103\023\104\016\106\014" +
    "\116\034\125\024\001\002\000\072\002\uffdb\005\uffdb\007" +
    "\uffdb\010\uffdb\044\uffdb\045\uffdb\046\uffdb\047\uffdb\050\uffdb" +
    "\051\uffdb\052\uffdb\053\uffdb\054\uffdb\057\uffdb\060\uffdb\061" +
    "\uffdb\063\uffdb\067\uffdb\070\uffdb\072\uffdb\074\uffdb\076\uffdb" +
    "\101\uffdb\103\uffdb\104\uffdb\106\uffdb\116\uffdb\125\uffdb\001" +
    "\002\000\070\005\uffd3\007\uffd3\010\uffd3\044\uffd3\045\uffd3" +
    "\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3\053\uffd3\054" +
    "\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067\uffd3\070\uffd3" +
    "\072\uffd3\074\uffd3\076\uffd3\101\uffd3\103\uffd3\104\uffd3\106" +
    "\uffd3\116\uffd3\125\uffd3\001\002\000\070\005\041\007\037" +
    "\010\u012a\044\022\045\020\046\015\047\013\050\012\051" +
    "\054\052\053\053\051\054\036\057\035\060\033\061\031" +
    "\063\030\067\046\070\045\072\044\074\043\076\042\101" +
    "\025\103\023\104\016\106\014\116\034\125\024\001\002" +
    "\000\072\002\uffdc\005\uffdc\007\uffdc\010\uffdc\044\uffdc\045" +
    "\uffdc\046\uffdc\047\uffdc\050\uffdc\051\uffdc\052\uffdc\053\uffdc" +
    "\054\uffdc\057\uffdc\060\uffdc\061\uffdc\063\uffdc\067\uffdc\070" +
    "\uffdc\072\uffdc\074\uffdc\076\uffdc\101\uffdc\103\uffdc\104\uffdc" +
    "\106\uffdc\116\uffdc\125\uffdc\001\002\000\004\015\275\001" +
    "\002\000\072\002\uffef\005\uffef\007\uffef\010\uffef\044\uffef" +
    "\045\uffef\046\uffef\047\uffef\050\uffef\051\uffef\052\uffef\053" +
    "\uffef\054\uffef\057\uffef\060\uffef\061\uffef\063\uffef\067\uffef" +
    "\070\uffef\072\uffef\074\uffef\076\uffef\101\uffef\103\uffef\104" +
    "\uffef\106\uffef\116\uffef\125\uffef\001\002\000\006\007\u012e" +
    "\065\u012f\001\002\000\070\005\uffd3\007\uffd3\010\uffd3\044" +
    "\uffd3\045\uffd3\046\uffd3\047\uffd3\050\uffd3\051\uffd3\052\uffd3" +
    "\053\uffd3\054\uffd3\057\uffd3\060\uffd3\061\uffd3\063\uffd3\067" +
    "\uffd3\070\uffd3\072\uffd3\074\uffd3\076\uffd3\101\uffd3\103\uffd3" +
    "\104\uffd3\106\uffd3\116\uffd3\125\uffd3\001\002\000\004\125" +
    "\u0130\001\002\000\004\007\u0131\001\002\000\070\005\uffd3" +
    "\007\uffd3\010\uffd3\044\uffd3\045\uffd3\046\uffd3\047\uffd3\050" +
    "\uffd3\051\uffd3\052\uffd3\053\uffd3\054\uffd3\057\uffd3\060\uffd3" +
    "\061\uffd3\063\uffd3\067\uffd3\070\uffd3\072\uffd3\074\uffd3\076" +
    "\uffd3\101\uffd3\103\uffd3\104\uffd3\106\uffd3\116\uffd3\125\uffd3" +
    "\001\002\000\070\005\041\007\037\010\u0133\044\022\045" +
    "\020\046\015\047\013\050\012\051\054\052\053\053\051" +
    "\054\036\057\035\060\033\061\031\063\030\067\046\070" +
    "\045\072\044\074\043\076\042\101\025\103\023\104\016" +
    "\106\014\116\034\125\024\001\002\000\072\002\ufffb\005" +
    "\ufffb\007\ufffb\010\ufffb\044\ufffb\045\ufffb\046\ufffb\047\ufffb" +
    "\050\ufffb\051\ufffb\052\ufffb\053\ufffb\054\ufffb\057\ufffb\060" +
    "\ufffb\061\ufffb\063\ufffb\067\ufffb\070\ufffb\072\ufffb\074\ufffb" +
    "\076\ufffb\101\ufffb\103\ufffb\104\ufffb\106\ufffb\116\ufffb\125" +
    "\ufffb\001\002\000\070\005\041\007\037\010\u0135\044\022" +
    "\045\020\046\015\047\013\050\012\051\054\052\053\053" +
    "\051\054\036\057\035\060\033\061\031\063\030\067\046" +
    "\070\045\072\044\074\043\076\042\101\025\103\023\104" +
    "\016\106\014\116\034\125\024\001\002\000\072\002\ufffc" +
    "\005\ufffc\007\ufffc\010\ufffc\044\ufffc\045\ufffc\046\ufffc\047" +
    "\ufffc\050\ufffc\051\ufffc\052\ufffc\053\ufffc\054\ufffc\057\ufffc" +
    "\060\ufffc\061\ufffc\063\ufffc\067\ufffc\070\ufffc\072\ufffc\074" +
    "\ufffc\076\ufffc\101\ufffc\103\ufffc\104\ufffc\106\ufffc\116\ufffc" +
    "\125\ufffc\001\002\000\004\002\001\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0134\000\006\002\003\016\004\001\001\000\002\001" +
    "\001\000\024\003\020\006\031\007\051\010\025\011\026" +
    "\012\016\013\046\021\047\045\037\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\010\001\001\000\024" +
    "\003\020\006\031\007\051\010\025\011\026\012\016\013" +
    "\046\021\047\045\037\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\044\017" +
    "\111\021\110\022\113\023\061\024\063\025\074\026\075" +
    "\027\103\030\104\033\u012b\034\106\035\105\036\102\037" +
    "\100\040\076\041\064\042\112\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\006\006\376\045\375\001\001\000\006\031\362\032\361" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\044\017\111\021\110\022\113\023\061\024\063" +
    "\025\074\026\075\027\103\030\104\033\327\034\106\035" +
    "\105\036\102\037\100\040\076\041\064\042\112\001\001" +
    "\000\006\044\315\045\316\001\001\000\002\001\001\000" +
    "\002\001\001\000\044\017\111\021\110\022\113\023\061" +
    "\024\063\025\074\026\075\027\103\030\104\033\311\034" +
    "\106\035\105\036\102\037\100\040\076\041\064\042\112" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\016" +
    "\276\001\001\000\002\001\001\000\044\017\111\021\110" +
    "\022\113\023\061\024\063\025\074\026\075\027\103\030" +
    "\104\033\271\034\106\035\105\036\102\037\100\040\076" +
    "\041\064\042\112\001\001\000\044\017\111\021\110\022" +
    "\113\023\061\024\063\025\074\026\075\027\103\030\104" +
    "\033\270\034\106\035\105\036\102\037\100\040\076\041" +
    "\064\042\112\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\004\045\055\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\044\017\111\021\110" +
    "\022\113\023\061\024\063\025\074\026\075\027\103\030" +
    "\104\033\077\034\106\035\105\036\102\037\100\040\076" +
    "\041\064\042\112\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\050\004\143\005\144" +
    "\017\111\021\110\022\113\023\061\024\063\025\074\026" +
    "\075\027\103\030\104\033\145\034\106\035\105\036\102" +
    "\037\100\040\076\041\064\042\112\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\010\017\111\021\110\042\115\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\034\017\111" +
    "\021\110\022\113\023\061\024\063\025\074\026\075\027" +
    "\121\036\102\037\100\040\076\041\064\042\112\001\001" +
    "\000\002\001\001\000\032\017\111\021\110\022\113\023" +
    "\061\024\063\025\074\026\075\036\123\037\100\040\076" +
    "\041\064\042\112\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\022\017\111" +
    "\021\110\022\113\023\061\024\063\025\142\041\064\042" +
    "\112\001\001\000\022\017\111\021\110\022\113\023\061" +
    "\024\063\025\131\041\064\042\112\001\001\000\002\001" +
    "\001\000\020\017\111\021\110\022\113\023\061\024\063" +
    "\041\141\042\112\001\001\000\020\017\111\021\110\022" +
    "\113\023\061\024\063\041\140\042\112\001\001\000\020" +
    "\017\111\021\110\022\113\023\061\024\063\041\137\042" +
    "\112\001\001\000\020\017\111\021\110\022\113\023\061" +
    "\024\063\041\136\042\112\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\050\004\143\005\150\017\111" +
    "\021\110\022\113\023\061\024\063\025\074\026\075\027" +
    "\103\030\104\033\145\034\106\035\105\036\102\037\100" +
    "\040\076\041\064\042\112\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\046\017\111\021\110" +
    "\022\113\023\061\024\063\025\074\026\075\027\103\030" +
    "\104\033\176\034\106\035\105\036\102\037\100\040\076" +
    "\041\064\042\112\043\212\001\001\000\044\017\111\021" +
    "\110\022\113\023\061\024\063\025\074\026\075\027\103" +
    "\030\104\033\210\034\106\035\105\036\102\037\100\040" +
    "\076\041\064\042\112\001\001\000\004\046\161\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\046\017\111\021\110\022\113" +
    "\023\061\024\063\025\074\026\075\027\103\030\104\033" +
    "\176\034\106\035\105\036\102\037\100\040\076\041\064" +
    "\042\112\043\175\001\001\000\044\017\111\021\110\022" +
    "\113\023\061\024\063\025\074\026\075\027\103\030\104" +
    "\033\173\034\106\035\105\036\102\037\100\040\076\041" +
    "\064\042\112\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\046\017\111\021" +
    "\110\022\113\023\061\024\063\025\074\026\075\027\103" +
    "\030\104\033\176\034\106\035\105\036\102\037\100\040" +
    "\076\041\064\042\112\043\200\001\001\000\002\001\001" +
    "\000\002\001\001\000\044\017\111\021\110\022\113\023" +
    "\061\024\063\025\074\026\075\027\103\030\104\033\203" +
    "\034\106\035\105\036\102\037\100\040\076\041\064\042" +
    "\112\001\001\000\002\001\001\000\002\001\001\000\044" +
    "\017\111\021\110\022\113\023\061\024\063\025\074\026" +
    "\075\027\103\030\104\033\206\034\106\035\105\036\102" +
    "\037\100\040\076\041\064\042\112\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\014\017\111\021" +
    "\110\022\113\023\225\042\112\001\001\000\014\017\111" +
    "\021\110\022\113\023\216\042\112\001\001\000\002\001" +
    "\001\000\012\017\111\021\110\022\224\042\112\001\001" +
    "\000\012\017\111\021\110\022\223\042\112\001\001\000" +
    "\012\017\111\021\110\022\222\042\112\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\010\014\232\015\230\045\231" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\014\232\015\234\045\231\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\004\016" +
    "\240\001\001\000\024\003\020\006\031\007\051\010\025" +
    "\011\026\012\016\013\046\021\047\045\037\001\001\000" +
    "\002\001\001\000\010\014\232\015\243\045\231\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\016\246\001" +
    "\001\000\024\003\020\006\031\007\051\010\025\011\026" +
    "\012\016\013\046\021\047\045\037\001\001\000\002\001" +
    "\001\000\044\017\111\021\110\022\113\023\061\024\063" +
    "\025\074\026\075\027\103\030\104\033\251\034\106\035" +
    "\105\036\102\037\100\040\076\041\064\042\112\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\050\004\143\005\255\017\111\021\110\022\113\023\061" +
    "\024\063\025\074\026\075\027\103\030\104\033\145\034" +
    "\106\035\105\036\102\037\100\040\076\041\064\042\112" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\046\017\111\021" +
    "\110\022\113\023\061\024\063\025\074\026\075\027\103" +
    "\030\104\033\176\034\106\035\105\036\102\037\100\040" +
    "\076\041\064\042\112\043\266\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\044\017\111\021\110" +
    "\022\113\023\061\024\063\025\074\026\075\027\103\030" +
    "\104\033\275\034\106\035\105\036\102\037\100\040\076" +
    "\041\064\042\112\001\001\000\002\001\001\000\024\003" +
    "\020\006\031\007\051\010\025\011\026\012\016\013\046" +
    "\021\047\045\037\001\001\000\002\001\001\000\044\017" +
    "\111\021\110\022\113\023\061\024\063\025\074\026\075" +
    "\027\103\030\104\033\301\034\106\035\105\036\102\037" +
    "\100\040\076\041\064\042\112\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\050\004\143\005" +
    "\305\017\111\021\110\022\113\023\061\024\063\025\074" +
    "\026\075\027\103\030\104\033\145\034\106\035\105\036" +
    "\102\037\100\040\076\041\064\042\112\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\313\001\001\000\024" +
    "\003\020\006\031\007\051\010\025\011\026\012\016\013" +
    "\046\021\047\045\037\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\010\014\232\015\322\045\231\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\016\325\001\001\000" +
    "\024\003\020\006\031\007\051\010\025\011\026\012\016" +
    "\013\046\021\047\045\037\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\016\331\001\001\000\024\003\020" +
    "\006\031\007\051\010\025\011\026\012\016\013\046\021" +
    "\047\045\037\001\001\000\002\001\001\000\004\013\335" +
    "\001\001\000\004\016\336\001\001\000\002\001\001\000" +
    "\024\003\020\006\031\007\051\010\025\011\026\012\016" +
    "\013\046\021\047\045\037\001\001\000\002\001\001\000" +
    "\044\017\111\021\110\022\113\023\061\024\063\025\074" +
    "\026\075\027\103\030\104\033\341\034\106\035\105\036" +
    "\102\037\100\040\076\041\064\042\112\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\050\004" +
    "\143\005\345\017\111\021\110\022\113\023\061\024\063" +
    "\025\074\026\075\027\103\030\104\033\145\034\106\035" +
    "\105\036\102\037\100\040\076\041\064\042\112\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\004\046\161\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\044\017\111\021\110\022\113\023\061\024" +
    "\063\025\074\026\075\027\103\030\104\033\364\034\106" +
    "\035\105\036\102\037\100\040\076\041\064\042\112\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\044\017\111\021\110\022\113\023" +
    "\061\024\063\025\074\026\075\027\103\030\104\033\370" +
    "\034\106\035\105\036\102\037\100\040\076\041\064\042" +
    "\112\001\001\000\002\001\001\000\002\001\001\000\044" +
    "\017\111\021\110\022\113\023\061\024\063\025\074\026" +
    "\075\027\103\030\104\033\373\034\106\035\105\036\102" +
    "\037\100\040\076\041\064\042\112\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\050\004\143\005\u0116\017\111\021\110\022\113\023\061" +
    "\024\063\025\074\026\075\027\103\030\104\033\145\034" +
    "\106\035\105\036\102\037\100\040\076\041\064\042\112" +
    "\001\001\000\002\001\001\000\044\017\111\021\110\022" +
    "\113\023\061\024\063\025\074\026\075\027\103\030\104" +
    "\033\u0105\034\106\035\105\036\102\037\100\040\076\041" +
    "\064\042\112\001\001\000\002\001\001\000\002\001\001" +
    "\000\044\017\111\021\110\022\113\023\061\024\063\025" +
    "\074\026\075\027\103\030\104\033\u0108\034\106\035\105" +
    "\036\102\037\100\040\076\041\064\042\112\001\001\000" +
    "\002\001\001\000\002\001\001\000\044\017\111\021\110" +
    "\022\113\023\061\024\063\025\074\026\075\027\103\030" +
    "\104\033\u010b\034\106\035\105\036\102\037\100\040\076" +
    "\041\064\042\112\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\u010e\001\001\000\024\003\020\006\031" +
    "\007\051\010\025\011\026\012\016\013\046\021\047\045" +
    "\037\001\001\000\002\001\001\000\004\016\u0111\001\001" +
    "\000\024\003\020\006\031\007\051\010\025\011\026\012" +
    "\016\013\046\021\047\045\037\001\001\000\002\001\001" +
    "\000\004\016\u0114\001\001\000\024\003\020\006\031\007" +
    "\051\010\025\011\026\012\016\013\046\021\047\045\037" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\u0119\001\001\000\024\003\020\006\031" +
    "\007\051\010\025\011\026\012\016\013\046\021\047\045" +
    "\037\001\001\000\002\001\001\000\004\016\u011c\001\001" +
    "\000\024\003\020\006\031\007\051\010\025\011\026\012" +
    "\016\013\046\021\047\045\037\001\001\000\002\001\001" +
    "\000\044\017\111\021\110\022\113\023\061\024\063\025" +
    "\074\026\075\027\103\030\104\033\u011f\034\106\035\105" +
    "\036\102\037\100\040\076\041\064\042\112\001\001\000" +
    "\002\001\001\000\006\010\u0123\011\u0121\001\001\000\002" +
    "\001\001\000\006\031\362\032\361\001\001\000\002\001" +
    "\001\000\004\016\u0125\001\001\000\024\003\020\006\031" +
    "\007\051\010\025\011\026\012\016\013\046\021\047\045" +
    "\037\001\001\000\002\001\001\000\004\016\u0128\001\001" +
    "\000\024\003\020\006\031\007\051\010\025\011\026\012" +
    "\016\013\046\021\047\045\037\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\016\u0133\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\u0131\001\001\000\024\003\020\006\031\007" +
    "\051\010\025\011\026\012\016\013\046\021\047\045\037" +
    "\001\001\000\002\001\001\000\024\003\020\006\031\007" +
    "\051\010\025\011\026\012\016\013\046\021\047\045\037" +
    "\001\001\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public lang.Absyn.Program pProgram() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (lang.Absyn.Program) res.value;
  }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Program start_val = (lang.Absyn.Program)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= ListStm 
            {
              lang.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListStm p_1 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.PStms(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.PStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PStms)RESULT).line_num = -1;
  ((lang.Absyn.PStms)RESULT).col_num = -1;
  ((lang.Absyn.PStms)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Program ::= _SYMB_57 _SYMB_0 _SYMB_46 ListStm 
            {
              lang.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.PFunctionalModeStms(p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Stm ::= _SYMB_45 FuncType _IDENT_ _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.FuncType p_2 = (lang.Absyn.FuncType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_5 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefFun(p_2,p_3,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefFun)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefFun)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefFun)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefFun)RESULT).line_num = -1;
  ((lang.Absyn.DefFun)RESULT).col_num = -1;
  ((lang.Absyn.DefFun)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Stm ::= _SYMB_38 _IDENT_ _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_4 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_7 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefConstructor(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefConstructor)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefConstructor)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefConstructor)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefConstructor)RESULT).line_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).col_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Stm ::= _SYMB_36 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefClass(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClass)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClass)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClass)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClass)RESULT).line_num = -1;
  ((lang.Absyn.DefClass)RESULT).col_num = -1;
  ((lang.Absyn.DefClass)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Stm ::= _SYMB_36 _IDENT_ _SYMB_49 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefClassInherits(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClassInherits)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClassInherits)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).col_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Stm ::= _SYMB_58 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPrint(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPrint)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPrint)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPrint)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPrint)RESULT).line_num = -1;
  ((lang.Absyn.SPrint)RESULT).col_num = -1;
  ((lang.Absyn.SPrint)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Stm ::= _SYMB_34 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SBreak();
((lang.Absyn.SBreak)RESULT).line_num = -1;
((lang.Absyn.SBreak)RESULT).col_num = -1;
((lang.Absyn.SBreak)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Stm ::= _SYMB_39 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SContinue();
((lang.Absyn.SContinue)RESULT).line_num = -1;
((lang.Absyn.SContinue)RESULT).col_num = -1;
((lang.Absyn.SContinue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Stm ::= Stm_Initialise 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Initialise p_1 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.InitialiseStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.InitialiseStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.InitialiseStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).col_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Stm ::= Stm_Declare 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Declare p_1 = (lang.Absyn.Stm_Declare)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DeclareStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.DeclareStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DeclareStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DeclareStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DeclareStm)RESULT).line_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).col_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Stm ::= Stm_Assign 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Assign p_1 = (lang.Absyn.Stm_Assign)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.AssignStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.AssignStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.AssignStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.AssignStm)RESULT).line_num = -1;
  ((lang.Absyn.AssignStm)RESULT).col_num = -1;
  ((lang.Absyn.AssignStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Stm ::= Stm_Loop 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Loop p_1 = (lang.Absyn.Stm_Loop)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.LoopStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LoopStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LoopStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LoopStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LoopStm)RESULT).line_num = -1;
  ((lang.Absyn.LoopStm)RESULT).col_num = -1;
  ((lang.Absyn.LoopStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Stm ::= Stm_IncrmDecrm 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_IncrmDecrm p_1 = (lang.Absyn.Stm_IncrmDecrm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.IncrnDecrmStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Stm ::= Exp16 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCall(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCall)RESULT).line_num = -1;
  ((lang.Absyn.SCall)RESULT).col_num = -1;
  ((lang.Absyn.SCall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Stm ::= _IDENT_ _SYMB_6 _SYMB_31 _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SAppend(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAppend)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAppend)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAppend)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAppend)RESULT).line_num = -1;
  ((lang.Absyn.SAppend)RESULT).col_num = -1;
  ((lang.Absyn.SAppend)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Stm ::= _IDENT_ _SYMB_6 _SYMB_62 _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SRemove(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SRemove)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SRemove)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SRemove)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SRemove)RESULT).line_num = -1;
  ((lang.Absyn.SRemove)RESULT).col_num = -1;
  ((lang.Absyn.SRemove)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Stm ::= _SYMB_64 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SReturn(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SReturn)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SReturn)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SReturn)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SReturn)RESULT).line_num = -1;
  ((lang.Absyn.SReturn)RESULT).col_num = -1;
  ((lang.Absyn.SReturn)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Stm ::= _SYMB_56 _IDENT_ _SYMB_9 _SYMB_55 _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_7 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SObjInit(p_2,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SObjInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SObjInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SObjInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SObjInit)RESULT).line_num = -1;
  ((lang.Absyn.SObjInit)RESULT).col_num = -1;
  ((lang.Absyn.SObjInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Stm ::= _SYMB_37 VarType _IDENT_ _SYMB_9 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.VarType p_2 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SConstInit(p_2,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SConstInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SConstInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SConstInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SConstInit)RESULT).line_num = -1;
  ((lang.Absyn.SConstInit)RESULT).col_num = -1;
  ((lang.Absyn.SConstInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Stm ::= If_Stm 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.If_Stm p_1 = (lang.Absyn.If_Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.IfS(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IfS)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IfS)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IfS)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IfS)RESULT).line_num = -1;
  ((lang.Absyn.IfS)RESULT).col_num = -1;
  ((lang.Absyn.IfS)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Stm ::= _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_2 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Block(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.Block)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.Block)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.Block)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.Block)RESULT).line_num = -1;
  ((lang.Absyn.Block)RESULT).col_num = -1;
  ((lang.Absyn.Block)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Item ::= Exp 
            {
              lang.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.LstItem(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LstItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LstItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LstItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LstItem)RESULT).line_num = -1;
  ((lang.Absyn.LstItem)RESULT).col_num = -1;
  ((lang.Absyn.LstItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // ListItem ::= 
            {
              lang.Absyn.ListItem RESULT =null;
		 RESULT = new lang.Absyn.ListItem(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ListItem ::= Item 
            {
              lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Item p_1 = (lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ListItem ::= Item _SYMB_5 ListItem 
            {
              lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Item p_1 = (lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListItem p_3 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // Stm_Initialise ::= VarType _IDENT_ _SYMB_9 Exp 
            {
              lang.Absyn.Stm_Initialise RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SInit(p_1,p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SInit)RESULT).line_num = -1;
  ((lang.Absyn.SInit)RESULT).col_num = -1;
  ((lang.Absyn.SInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Initialise",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Stm_Declare ::= VarType _IDENT_ 
            {
              lang.Absyn.Stm_Declare RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SDecl)RESULT).line_num = -1;
  ((lang.Absyn.SDecl)RESULT).col_num = -1;
  ((lang.Absyn.SDecl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Declare",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Stm_Assign ::= _IDENT_ Assign_Op Exp 
            {
              lang.Absyn.Stm_Assign RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Assign_Op p_2 = (lang.Absyn.Assign_Op)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SAssign(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAssign)RESULT).line_num = -1;
  ((lang.Absyn.SAssign)RESULT).col_num = -1;
  ((lang.Absyn.SAssign)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Assign",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Stm_IncrmDecrm ::= _IDENT_ IncrmDecrm_Op 
            {
              lang.Absyn.Stm_IncrmDecrm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.IncrmDecrm_Op p_2 = (lang.Absyn.IncrmDecrm_Op)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIncrmDecrm(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_IncrmDecrm",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Stm_Loop ::= _SYMB_74 Exp _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SWhile(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SWhile)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SWhile)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SWhile)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SWhile)RESULT).line_num = -1;
  ((lang.Absyn.SWhile)RESULT).col_num = -1;
  ((lang.Absyn.SWhile)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Stm_Loop ::= _SYMB_63 _IDENT_ _SYMB_48 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopIdent(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Stm_Loop ::= _SYMB_63 _IDENT_ _SYMB_48 _SYMB_7 ListItem _SYMB_8 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListItem p_5 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopList(p_2,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopList)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Stm_Loop ::= _SYMB_63 _IDENT_ _SYMB_48 _SYMB_60 _SYMB_1 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_9 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_10 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStart(p_2,p_6,p_9);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_9xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Stm_Loop ::= _SYMB_63 _IDENT_ _SYMB_48 _SYMB_60 _SYMB_1 Exp _SYMB_5 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_8 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_10 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_11 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_12 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStartStop(p_2,p_6,p_8,p_11);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_11xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Stm_Loop ::= _SYMB_63 _IDENT_ _SYMB_48 _SYMB_60 _SYMB_1 Exp _SYMB_5 Exp _SYMB_5 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		lang.Absyn.Exp p_8 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_10 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_11 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_12 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_13xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_13xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_13 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_14xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_14xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_14 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStartStopEnd(p_2,p_6,p_8,p_10,p_13);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_10xleft,p_13xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Stm_Loop ::= _SYMB_63 Stm_Initialise _SYMB_5 Exp _SYMB_5 Stm_IncrmDecrm _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Stm_Initialise p_2 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Stm_IncrmDecrm p_6 = (lang.Absyn.Stm_IncrmDecrm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCLoop(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoop)RESULT).line_num = -1;
  ((lang.Absyn.SCLoop)RESULT).col_num = -1;
  ((lang.Absyn.SCLoop)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Stm_Loop ::= _SYMB_63 Stm_Initialise _SYMB_5 Exp _SYMB_5 Stm_Assign _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Stm_Initialise p_2 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Stm_Assign p_6 = (lang.Absyn.Stm_Assign)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCLoopAssign(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoopAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // If_Stm ::= _SYMB_47 Exp _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIf(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIf)RESULT).line_num = -1;
  ((lang.Absyn.SIf)RESULT).col_num = -1;
  ((lang.Absyn.SIf)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // If_Stm ::= _SYMB_47 Exp _SYMB_3 ListStm _SYMB_4 _SYMB_41 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIfElse(p_2,p_4,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElse)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElse)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElse)RESULT).line_num = -1;
  ((lang.Absyn.SIfElse)RESULT).col_num = -1;
  ((lang.Absyn.SIfElse)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // If_Stm ::= _SYMB_47 Exp _SYMB_3 ListStm _SYMB_4 _SYMB_41 If_Stm 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.If_Stm p_7 = (lang.Absyn.If_Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIfElseIf(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElseIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElseIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).col_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // Arg ::= VarType _IDENT_ 
            {
              lang.Absyn.Arg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ArgDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ArgDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ArgDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ArgDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ArgDecl)RESULT).line_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).col_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arg",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // ListArg ::= 
            {
              lang.Absyn.ListArg RESULT =null;
		 RESULT = new lang.Absyn.ListArg(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ListArg ::= Arg 
            {
              lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Arg p_1 = (lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListArg(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ListArg ::= Arg _SYMB_5 ListArg 
            {
              lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Arg p_1 = (lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListArg p_3 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ListStm ::= 
            {
              lang.Absyn.ListStm RESULT =null;
		 RESULT = new lang.Absyn.ListStm(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStm",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ListStm ::= ListStm Stm 
            {
              lang.Absyn.ListStm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_1 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm p_2 = (lang.Absyn.Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStm",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // Exp15 ::= _INTEGER_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EInt)RESULT).line_num = -1;
  ((lang.Absyn.EInt)RESULT).col_num = -1;
  ((lang.Absyn.EInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Exp15 ::= _SYMB_10 _INTEGER_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENegInt(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegInt)RESULT).line_num = -1;
  ((lang.Absyn.ENegInt)RESULT).col_num = -1;
  ((lang.Absyn.ENegInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Exp15 ::= _CHAR_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Character p_1 = (Character)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EChar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EChar)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EChar)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EChar)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EChar)RESULT).line_num = -1;
  ((lang.Absyn.EChar)RESULT).col_num = -1;
  ((lang.Absyn.EChar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Exp15 ::= _DOUBLE_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Double p_1 = (Double)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EDouble(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDouble)RESULT).line_num = -1;
  ((lang.Absyn.EDouble)RESULT).col_num = -1;
  ((lang.Absyn.EDouble)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Exp15 ::= _SYMB_10 _DOUBLE_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Double p_2 = (Double)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENegDouble(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegDouble)RESULT).line_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).col_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Exp15 ::= _STRING_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EString)RESULT).line_num = -1;
  ((lang.Absyn.EString)RESULT).col_num = -1;
  ((lang.Absyn.EString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Exp15 ::= _SYMB_72 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ETrue();
((lang.Absyn.ETrue)RESULT).line_num = -1;
((lang.Absyn.ETrue)RESULT).col_num = -1;
((lang.Absyn.ETrue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Exp15 ::= _SYMB_42 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFalse();
((lang.Absyn.EFalse)RESULT).line_num = -1;
((lang.Absyn.EFalse)RESULT).col_num = -1;
((lang.Absyn.EFalse)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Exp15 ::= _IDENT_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EId(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EId)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EId)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EId)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EId)RESULT).line_num = -1;
  ((lang.Absyn.EId)RESULT).col_num = -1;
  ((lang.Absyn.EId)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Exp15 ::= _IDENT_ _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListItem(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListItem)RESULT).line_num = -1;
  ((lang.Absyn.EListItem)RESULT).col_num = -1;
  ((lang.Absyn.EListItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_75 _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListWith(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListWith)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListWith)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListWith)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListWith)RESULT).line_num = -1;
  ((lang.Absyn.EListWith)RESULT).col_num = -1;
  ((lang.Absyn.EListWith)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_76 _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListWithout(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListWithout)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListWithout)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListWithout)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListWithout)RESULT).line_num = -1;
  ((lang.Absyn.EListWithout)RESULT).col_num = -1;
  ((lang.Absyn.EListWithout)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Exp15 ::= _SYMB_7 ListItem _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListItem p_2 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EList(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.EList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EList)RESULT).line_num = -1;
  ((lang.Absyn.EList)RESULT).col_num = -1;
  ((lang.Absyn.EList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_65 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListSize(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListSize)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListSize)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListSize)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListSize)RESULT).line_num = -1;
  ((lang.Absyn.EListSize)RESULT).col_num = -1;
  ((lang.Absyn.EListSize)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Exp15 ::= _SYMB_50 _SYMB_1 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EInput();
((lang.Absyn.EInput)RESULT).line_num = -1;
((lang.Absyn.EInput)RESULT).col_num = -1;
((lang.Absyn.EInput)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_53 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EStrLength(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EStrLength)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EStrLength)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EStrLength)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EStrLength)RESULT).line_num = -1;
  ((lang.Absyn.EStrLength)RESULT).col_num = -1;
  ((lang.Absyn.EStrLength)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // Exp15 ::= _SYMB_59 _SYMB_1 _INTEGER_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Integer p_3 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ERand(p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ERand)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ERand)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ERand)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ERand)RESULT).line_num = -1;
  ((lang.Absyn.ERand)RESULT).col_num = -1;
  ((lang.Absyn.ERand)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // Exp15 ::= Exp16 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // ListIdent ::= 
            {
              lang.Absyn.ListIdent RESULT =null;
		 RESULT = new lang.Absyn.ListIdent(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // ListIdent ::= _IDENT_ 
            {
              lang.Absyn.ListIdent RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListIdent(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // ListIdent ::= _IDENT_ _SYMB_5 ListIdent 
            {
              lang.Absyn.ListIdent RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListIdent p_3 = (lang.Absyn.ListIdent)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Exp16 ::= _IDENT_ _SYMB_6 TypeCast 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.TypeCast p_3 = (lang.Absyn.TypeCast)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ETypeCast(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ETypeCast)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ETypeCast)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ETypeCast)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ETypeCast)RESULT).line_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).col_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Exp16 ::= _SYMB_52 _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_3 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELambda(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELambda)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELambda)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELambda)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELambda)RESULT).line_num = -1;
  ((lang.Absyn.ELambda)RESULT).col_num = -1;
  ((lang.Absyn.ELambda)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Exp16 ::= _SYMB_54 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMapIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapIdent)RESULT).line_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).col_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Exp16 ::= _SYMB_54 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMapList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapList)RESULT).line_num = -1;
  ((lang.Absyn.EMapList)RESULT).col_num = -1;
  ((lang.Absyn.EMapList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Exp16 ::= _SYMB_43 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFilterIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).col_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Exp16 ::= _SYMB_43 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFilterList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterList)RESULT).line_num = -1;
  ((lang.Absyn.EFilterList)RESULT).col_num = -1;
  ((lang.Absyn.EFilterList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Exp16 ::= _SYMB_61 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EReduceIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).col_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Exp16 ::= _SYMB_61 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EReduceList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceList)RESULT).line_num = -1;
  ((lang.Absyn.EReduceList)RESULT).col_num = -1;
  ((lang.Absyn.EReduceList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESelect(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelect)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelect)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelect)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelect)RESULT).line_num = -1;
  ((lang.Absyn.ESelect)RESULT).col_num = -1;
  ((lang.Absyn.ESelect)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESelectListItem(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelectListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelectListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).col_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Exp16 ::= _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_3 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ECall(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ECall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ECall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ECall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ECall)RESULT).line_num = -1;
  ((lang.Absyn.ECall)RESULT).col_num = -1;
  ((lang.Absyn.ECall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_5 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EObjCall(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EObjCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EObjCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EObjCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EObjCall)RESULT).line_num = -1;
  ((lang.Absyn.EObjCall)RESULT).col_num = -1;
  ((lang.Absyn.EObjCall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Exp16 ::= _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Exp13 ::= Exp13 _SYMB_11 Exp14 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EPow(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EPow)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EPow)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EPow)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EPow)RESULT).line_num = -1;
  ((lang.Absyn.EPow)RESULT).col_num = -1;
  ((lang.Absyn.EPow)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp13",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Exp13 ::= Exp14 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp13",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Exp12 ::= Exp12 _SYMB_12 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMul(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMul)RESULT).line_num = -1;
  ((lang.Absyn.EMul)RESULT).col_num = -1;
  ((lang.Absyn.EMul)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Exp12 ::= Exp12 _SYMB_13 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EDiv(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDiv)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDiv)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDiv)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDiv)RESULT).line_num = -1;
  ((lang.Absyn.EDiv)RESULT).col_num = -1;
  ((lang.Absyn.EDiv)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Exp12 ::= Exp12 _SYMB_14 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMod(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMod)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMod)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMod)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMod)RESULT).line_num = -1;
  ((lang.Absyn.EMod)RESULT).col_num = -1;
  ((lang.Absyn.EMod)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Exp12 ::= Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Exp11 ::= Exp11 _SYMB_15 Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EAdd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAdd)RESULT).line_num = -1;
  ((lang.Absyn.EAdd)RESULT).col_num = -1;
  ((lang.Absyn.EAdd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Exp11 ::= Exp11 _SYMB_10 Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESub(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESub)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESub)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESub)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESub)RESULT).line_num = -1;
  ((lang.Absyn.ESub)RESULT).col_num = -1;
  ((lang.Absyn.ESub)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Exp11 ::= Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Exp9 ::= Exp9 _SYMB_16 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELt)RESULT).line_num = -1;
  ((lang.Absyn.ELt)RESULT).col_num = -1;
  ((lang.Absyn.ELt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Exp9 ::= Exp9 _SYMB_17 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EGt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGt)RESULT).line_num = -1;
  ((lang.Absyn.EGt)RESULT).col_num = -1;
  ((lang.Absyn.EGt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Exp9 ::= Exp9 _SYMB_18 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELEq)RESULT).line_num = -1;
  ((lang.Absyn.ELEq)RESULT).col_num = -1;
  ((lang.Absyn.ELEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Exp9 ::= Exp9 _SYMB_19 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EGEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGEq)RESULT).line_num = -1;
  ((lang.Absyn.EGEq)RESULT).col_num = -1;
  ((lang.Absyn.EGEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Exp9 ::= Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Exp8 ::= Exp8 _SYMB_20 Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EEq)RESULT).line_num = -1;
  ((lang.Absyn.EEq)RESULT).col_num = -1;
  ((lang.Absyn.EEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Exp8 ::= Exp8 _SYMB_21 Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENEq)RESULT).line_num = -1;
  ((lang.Absyn.ENEq)RESULT).col_num = -1;
  ((lang.Absyn.ENEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Exp8 ::= Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Exp4 ::= Exp4 _SYMB_29 Exp5 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAnd)RESULT).line_num = -1;
  ((lang.Absyn.EAnd)RESULT).col_num = -1;
  ((lang.Absyn.EAnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Exp4 ::= Exp5 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Exp3 ::= Exp3 _SYMB_30 Exp4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EOr)RESULT).line_num = -1;
  ((lang.Absyn.EOr)RESULT).col_num = -1;
  ((lang.Absyn.EOr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp3",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Exp3 ::= Exp4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp3",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Assign_Op ::= _SYMB_9 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Assign();
((lang.Absyn.Assign)RESULT).line_num = -1;
((lang.Absyn.Assign)RESULT).col_num = -1;
((lang.Absyn.Assign)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Assign_Op ::= _SYMB_22 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignMul();
((lang.Absyn.AssignMul)RESULT).line_num = -1;
((lang.Absyn.AssignMul)RESULT).col_num = -1;
((lang.Absyn.AssignMul)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Assign_Op ::= _SYMB_23 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignDiv();
((lang.Absyn.AssignDiv)RESULT).line_num = -1;
((lang.Absyn.AssignDiv)RESULT).col_num = -1;
((lang.Absyn.AssignDiv)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Assign_Op ::= _SYMB_24 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignMod();
((lang.Absyn.AssignMod)RESULT).line_num = -1;
((lang.Absyn.AssignMod)RESULT).col_num = -1;
((lang.Absyn.AssignMod)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // Assign_Op ::= _SYMB_25 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignAdd();
((lang.Absyn.AssignAdd)RESULT).line_num = -1;
((lang.Absyn.AssignAdd)RESULT).col_num = -1;
((lang.Absyn.AssignAdd)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // Assign_Op ::= _SYMB_26 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignSub();
((lang.Absyn.AssignSub)RESULT).line_num = -1;
((lang.Absyn.AssignSub)RESULT).col_num = -1;
((lang.Absyn.AssignSub)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // IncrmDecrm_Op ::= _SYMB_27 
            {
              lang.Absyn.IncrmDecrm_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Increment();
((lang.Absyn.Increment)RESULT).line_num = -1;
((lang.Absyn.Increment)RESULT).col_num = -1;
((lang.Absyn.Increment)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IncrmDecrm_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // IncrmDecrm_Op ::= _SYMB_28 
            {
              lang.Absyn.IncrmDecrm_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Decrement();
((lang.Absyn.Decrement)RESULT).line_num = -1;
((lang.Absyn.Decrement)RESULT).col_num = -1;
((lang.Absyn.Decrement)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IncrmDecrm_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Exp ::= Exp1 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Exp1 ::= Exp2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp1",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Exp2 ::= Exp3 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp2",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Exp5 ::= Exp6 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp5",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Exp6 ::= Exp7 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp6",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // Exp7 ::= Exp8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp7",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // Exp10 ::= Exp11 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp10",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // Exp14 ::= Exp15 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp14",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // ListExp ::= 
            {
              lang.Absyn.ListExp RESULT =null;
		 RESULT = new lang.Absyn.ListExp(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // ListExp ::= Exp 
            {
              lang.Absyn.ListExp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListExp(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // ListExp ::= Exp _SYMB_5 ListExp 
            {
              lang.Absyn.ListExp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListExp p_3 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // FuncType ::= _SYMB_73 
            {
              lang.Absyn.FuncType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.FuncType_void();
((lang.Absyn.FuncType_void)RESULT).line_num = -1;
((lang.Absyn.FuncType_void)RESULT).col_num = -1;
((lang.Absyn.FuncType_void)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FuncType",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // FuncType ::= VarType 
            {
              lang.Absyn.FuncType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.FuncTypeVarType(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FuncType",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // VarType ::= _SYMB_51 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_int();
((lang.Absyn.VarType_int)RESULT).line_num = -1;
((lang.Absyn.VarType_int)RESULT).col_num = -1;
((lang.Absyn.VarType_int)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // VarType ::= _SYMB_40 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_double();
((lang.Absyn.VarType_double)RESULT).line_num = -1;
((lang.Absyn.VarType_double)RESULT).col_num = -1;
((lang.Absyn.VarType_double)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // VarType ::= _SYMB_33 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_bool();
((lang.Absyn.VarType_bool)RESULT).line_num = -1;
((lang.Absyn.VarType_bool)RESULT).col_num = -1;
((lang.Absyn.VarType_bool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // VarType ::= _SYMB_35 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_char();
((lang.Absyn.VarType_char)RESULT).line_num = -1;
((lang.Absyn.VarType_char)RESULT).col_num = -1;
((lang.Absyn.VarType_char)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // VarType ::= _SYMB_66 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_string();
((lang.Absyn.VarType_string)RESULT).line_num = -1;
((lang.Absyn.VarType_string)RESULT).col_num = -1;
((lang.Absyn.VarType_string)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // VarType ::= _SYMB_32 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_auto();
((lang.Absyn.VarType_auto)RESULT).line_num = -1;
((lang.Absyn.VarType_auto)RESULT).col_num = -1;
((lang.Absyn.VarType_auto)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // VarType ::= _SYMB_44 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_func();
((lang.Absyn.VarType_func)RESULT).line_num = -1;
((lang.Absyn.VarType_func)RESULT).col_num = -1;
((lang.Absyn.VarType_func)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // VarType ::= _SYMB_56 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_object();
((lang.Absyn.VarType_object)RESULT).line_num = -1;
((lang.Absyn.VarType_object)RESULT).col_num = -1;
((lang.Absyn.VarType_object)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // TypeCast ::= _SYMB_70 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toInt();
((lang.Absyn.TypeCast_toInt)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // TypeCast ::= _SYMB_69 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toDouble();
((lang.Absyn.TypeCast_toDouble)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 134: // TypeCast ::= _SYMB_67 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toBool();
((lang.Absyn.TypeCast_toBool)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 135: // TypeCast ::= _SYMB_68 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toChar();
((lang.Absyn.TypeCast_toChar)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 136: // TypeCast ::= _SYMB_71 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toString();
((lang.Absyn.TypeCast_toString)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
