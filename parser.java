
//----------------------------------------------------
// The following code was generated by CUP v0.11b 20160615 (GIT 4ac7450)
//----------------------------------------------------

package lang;

import java_cup.runtime.ComplexSymbolFactory.Location;
import java_cup.runtime.XMLElement;

/** CUP v0.11b 20160615 (GIT 4ac7450) generated parser.
  */
@SuppressWarnings({"rawtypes"})
public class parser extends java_cup.runtime.lr_parser {

 public final Class getSymbolContainer() {
    return sym.class;
}

  /** Default constructor. */
  @Deprecated
  public parser() {super();}

  /** Constructor which sets the default scanner. */
  @Deprecated
  public parser(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public parser(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\206\000\002\002\004\000\002\002\003\000\002\002" +
    "\006\000\002\003\013\000\002\003\012\000\002\003\007" +
    "\000\002\003\011\000\002\003\004\000\002\003\003\000" +
    "\002\003\003\000\002\003\003\000\002\003\003\000\002" +
    "\003\003\000\002\003\003\000\002\003\003\000\002\003" +
    "\003\000\002\003\010\000\002\003\010\000\002\003\004" +
    "\000\002\003\012\000\002\003\007\000\002\003\003\000" +
    "\002\003\021\000\002\003\005\000\002\004\003\000\002" +
    "\005\002\000\002\005\003\000\002\005\005\000\002\006" +
    "\006\000\002\007\004\000\002\010\005\000\002\011\004" +
    "\000\002\012\007\000\002\012\011\000\002\012\013\000" +
    "\002\012\014\000\002\012\016\000\002\012\020\000\002" +
    "\012\013\000\002\012\013\000\002\013\007\000\002\013" +
    "\013\000\002\013\011\000\002\014\004\000\002\015\002" +
    "\000\002\015\003\000\002\015\005\000\002\016\002\000" +
    "\002\016\004\000\002\017\003\000\002\017\004\000\002" +
    "\017\003\000\002\017\003\000\002\017\004\000\002\017" +
    "\003\000\002\017\003\000\002\017\003\000\002\017\003" +
    "\000\002\017\006\000\002\017\005\000\002\017\005\000" +
    "\002\017\005\000\002\017\003\000\002\020\002\000\002" +
    "\020\003\000\002\020\005\000\002\021\005\000\002\021" +
    "\011\000\002\021\010\000\002\021\012\000\002\021\010" +
    "\000\002\021\012\000\002\021\010\000\002\021\012\000" +
    "\002\021\005\000\002\021\010\000\002\021\006\000\002" +
    "\021\010\000\002\021\005\000\002\022\005\000\002\022" +
    "\003\000\002\023\005\000\002\023\005\000\002\023\003" +
    "\000\002\024\005\000\002\024\005\000\002\024\003\000" +
    "\002\025\005\000\002\025\005\000\002\025\005\000\002" +
    "\025\005\000\002\025\003\000\002\026\005\000\002\026" +
    "\005\000\002\026\003\000\002\027\005\000\002\027\003" +
    "\000\002\030\005\000\002\030\003\000\002\031\005\000" +
    "\002\031\003\000\002\032\003\000\002\032\003\000\002" +
    "\032\003\000\002\032\003\000\002\032\003\000\002\032" +
    "\003\000\002\033\003\000\002\033\003\000\002\034\003" +
    "\000\002\035\003\000\002\036\003\000\002\037\003\000" +
    "\002\040\003\000\002\041\003\000\002\042\003\000\002" +
    "\043\002\000\002\043\003\000\002\043\005\000\002\044" +
    "\003\000\002\044\003\000\002\045\003\000\002\045\003" +
    "\000\002\045\003\000\002\045\003\000\002\045\003\000" +
    "\002\045\003\000\002\045\003\000\002\045\003\000\002" +
    "\046\003\000\002\046\003\000\002\046\003\000\002\046" +
    "\003\000\002\046\003" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\u0136\000\074\002\uffd2\005\uffd2\007\uffd2\043\uffd2\044" +
    "\uffd2\045\uffd2\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2" +
    "\054\uffd2\057\uffd2\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071" +
    "\uffd2\072\uffd2\074\uffd2\075\006\076\uffd2\100\uffd2\102\uffd2" +
    "\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2\001\002\000" +
    "\004\002\u0138\001\002\000\072\002\000\005\023\007\021" +
    "\043\040\044\037\045\034\047\033\050\031\051\030\052" +
    "\027\053\026\054\017\057\015\061\014\062\013\064\012" +
    "\070\050\071\047\072\046\074\045\076\044\100\043\102" +
    "\042\103\041\105\035\114\020\116\016\123\024\001\002" +
    "\000\004\004\007\001\002\000\004\063\010\001\002\000" +
    "\072\002\uffd2\005\uffd2\007\uffd2\043\uffd2\044\uffd2\045\uffd2" +
    "\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057" +
    "\uffd2\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2" +
    "\074\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114" +
    "\uffd2\116\uffd2\123\uffd2\001\002\000\072\002\uffff\005\023" +
    "\007\021\043\040\044\037\045\034\047\033\050\031\051" +
    "\030\052\027\053\026\054\017\057\015\061\014\062\013" +
    "\064\012\070\050\071\047\072\046\074\045\076\044\100" +
    "\043\102\042\103\041\105\035\114\020\116\016\123\024" +
    "\001\002\000\040\005\023\013\072\016\070\056\067\057" +
    "\015\067\106\071\047\072\046\100\043\113\071\117\062" +
    "\120\073\121\060\122\066\123\065\001\002\000\024\043" +
    "\040\044\037\047\033\054\017\061\014\070\050\074\221" +
    "\105\035\115\u0127\001\002\000\004\123\uff82\001\002\000" +
    "\004\005\u011c\001\002\000\040\005\023\013\072\016\070" +
    "\056\067\057\015\067\106\071\047\072\046\100\043\113" +
    "\071\117\062\120\073\121\060\122\066\123\065\001\002" +
    "\000\004\123\uff87\001\002\000\004\007\u010a\001\002\000" +
    "\072\005\uffd2\007\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2" +
    "\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057" +
    "\uffd2\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2" +
    "\074\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114" +
    "\uffd2\116\uffd2\123\uffd2\001\002\000\074\002\uffec\005\uffec" +
    "\007\uffec\010\uffec\043\uffec\044\uffec\045\uffec\047\uffec\050" +
    "\uffec\051\uffec\052\uffec\053\uffec\054\uffec\057\uffec\061\uffec" +
    "\062\uffec\064\uffec\070\uffec\071\uffec\072\uffec\074\uffec\076" +
    "\uffec\100\uffec\102\uffec\103\uffec\105\uffec\114\uffec\116\uffec" +
    "\123\uffec\001\002\000\040\005\023\013\072\016\070\056" +
    "\067\057\015\067\106\071\047\072\046\100\043\113\071" +
    "\117\062\120\073\121\060\122\066\123\065\001\002\000" +
    "\026\005\157\012\375\015\122\031\120\032\117\033\125" +
    "\034\124\035\123\036\302\037\301\001\002\000\074\002" +
    "\ufff6\005\ufff6\007\ufff6\010\ufff6\043\ufff6\044\ufff6\045\ufff6" +
    "\047\ufff6\050\ufff6\051\ufff6\052\ufff6\053\ufff6\054\ufff6\057" +
    "\ufff6\061\ufff6\062\ufff6\064\ufff6\070\ufff6\071\ufff6\072\ufff6" +
    "\074\ufff6\076\ufff6\100\ufff6\102\ufff6\103\ufff6\105\ufff6\114" +
    "\ufff6\116\ufff6\123\ufff6\001\002\000\074\002\ufff8\005\ufff8" +
    "\007\ufff8\010\ufff8\043\ufff8\044\ufff8\045\ufff8\047\ufff8\050" +
    "\ufff8\051\ufff8\052\ufff8\053\ufff8\054\ufff8\057\ufff8\061\ufff8" +
    "\062\ufff8\064\ufff8\070\ufff8\071\ufff8\072\ufff8\074\ufff8\076" +
    "\ufff8\100\ufff8\102\ufff8\103\ufff8\105\ufff8\114\ufff8\116\ufff8" +
    "\123\ufff8\001\002\000\004\123\366\001\002\000\022\043" +
    "\040\044\037\047\033\054\017\061\014\070\050\074\221" +
    "\105\035\001\002\000\004\123\351\001\002\000\074\002" +
    "\uffd1\005\uffd1\007\uffd1\010\uffd1\043\uffd1\044\uffd1\045\uffd1" +
    "\047\uffd1\050\uffd1\051\uffd1\052\uffd1\053\uffd1\054\uffd1\057" +
    "\uffd1\061\uffd1\062\uffd1\064\uffd1\070\uffd1\071\uffd1\072\uffd1" +
    "\074\uffd1\076\uffd1\100\uffd1\102\uffd1\103\uffd1\105\uffd1\114" +
    "\uffd1\116\uffd1\123\uffd1\001\002\000\004\123\uff85\001\002" +
    "\000\074\002\ufff9\005\ufff9\007\ufff9\010\ufff9\043\ufff9\044" +
    "\ufff9\045\ufff9\047\ufff9\050\ufff9\051\ufff9\052\ufff9\053\ufff9" +
    "\054\ufff9\057\ufff9\061\ufff9\062\ufff9\064\ufff9\070\ufff9\071" +
    "\ufff9\072\ufff9\074\ufff9\076\ufff9\100\ufff9\102\ufff9\103\ufff9" +
    "\105\ufff9\114\ufff9\116\ufff9\123\ufff9\001\002\000\004\123" +
    "\uff84\001\002\000\074\002\ufff3\005\ufff3\007\ufff3\010\ufff3" +
    "\043\ufff3\044\ufff3\045\ufff3\047\ufff3\050\ufff3\051\ufff3\052" +
    "\ufff3\053\ufff3\054\ufff3\057\ufff3\061\ufff3\062\ufff3\064\ufff3" +
    "\070\ufff3\071\ufff3\072\ufff3\074\ufff3\076\ufff3\100\ufff3\102" +
    "\ufff3\103\ufff3\105\ufff3\114\ufff3\116\ufff3\123\ufff3\001\002" +
    "\000\004\123\uff86\001\002\000\004\123\uff83\001\002\000" +
    "\040\005\023\013\072\016\070\056\067\057\015\067\106" +
    "\071\047\072\046\100\043\113\071\117\062\120\073\121" +
    "\060\122\066\123\065\001\002\000\024\043\040\044\037" +
    "\047\033\054\017\061\014\070\050\074\221\105\035\123" +
    "\266\001\002\000\004\005\254\001\002\000\040\005\023" +
    "\013\072\016\070\056\067\057\015\067\106\071\047\072" +
    "\046\100\043\113\071\117\062\120\073\121\060\122\066" +
    "\123\065\001\002\000\004\123\244\001\002\000\004\005" +
    "\233\001\002\000\004\005\217\001\002\000\004\123\uff88" +
    "\001\002\000\074\002\ufff5\005\ufff5\007\ufff5\010\ufff5\043" +
    "\ufff5\044\ufff5\045\ufff5\047\ufff5\050\ufff5\051\ufff5\052\ufff5" +
    "\053\ufff5\054\ufff5\057\ufff5\061\ufff5\062\ufff5\064\ufff5\070" +
    "\ufff5\071\ufff5\072\ufff5\074\ufff5\076\ufff5\100\ufff5\102\ufff5" +
    "\103\ufff5\105\ufff5\114\ufff5\116\ufff5\123\ufff5\001\002\000" +
    "\074\002\ufff7\005\ufff7\007\ufff7\010\ufff7\043\ufff7\044\ufff7" +
    "\045\ufff7\047\ufff7\050\ufff7\051\ufff7\052\ufff7\053\ufff7\054" +
    "\ufff7\057\ufff7\061\ufff7\062\ufff7\064\ufff7\070\ufff7\071\ufff7" +
    "\072\ufff7\074\ufff7\076\ufff7\100\ufff7\102\ufff7\103\ufff7\105" +
    "\ufff7\114\ufff7\116\ufff7\123\ufff7\001\002\000\074\002\ufff2" +
    "\005\ufff2\007\ufff2\010\ufff2\043\ufff2\044\ufff2\045\ufff2\047" +
    "\ufff2\050\ufff2\051\ufff2\052\ufff2\053\ufff2\054\ufff2\057\ufff2" +
    "\061\ufff2\062\ufff2\064\ufff2\070\ufff2\071\ufff2\072\ufff2\074" +
    "\ufff2\076\ufff2\100\ufff2\102\ufff2\103\ufff2\105\ufff2\114\ufff2" +
    "\116\ufff2\123\ufff2\001\002\000\004\123\056\001\002\000" +
    "\074\002\ufff4\005\ufff4\007\ufff4\010\ufff4\043\ufff4\044\ufff4" +
    "\045\ufff4\047\ufff4\050\ufff4\051\ufff4\052\ufff4\053\ufff4\054" +
    "\ufff4\057\ufff4\061\ufff4\062\ufff4\064\ufff4\070\ufff4\071\ufff4" +
    "\072\ufff4\074\ufff4\076\ufff4\100\ufff4\102\ufff4\103\ufff4\105" +
    "\ufff4\114\ufff4\116\ufff4\123\ufff4\001\002\000\076\002\uffe4" +
    "\005\uffe4\007\uffe4\010\uffe4\015\057\043\uffe4\044\uffe4\045" +
    "\uffe4\047\uffe4\050\uffe4\051\uffe4\052\uffe4\053\uffe4\054\uffe4" +
    "\057\uffe4\061\uffe4\062\uffe4\064\uffe4\070\uffe4\071\uffe4\072" +
    "\uffe4\074\uffe4\076\uffe4\100\uffe4\102\uffe4\103\uffe4\105\uffe4" +
    "\114\uffe4\116\uffe4\123\uffe4\001\002\000\040\005\023\013" +
    "\072\016\070\056\067\057\015\067\106\071\047\072\046" +
    "\100\043\113\071\117\062\120\073\121\060\122\066\123" +
    "\065\001\002\000\150\002\uffd0\005\uffd0\006\uffd0\007\uffd0" +
    "\010\uffd0\011\uffd0\014\uffd0\015\uffd0\016\uffd0\017\uffd0\020" +
    "\uffd0\021\uffd0\022\uffd0\023\uffd0\024\uffd0\025\uffd0\026\uffd0" +
    "\027\uffd0\030\uffd0\031\uffd0\032\uffd0\033\uffd0\034\uffd0\035" +
    "\uffd0\040\uffd0\041\uffd0\043\uffd0\044\uffd0\045\uffd0\047\uffd0" +
    "\050\uffd0\051\uffd0\052\uffd0\053\uffd0\054\uffd0\057\uffd0\061" +
    "\uffd0\062\uffd0\064\uffd0\070\uffd0\071\uffd0\072\uffd0\074\uffd0" +
    "\076\uffd0\100\uffd0\102\uffd0\103\uffd0\105\uffd0\114\uffd0\116" +
    "\uffd0\123\uffd0\001\002\000\146\002\uffab\005\uffab\006\uffab" +
    "\007\uffab\010\uffab\011\uffab\014\uffab\015\uffab\016\uffab\020" +
    "\213\021\212\022\uffab\023\uffab\024\uffab\025\uffab\026\uffab" +
    "\027\uffab\030\uffab\031\uffab\032\uffab\033\uffab\034\uffab\035" +
    "\uffab\040\uffab\041\uffab\043\uffab\044\uffab\045\uffab\047\uffab" +
    "\050\uffab\051\uffab\052\uffab\053\uffab\054\uffab\057\uffab\061" +
    "\uffab\062\uffab\064\uffab\070\uffab\071\uffab\072\uffab\074\uffab" +
    "\076\uffab\100\uffab\102\uffab\103\uffab\105\uffab\114\uffab\116" +
    "\uffab\123\uffab\001\002\000\150\002\uffcb\005\uffcb\006\uffcb" +
    "\007\uffcb\010\uffcb\011\uffcb\014\uffcb\015\uffcb\016\uffcb\017" +
    "\uffcb\020\uffcb\021\uffcb\022\uffcb\023\uffcb\024\uffcb\025\uffcb" +
    "\026\uffcb\027\uffcb\030\uffcb\031\uffcb\032\uffcb\033\uffcb\034" +
    "\uffcb\035\uffcb\040\uffcb\041\uffcb\043\uffcb\044\uffcb\045\uffcb" +
    "\047\uffcb\050\uffcb\051\uffcb\052\uffcb\053\uffcb\054\uffcb\057" +
    "\uffcb\061\uffcb\062\uffcb\064\uffcb\070\uffcb\071\uffcb\072\uffcb" +
    "\074\uffcb\076\uffcb\100\uffcb\102\uffcb\103\uffcb\105\uffcb\114" +
    "\uffcb\116\uffcb\123\uffcb\001\002\000\142\002\uff8f\005\uff8f" +
    "\006\uff8f\007\uff8f\010\uff8f\011\uff8f\014\uff8f\015\uff8f\016" +
    "\207\022\210\023\uff8f\024\uff8f\025\uff8f\026\uff8f\027\uff8f" +
    "\030\uff8f\031\uff8f\032\uff8f\033\uff8f\034\uff8f\035\uff8f\040" +
    "\uff8f\041\uff8f\043\uff8f\044\uff8f\045\uff8f\047\uff8f\050\uff8f" +
    "\051\uff8f\052\uff8f\053\uff8f\054\uff8f\057\uff8f\061\uff8f\062" +
    "\uff8f\064\uff8f\070\uff8f\071\uff8f\072\uff8f\074\uff8f\076\uff8f" +
    "\100\uff8f\102\uff8f\103\uff8f\105\uff8f\114\uff8f\116\uff8f\123" +
    "\uff8f\001\002\000\136\002\uffa6\005\uffa6\006\uffa6\007\uffa6" +
    "\010\uffa6\011\uffa6\014\uffa6\015\uffa6\023\uffa6\024\uffa6\025" +
    "\uffa6\026\uffa6\027\uffa6\030\uffa6\031\uffa6\032\uffa6\033\uffa6" +
    "\034\uffa6\035\uffa6\040\uffa6\041\uffa6\043\uffa6\044\uffa6\045" +
    "\uffa6\047\uffa6\050\uffa6\051\uffa6\052\uffa6\053\uffa6\054\uffa6" +
    "\057\uffa6\061\uffa6\062\uffa6\064\uffa6\070\uffa6\071\uffa6\072" +
    "\uffa6\074\uffa6\076\uffa6\100\uffa6\102\uffa6\103\uffa6\105\uffa6" +
    "\114\uffa6\116\uffa6\123\uffa6\001\002\000\154\002\uffc8\005" +
    "\157\006\uffc8\007\uffc8\010\uffc8\011\uffc8\012\161\013\160" +
    "\014\uffc8\015\uffc8\016\uffc8\017\uffc8\020\uffc8\021\uffc8\022" +
    "\uffc8\023\uffc8\024\uffc8\025\uffc8\026\uffc8\027\uffc8\030\uffc8" +
    "\031\uffc8\032\uffc8\033\uffc8\034\uffc8\035\uffc8\040\uffc8\041" +
    "\uffc8\043\uffc8\044\uffc8\045\uffc8\047\uffc8\050\uffc8\051\uffc8" +
    "\052\uffc8\053\uffc8\054\uffc8\057\uffc8\061\uffc8\062\uffc8\064" +
    "\uffc8\070\uffc8\071\uffc8\072\uffc8\074\uffc8\076\uffc8\100\uffc8" +
    "\102\uffc8\103\uffc8\105\uffc8\114\uffc8\116\uffc8\123\uffc8\001" +
    "\002\000\150\002\uffcd\005\uffcd\006\uffcd\007\uffcd\010\uffcd" +
    "\011\uffcd\014\uffcd\015\uffcd\016\uffcd\017\uffcd\020\uffcd\021" +
    "\uffcd\022\uffcd\023\uffcd\024\uffcd\025\uffcd\026\uffcd\027\uffcd" +
    "\030\uffcd\031\uffcd\032\uffcd\033\uffcd\034\uffcd\035\uffcd\040" +
    "\uffcd\041\uffcd\043\uffcd\044\uffcd\045\uffcd\047\uffcd\050\uffcd" +
    "\051\uffcd\052\uffcd\053\uffcd\054\uffcd\057\uffcd\061\uffcd\062" +
    "\uffcd\064\uffcd\070\uffcd\071\uffcd\072\uffcd\074\uffcd\076\uffcd" +
    "\100\uffcd\102\uffcd\103\uffcd\105\uffcd\114\uffcd\116\uffcd\123" +
    "\uffcd\001\002\000\150\002\uffc9\005\uffc9\006\uffc9\007\uffc9" +
    "\010\uffc9\011\uffc9\014\uffc9\015\uffc9\016\uffc9\017\uffc9\020" +
    "\uffc9\021\uffc9\022\uffc9\023\uffc9\024\uffc9\025\uffc9\026\uffc9" +
    "\027\uffc9\030\uffc9\031\uffc9\032\uffc9\033\uffc9\034\uffc9\035" +
    "\uffc9\040\uffc9\041\uffc9\043\uffc9\044\uffc9\045\uffc9\047\uffc9" +
    "\050\uffc9\051\uffc9\052\uffc9\053\uffc9\054\uffc9\057\uffc9\061" +
    "\uffc9\062\uffc9\064\uffc9\070\uffc9\071\uffc9\072\uffc9\074\uffc9" +
    "\076\uffc9\100\uffc9\102\uffc9\103\uffc9\105\uffc9\114\uffc9\116" +
    "\uffc9\123\uffc9\001\002\000\006\121\155\122\156\001\002" +
    "\000\150\002\uffca\005\uffca\006\uffca\007\uffca\010\uffca\011" +
    "\uffca\014\uffca\015\uffca\016\uffca\017\uffca\020\uffca\021\uffca" +
    "\022\uffca\023\uffca\024\uffca\025\uffca\026\uffca\027\uffca\030" +
    "\uffca\031\uffca\032\uffca\033\uffca\034\uffca\035\uffca\040\uffca" +
    "\041\uffca\043\uffca\044\uffca\045\uffca\047\uffca\050\uffca\051" +
    "\uffca\052\uffca\053\uffca\054\uffca\057\uffca\061\uffca\062\uffca" +
    "\064\uffca\070\uffca\071\uffca\072\uffca\074\uffca\076\uffca\100" +
    "\uffca\102\uffca\103\uffca\105\uffca\114\uffca\116\uffca\123\uffca" +
    "\001\002\000\042\005\023\013\072\014\uffe8\016\070\056" +
    "\067\057\015\067\106\071\047\072\046\100\043\113\071" +
    "\117\062\120\073\121\060\122\066\123\065\001\002\000" +
    "\150\002\uffce\005\uffce\006\uffce\007\uffce\010\uffce\011\uffce" +
    "\014\uffce\015\uffce\016\uffce\017\uffce\020\uffce\021\uffce\022" +
    "\uffce\023\uffce\024\uffce\025\uffce\026\uffce\027\uffce\030\uffce" +
    "\031\uffce\032\uffce\033\uffce\034\uffce\035\uffce\040\uffce\041" +
    "\uffce\043\uffce\044\uffce\045\uffce\047\uffce\050\uffce\051\uffce" +
    "\052\uffce\053\uffce\054\uffce\057\uffce\061\uffce\062\uffce\064" +
    "\uffce\070\uffce\071\uffce\072\uffce\074\uffce\076\uffce\100\uffce" +
    "\102\uffce\103\uffce\105\uffce\114\uffce\116\uffce\123\uffce\001" +
    "\002\000\136\002\uffa3\005\uffa3\006\uffa3\007\uffa3\010\uffa3" +
    "\011\uffa3\014\uffa3\015\uffa3\023\141\024\140\025\137\026" +
    "\136\027\uffa3\030\uffa3\031\uffa3\032\uffa3\033\uffa3\034\uffa3" +
    "\035\uffa3\040\uffa3\041\uffa3\043\uffa3\044\uffa3\045\uffa3\047" +
    "\uffa3\050\uffa3\051\uffa3\052\uffa3\053\uffa3\054\uffa3\057\uffa3" +
    "\061\uffa3\062\uffa3\064\uffa3\070\uffa3\071\uffa3\072\uffa3\074" +
    "\uffa3\076\uffa3\100\uffa3\102\uffa3\103\uffa3\105\uffa3\114\uffa3" +
    "\116\uffa3\123\uffa3\001\002\000\126\002\uff90\005\uff90\006" +
    "\uff90\007\uff90\010\uff90\011\uff90\014\uff90\015\uff90\027\133" +
    "\030\134\031\uff90\032\uff90\033\uff90\034\uff90\035\uff90\040" +
    "\uff90\041\uff90\043\uff90\044\uff90\045\uff90\047\uff90\050\uff90" +
    "\051\uff90\052\uff90\053\uff90\054\uff90\057\uff90\061\uff90\062" +
    "\uff90\064\uff90\070\uff90\071\uff90\072\uff90\074\uff90\076\uff90" +
    "\100\uff90\102\uff90\103\uff90\105\uff90\114\uff90\116\uff90\123" +
    "\uff90\001\002\000\122\002\uff91\005\uff91\006\uff91\007\uff91" +
    "\010\uff91\011\uff91\014\uff91\015\uff91\031\uff91\032\uff91\033" +
    "\uff91\034\uff91\035\uff91\040\uff91\041\uff91\043\uff91\044\uff91" +
    "\045\uff91\047\uff91\050\uff91\051\uff91\052\uff91\053\uff91\054" +
    "\uff91\057\uff91\061\uff91\062\uff91\064\uff91\070\uff91\071\uff91" +
    "\072\uff91\074\uff91\076\uff91\100\uff91\102\uff91\103\uff91\105" +
    "\uff91\114\uff91\116\uff91\123\uff91\001\002\000\122\002\uff92" +
    "\005\uff92\006\uff92\007\uff92\010\uff92\011\uff92\014\uff92\015" +
    "\uff92\031\uff92\032\uff92\033\uff92\034\uff92\035\uff92\040\uff92" +
    "\041\uff92\043\uff92\044\uff92\045\uff92\047\uff92\050\uff92\051" +
    "\uff92\052\uff92\053\uff92\054\uff92\057\uff92\061\uff92\062\uff92" +
    "\064\uff92\070\uff92\071\uff92\072\uff92\074\uff92\076\uff92\100" +
    "\uff92\102\uff92\103\uff92\105\uff92\114\uff92\116\uff92\123\uff92" +
    "\001\002\000\076\002\uffe5\005\uffe5\007\uffe5\010\uffe5\011" +
    "\uffe5\043\uffe5\044\uffe5\045\uffe5\047\uffe5\050\uffe5\051\uffe5" +
    "\052\uffe5\053\uffe5\054\uffe5\057\uffe5\061\uffe5\062\uffe5\064" +
    "\uffe5\070\uffe5\071\uffe5\072\uffe5\074\uffe5\076\uffe5\100\uffe5" +
    "\102\uffe5\103\uffe5\105\uffe5\114\uffe5\116\uffe5\123\uffe5\001" +
    "\002\000\122\002\uffa1\005\uffa1\006\uffa1\007\uffa1\010\uffa1" +
    "\011\uffa1\014\uffa1\015\uffa1\031\uffa1\032\uffa1\033\uffa1\034" +
    "\uffa1\035\uffa1\040\uffa1\041\uffa1\043\uffa1\044\uffa1\045\uffa1" +
    "\047\uffa1\050\uffa1\051\uffa1\052\uffa1\053\uffa1\054\uffa1\057" +
    "\uffa1\061\uffa1\062\uffa1\064\uffa1\070\uffa1\071\uffa1\072\uffa1" +
    "\074\uffa1\076\uffa1\100\uffa1\102\uffa1\103\uffa1\105\uffa1\114" +
    "\uffa1\116\uffa1\123\uffa1\001\002\000\122\002\uff9f\005\uff9f" +
    "\006\uff9f\007\uff9f\010\uff9f\011\uff9f\014\uff9f\015\uff9f\031" +
    "\uff9f\032\uff9f\033\uff9f\034\uff9f\035\uff9f\040\131\041\uff9f" +
    "\043\uff9f\044\uff9f\045\uff9f\047\uff9f\050\uff9f\051\uff9f\052" +
    "\uff9f\053\uff9f\054\uff9f\057\uff9f\061\uff9f\062\uff9f\064\uff9f" +
    "\070\uff9f\071\uff9f\072\uff9f\074\uff9f\076\uff9f\100\uff9f\102" +
    "\uff9f\103\uff9f\105\uff9f\114\uff9f\116\uff9f\123\uff9f\001\002" +
    "\000\120\002\uff9d\005\uff9d\006\uff9d\007\uff9d\010\uff9d\011" +
    "\uff9d\014\uff9d\015\122\031\120\032\117\033\125\034\124" +
    "\035\123\041\121\043\uff9d\044\uff9d\045\uff9d\047\uff9d\050" +
    "\uff9d\051\uff9d\052\uff9d\053\uff9d\054\uff9d\057\uff9d\061\uff9d" +
    "\062\uff9d\064\uff9d\070\uff9d\071\uff9d\072\uff9d\074\uff9d\076" +
    "\uff9d\100\uff9d\102\uff9d\103\uff9d\105\uff9d\114\uff9d\116\uff9d" +
    "\123\uff9d\001\002\000\102\002\uff93\005\uff93\006\uff93\007" +
    "\uff93\010\uff93\011\uff93\014\uff93\043\uff93\044\uff93\045\uff93" +
    "\047\uff93\050\uff93\051\uff93\052\uff93\053\uff93\054\uff93\057" +
    "\uff93\061\uff93\062\uff93\064\uff93\070\uff93\071\uff93\072\uff93" +
    "\074\uff93\076\uff93\100\uff93\102\uff93\103\uff93\105\uff93\114" +
    "\uff93\116\uff93\123\uff93\001\002\000\102\002\uff94\005\uff94" +
    "\006\uff94\007\uff94\010\uff94\011\uff94\014\uff94\043\uff94\044" +
    "\uff94\045\uff94\047\uff94\050\uff94\051\uff94\052\uff94\053\uff94" +
    "\054\uff94\057\uff94\061\uff94\062\uff94\064\uff94\070\uff94\071" +
    "\uff94\072\uff94\074\uff94\076\uff94\100\uff94\102\uff94\103\uff94" +
    "\105\uff94\114\uff94\116\uff94\123\uff94\001\002\000\004\005" +
    "\115\001\002\000\150\002\uffc3\005\uffc3\006\uffc3\007\uffc3" +
    "\010\uffc3\011\uffc3\014\uffc3\015\uffc3\016\uffc3\017\uffc3\020" +
    "\uffc3\021\uffc3\022\uffc3\023\uffc3\024\uffc3\025\uffc3\026\uffc3" +
    "\027\uffc3\030\uffc3\031\uffc3\032\uffc3\033\uffc3\034\uffc3\035" +
    "\uffc3\040\uffc3\041\uffc3\043\uffc3\044\uffc3\045\uffc3\047\uffc3" +
    "\050\uffc3\051\uffc3\052\uffc3\053\uffc3\054\uffc3\057\uffc3\061" +
    "\uffc3\062\uffc3\064\uffc3\070\uffc3\071\uffc3\072\uffc3\074\uffc3" +
    "\076\uffc3\100\uffc3\102\uffc3\103\uffc3\105\uffc3\114\uffc3\116" +
    "\uffc3\123\uffc3\001\002\000\150\002\uff8e\005\uff8e\006\uff8e" +
    "\007\uff8e\010\uff8e\011\uff8e\014\uff8e\015\uff8e\016\uff8e\017" +
    "\uff8e\020\uff8e\021\uff8e\022\uff8e\023\uff8e\024\uff8e\025\uff8e" +
    "\026\uff8e\027\uff8e\030\uff8e\031\uff8e\032\uff8e\033\uff8e\034" +
    "\uff8e\035\uff8e\040\uff8e\041\uff8e\043\uff8e\044\uff8e\045\uff8e" +
    "\047\uff8e\050\uff8e\051\uff8e\052\uff8e\053\uff8e\054\uff8e\057" +
    "\uff8e\061\uff8e\062\uff8e\064\uff8e\070\uff8e\071\uff8e\072\uff8e" +
    "\074\uff8e\076\uff8e\100\uff8e\102\uff8e\103\uff8e\105\uff8e\114" +
    "\uff8e\116\uff8e\123\uff8e\001\002\000\150\002\uffb1\005\uffb1" +
    "\006\uffb1\007\uffb1\010\uffb1\011\uffb1\014\uffb1\015\uffb1\016" +
    "\uffb1\017\uffb1\020\uffb1\021\uffb1\022\uffb1\023\uffb1\024\uffb1" +
    "\025\uffb1\026\uffb1\027\uffb1\030\uffb1\031\uffb1\032\uffb1\033" +
    "\uffb1\034\uffb1\035\uffb1\040\uffb1\041\uffb1\043\uffb1\044\uffb1" +
    "\045\uffb1\047\uffb1\050\uffb1\051\uffb1\052\uffb1\053\uffb1\054" +
    "\uffb1\057\uffb1\061\uffb1\062\uffb1\064\uffb1\070\uffb1\071\uffb1" +
    "\072\uffb1\074\uffb1\076\uffb1\100\uffb1\102\uffb1\103\uffb1\105" +
    "\uffb1\114\uffb1\116\uffb1\123\uffb1\001\002\000\150\002\uffae" +
    "\005\uffae\006\uffae\007\uffae\010\uffae\011\uffae\014\uffae\015" +
    "\uffae\016\uffae\017\113\020\uffae\021\uffae\022\uffae\023\uffae" +
    "\024\uffae\025\uffae\026\uffae\027\uffae\030\uffae\031\uffae\032" +
    "\uffae\033\uffae\034\uffae\035\uffae\040\uffae\041\uffae\043\uffae" +
    "\044\uffae\045\uffae\047\uffae\050\uffae\051\uffae\052\uffae\053" +
    "\uffae\054\uffae\057\uffae\061\uffae\062\uffae\064\uffae\070\uffae" +
    "\071\uffae\072\uffae\074\uffae\076\uffae\100\uffae\102\uffae\103" +
    "\uffae\105\uffae\114\uffae\116\uffae\123\uffae\001\002\000\040" +
    "\005\023\013\072\016\070\056\067\057\015\067\106\071" +
    "\047\072\046\100\043\113\071\117\062\120\073\121\060" +
    "\122\066\123\065\001\002\000\150\002\uffb2\005\uffb2\006" +
    "\uffb2\007\uffb2\010\uffb2\011\uffb2\014\uffb2\015\uffb2\016\uffb2" +
    "\017\uffb2\020\uffb2\021\uffb2\022\uffb2\023\uffb2\024\uffb2\025" +
    "\uffb2\026\uffb2\027\uffb2\030\uffb2\031\uffb2\032\uffb2\033\uffb2" +
    "\034\uffb2\035\uffb2\040\uffb2\041\uffb2\043\uffb2\044\uffb2\045" +
    "\uffb2\047\uffb2\050\uffb2\051\uffb2\052\uffb2\053\uffb2\054\uffb2" +
    "\057\uffb2\061\uffb2\062\uffb2\064\uffb2\070\uffb2\071\uffb2\072" +
    "\uffb2\074\uffb2\076\uffb2\100\uffb2\102\uffb2\103\uffb2\105\uffb2" +
    "\114\uffb2\116\uffb2\123\uffb2\001\002\000\004\006\116\001" +
    "\002\000\150\002\uffc4\005\uffc4\006\uffc4\007\uffc4\010\uffc4" +
    "\011\uffc4\014\uffc4\015\uffc4\016\uffc4\017\uffc4\020\uffc4\021" +
    "\uffc4\022\uffc4\023\uffc4\024\uffc4\025\uffc4\026\uffc4\027\uffc4" +
    "\030\uffc4\031\uffc4\032\uffc4\033\uffc4\034\uffc4\035\uffc4\040" +
    "\uffc4\041\uffc4\043\uffc4\044\uffc4\045\uffc4\047\uffc4\050\uffc4" +
    "\051\uffc4\052\uffc4\053\uffc4\054\uffc4\057\uffc4\061\uffc4\062" +
    "\uffc4\064\uffc4\070\uffc4\071\uffc4\072\uffc4\074\uffc4\076\uffc4" +
    "\100\uffc4\102\uffc4\103\uffc4\105\uffc4\114\uffc4\116\uffc4\123" +
    "\uffc4\001\002\000\040\005\uff9a\013\uff9a\016\uff9a\056\uff9a" +
    "\057\uff9a\067\uff9a\071\uff9a\072\uff9a\100\uff9a\113\uff9a\117" +
    "\uff9a\120\uff9a\121\uff9a\122\uff9a\123\uff9a\001\002\000\040" +
    "\005\uff9b\013\uff9b\016\uff9b\056\uff9b\057\uff9b\067\uff9b\071" +
    "\uff9b\072\uff9b\100\uff9b\113\uff9b\117\uff9b\120\uff9b\121\uff9b" +
    "\122\uff9b\123\uff9b\001\002\000\040\005\023\013\072\016" +
    "\070\056\067\057\015\067\106\071\047\072\046\100\043" +
    "\113\071\117\062\120\073\121\060\122\066\123\065\001" +
    "\002\000\040\005\uff9c\013\uff9c\016\uff9c\056\uff9c\057\uff9c" +
    "\067\uff9c\071\uff9c\072\uff9c\100\uff9c\113\uff9c\117\uff9c\120" +
    "\uff9c\121\uff9c\122\uff9c\123\uff9c\001\002\000\040\005\uff97" +
    "\013\uff97\016\uff97\056\uff97\057\uff97\067\uff97\071\uff97\072" +
    "\uff97\100\uff97\113\uff97\117\uff97\120\uff97\121\uff97\122\uff97" +
    "\123\uff97\001\002\000\040\005\uff98\013\uff98\016\uff98\056" +
    "\uff98\057\uff98\067\uff98\071\uff98\072\uff98\100\uff98\113\uff98" +
    "\117\uff98\120\uff98\121\uff98\122\uff98\123\uff98\001\002\000" +
    "\040\005\uff99\013\uff99\016\uff99\056\uff99\057\uff99\067\uff99" +
    "\071\uff99\072\uff99\100\uff99\113\uff99\117\uff99\120\uff99\121" +
    "\uff99\122\uff99\123\uff99\001\002\000\040\005\023\013\072" +
    "\016\070\056\067\057\015\067\106\071\047\072\046\100" +
    "\043\113\071\117\062\120\073\121\060\122\066\123\065" +
    "\001\002\000\102\002\uff9e\005\uff9e\006\uff9e\007\uff9e\010" +
    "\uff9e\011\uff9e\014\uff9e\043\uff9e\044\uff9e\045\uff9e\047\uff9e" +
    "\050\uff9e\051\uff9e\052\uff9e\053\uff9e\054\uff9e\057\uff9e\061" +
    "\uff9e\062\uff9e\064\uff9e\070\uff9e\071\uff9e\072\uff9e\074\uff9e" +
    "\076\uff9e\100\uff9e\102\uff9e\103\uff9e\105\uff9e\114\uff9e\116" +
    "\uff9e\123\uff9e\001\002\000\122\002\uffa0\005\uffa0\006\uffa0" +
    "\007\uffa0\010\uffa0\011\uffa0\014\uffa0\015\uffa0\031\uffa0\032" +
    "\uffa0\033\uffa0\034\uffa0\035\uffa0\040\131\041\uffa0\043\uffa0" +
    "\044\uffa0\045\uffa0\047\uffa0\050\uffa0\051\uffa0\052\uffa0\053" +
    "\uffa0\054\uffa0\057\uffa0\061\uffa0\062\uffa0\064\uffa0\070\uffa0" +
    "\071\uffa0\072\uffa0\074\uffa0\076\uffa0\100\uffa0\102\uffa0\103" +
    "\uffa0\105\uffa0\114\uffa0\116\uffa0\123\uffa0\001\002\000\040" +
    "\005\023\013\072\016\070\056\067\057\015\067\106\071" +
    "\047\072\046\100\043\113\071\117\062\120\073\121\060" +
    "\122\066\123\065\001\002\000\122\002\uffa2\005\uffa2\006" +
    "\uffa2\007\uffa2\010\uffa2\011\uffa2\014\uffa2\015\uffa2\031\uffa2" +
    "\032\uffa2\033\uffa2\034\uffa2\035\uffa2\040\uffa2\041\uffa2\043" +
    "\uffa2\044\uffa2\045\uffa2\047\uffa2\050\uffa2\051\uffa2\052\uffa2" +
    "\053\uffa2\054\uffa2\057\uffa2\061\uffa2\062\uffa2\064\uffa2\070" +
    "\uffa2\071\uffa2\072\uffa2\074\uffa2\076\uffa2\100\uffa2\102\uffa2" +
    "\103\uffa2\105\uffa2\114\uffa2\116\uffa2\123\uffa2\001\002\000" +
    "\040\005\023\013\072\016\070\056\067\057\015\067\106" +
    "\071\047\072\046\100\043\113\071\117\062\120\073\121" +
    "\060\122\066\123\065\001\002\000\040\005\023\013\072" +
    "\016\070\056\067\057\015\067\106\071\047\072\046\100" +
    "\043\113\071\117\062\120\073\121\060\122\066\123\065" +
    "\001\002\000\136\002\uffa4\005\uffa4\006\uffa4\007\uffa4\010" +
    "\uffa4\011\uffa4\014\uffa4\015\uffa4\023\141\024\140\025\137" +
    "\026\136\027\uffa4\030\uffa4\031\uffa4\032\uffa4\033\uffa4\034" +
    "\uffa4\035\uffa4\040\uffa4\041\uffa4\043\uffa4\044\uffa4\045\uffa4" +
    "\047\uffa4\050\uffa4\051\uffa4\052\uffa4\053\uffa4\054\uffa4\057" +
    "\uffa4\061\uffa4\062\uffa4\064\uffa4\070\uffa4\071\uffa4\072\uffa4" +
    "\074\uffa4\076\uffa4\100\uffa4\102\uffa4\103\uffa4\105\uffa4\114" +
    "\uffa4\116\uffa4\123\uffa4\001\002\000\040\005\023\013\072" +
    "\016\070\056\067\057\015\067\106\071\047\072\046\100" +
    "\043\113\071\117\062\120\073\121\060\122\066\123\065" +
    "\001\002\000\040\005\023\013\072\016\070\056\067\057" +
    "\015\067\106\071\047\072\046\100\043\113\071\117\062" +
    "\120\073\121\060\122\066\123\065\001\002\000\040\005" +
    "\023\013\072\016\070\056\067\057\015\067\106\071\047" +
    "\072\046\100\043\113\071\117\062\120\073\121\060\122" +
    "\066\123\065\001\002\000\040\005\023\013\072\016\070" +
    "\056\067\057\015\067\106\071\047\072\046\100\043\113" +
    "\071\117\062\120\073\121\060\122\066\123\065\001\002" +
    "\000\136\002\uffaa\005\uffaa\006\uffaa\007\uffaa\010\uffaa\011" +
    "\uffaa\014\uffaa\015\uffaa\023\uffaa\024\uffaa\025\uffaa\026\uffaa" +
    "\027\uffaa\030\uffaa\031\uffaa\032\uffaa\033\uffaa\034\uffaa\035" +
    "\uffaa\040\uffaa\041\uffaa\043\uffaa\044\uffaa\045\uffaa\047\uffaa" +
    "\050\uffaa\051\uffaa\052\uffaa\053\uffaa\054\uffaa\057\uffaa\061" +
    "\uffaa\062\uffaa\064\uffaa\070\uffaa\071\uffaa\072\uffaa\074\uffaa" +
    "\076\uffaa\100\uffaa\102\uffaa\103\uffaa\105\uffaa\114\uffaa\116" +
    "\uffaa\123\uffaa\001\002\000\136\002\uffa9\005\uffa9\006\uffa9" +
    "\007\uffa9\010\uffa9\011\uffa9\014\uffa9\015\uffa9\023\uffa9\024" +
    "\uffa9\025\uffa9\026\uffa9\027\uffa9\030\uffa9\031\uffa9\032\uffa9" +
    "\033\uffa9\034\uffa9\035\uffa9\040\uffa9\041\uffa9\043\uffa9\044" +
    "\uffa9\045\uffa9\047\uffa9\050\uffa9\051\uffa9\052\uffa9\053\uffa9" +
    "\054\uffa9\057\uffa9\061\uffa9\062\uffa9\064\uffa9\070\uffa9\071" +
    "\uffa9\072\uffa9\074\uffa9\076\uffa9\100\uffa9\102\uffa9\103\uffa9" +
    "\105\uffa9\114\uffa9\116\uffa9\123\uffa9\001\002\000\136\002" +
    "\uffa8\005\uffa8\006\uffa8\007\uffa8\010\uffa8\011\uffa8\014\uffa8" +
    "\015\uffa8\023\uffa8\024\uffa8\025\uffa8\026\uffa8\027\uffa8\030" +
    "\uffa8\031\uffa8\032\uffa8\033\uffa8\034\uffa8\035\uffa8\040\uffa8" +
    "\041\uffa8\043\uffa8\044\uffa8\045\uffa8\047\uffa8\050\uffa8\051" +
    "\uffa8\052\uffa8\053\uffa8\054\uffa8\057\uffa8\061\uffa8\062\uffa8" +
    "\064\uffa8\070\uffa8\071\uffa8\072\uffa8\074\uffa8\076\uffa8\100" +
    "\uffa8\102\uffa8\103\uffa8\105\uffa8\114\uffa8\116\uffa8\123\uffa8" +
    "\001\002\000\136\002\uffa7\005\uffa7\006\uffa7\007\uffa7\010" +
    "\uffa7\011\uffa7\014\uffa7\015\uffa7\023\uffa7\024\uffa7\025\uffa7" +
    "\026\uffa7\027\uffa7\030\uffa7\031\uffa7\032\uffa7\033\uffa7\034" +
    "\uffa7\035\uffa7\040\uffa7\041\uffa7\043\uffa7\044\uffa7\045\uffa7" +
    "\047\uffa7\050\uffa7\051\uffa7\052\uffa7\053\uffa7\054\uffa7\057" +
    "\uffa7\061\uffa7\062\uffa7\064\uffa7\070\uffa7\071\uffa7\072\uffa7" +
    "\074\uffa7\076\uffa7\100\uffa7\102\uffa7\103\uffa7\105\uffa7\114" +
    "\uffa7\116\uffa7\123\uffa7\001\002\000\136\002\uffa5\005\uffa5" +
    "\006\uffa5\007\uffa5\010\uffa5\011\uffa5\014\uffa5\015\uffa5\023" +
    "\141\024\140\025\137\026\136\027\uffa5\030\uffa5\031\uffa5" +
    "\032\uffa5\033\uffa5\034\uffa5\035\uffa5\040\uffa5\041\uffa5\043" +
    "\uffa5\044\uffa5\045\uffa5\047\uffa5\050\uffa5\051\uffa5\052\uffa5" +
    "\053\uffa5\054\uffa5\057\uffa5\061\uffa5\062\uffa5\064\uffa5\070" +
    "\uffa5\071\uffa5\072\uffa5\074\uffa5\076\uffa5\100\uffa5\102\uffa5" +
    "\103\uffa5\105\uffa5\114\uffa5\116\uffa5\123\uffa5\001\002\000" +
    "\006\011\153\014\uffe7\001\002\000\004\014\152\001\002" +
    "\000\006\011\uffe9\014\uffe9\001\002\000\150\002\uffc6\005" +
    "\uffc6\006\uffc6\007\uffc6\010\uffc6\011\uffc6\014\uffc6\015\uffc6" +
    "\016\uffc6\017\uffc6\020\uffc6\021\uffc6\022\uffc6\023\uffc6\024" +
    "\uffc6\025\uffc6\026\uffc6\027\uffc6\030\uffc6\031\uffc6\032\uffc6" +
    "\033\uffc6\034\uffc6\035\uffc6\040\uffc6\041\uffc6\043\uffc6\044" +
    "\uffc6\045\uffc6\047\uffc6\050\uffc6\051\uffc6\052\uffc6\053\uffc6" +
    "\054\uffc6\057\uffc6\061\uffc6\062\uffc6\064\uffc6\070\uffc6\071" +
    "\uffc6\072\uffc6\074\uffc6\076\uffc6\100\uffc6\102\uffc6\103\uffc6" +
    "\105\uffc6\114\uffc6\116\uffc6\123\uffc6\001\002\000\042\005" +
    "\023\013\072\014\uffe8\016\070\056\067\057\015\067\106" +
    "\071\047\072\046\100\043\113\071\117\062\120\073\121" +
    "\060\122\066\123\065\001\002\000\004\014\uffe6\001\002" +
    "\000\150\002\uffcf\005\uffcf\006\uffcf\007\uffcf\010\uffcf\011" +
    "\uffcf\014\uffcf\015\uffcf\016\uffcf\017\uffcf\020\uffcf\021\uffcf" +
    "\022\uffcf\023\uffcf\024\uffcf\025\uffcf\026\uffcf\027\uffcf\030" +
    "\uffcf\031\uffcf\032\uffcf\033\uffcf\034\uffcf\035\uffcf\040\uffcf" +
    "\041\uffcf\043\uffcf\044\uffcf\045\uffcf\047\uffcf\050\uffcf\051" +
    "\uffcf\052\uffcf\053\uffcf\054\uffcf\057\uffcf\061\uffcf\062\uffcf" +
    "\064\uffcf\070\uffcf\071\uffcf\072\uffcf\074\uffcf\076\uffcf\100" +
    "\uffcf\102\uffcf\103\uffcf\105\uffcf\114\uffcf\116\uffcf\123\uffcf" +
    "\001\002\000\150\002\uffcc\005\uffcc\006\uffcc\007\uffcc\010" +
    "\uffcc\011\uffcc\014\uffcc\015\uffcc\016\uffcc\017\uffcc\020\uffcc" +
    "\021\uffcc\022\uffcc\023\uffcc\024\uffcc\025\uffcc\026\uffcc\027" +
    "\uffcc\030\uffcc\031\uffcc\032\uffcc\033\uffcc\034\uffcc\035\uffcc" +
    "\040\uffcc\041\uffcc\043\uffcc\044\uffcc\045\uffcc\047\uffcc\050" +
    "\uffcc\051\uffcc\052\uffcc\053\uffcc\054\uffcc\057\uffcc\061\uffcc" +
    "\062\uffcc\064\uffcc\070\uffcc\071\uffcc\072\uffcc\074\uffcc\076" +
    "\uffcc\100\uffcc\102\uffcc\103\uffcc\105\uffcc\114\uffcc\116\uffcc" +
    "\123\uffcc\001\002\000\042\005\023\006\uff8d\013\072\016" +
    "\070\056\067\057\015\067\106\071\047\072\046\100\043" +
    "\113\071\117\062\120\073\121\060\122\066\123\065\001" +
    "\002\000\040\005\023\013\072\016\070\056\067\057\015" +
    "\067\106\071\047\072\046\100\043\113\071\117\062\120" +
    "\073\121\060\122\066\123\065\001\002\000\020\104\171" +
    "\106\167\107\166\110\165\111\164\112\163\123\170\001" +
    "\002\000\150\002\uffbf\005\uffbf\006\uffbf\007\uffbf\010\uffbf" +
    "\011\uffbf\014\uffbf\015\uffbf\016\uffbf\017\uffbf\020\uffbf\021" +
    "\uffbf\022\uffbf\023\uffbf\024\uffbf\025\uffbf\026\uffbf\027\uffbf" +
    "\030\uffbf\031\uffbf\032\uffbf\033\uffbf\034\uffbf\035\uffbf\040" +
    "\uffbf\041\uffbf\043\uffbf\044\uffbf\045\uffbf\047\uffbf\050\uffbf" +
    "\051\uffbf\052\uffbf\053\uffbf\054\uffbf\057\uffbf\061\uffbf\062" +
    "\uffbf\064\uffbf\070\uffbf\071\uffbf\072\uffbf\074\uffbf\076\uffbf" +
    "\100\uffbf\102\uffbf\103\uffbf\105\uffbf\114\uffbf\116\uffbf\123" +
    "\uffbf\001\002\000\150\002\uff7c\005\uff7c\006\uff7c\007\uff7c" +
    "\010\uff7c\011\uff7c\014\uff7c\015\uff7c\016\uff7c\017\uff7c\020" +
    "\uff7c\021\uff7c\022\uff7c\023\uff7c\024\uff7c\025\uff7c\026\uff7c" +
    "\027\uff7c\030\uff7c\031\uff7c\032\uff7c\033\uff7c\034\uff7c\035" +
    "\uff7c\040\uff7c\041\uff7c\043\uff7c\044\uff7c\045\uff7c\047\uff7c" +
    "\050\uff7c\051\uff7c\052\uff7c\053\uff7c\054\uff7c\057\uff7c\061" +
    "\uff7c\062\uff7c\064\uff7c\070\uff7c\071\uff7c\072\uff7c\074\uff7c" +
    "\076\uff7c\100\uff7c\102\uff7c\103\uff7c\105\uff7c\114\uff7c\116" +
    "\uff7c\123\uff7c\001\002\000\150\002\uff80\005\uff80\006\uff80" +
    "\007\uff80\010\uff80\011\uff80\014\uff80\015\uff80\016\uff80\017" +
    "\uff80\020\uff80\021\uff80\022\uff80\023\uff80\024\uff80\025\uff80" +
    "\026\uff80\027\uff80\030\uff80\031\uff80\032\uff80\033\uff80\034" +
    "\uff80\035\uff80\040\uff80\041\uff80\043\uff80\044\uff80\045\uff80" +
    "\047\uff80\050\uff80\051\uff80\052\uff80\053\uff80\054\uff80\057" +
    "\uff80\061\uff80\062\uff80\064\uff80\070\uff80\071\uff80\072\uff80" +
    "\074\uff80\076\uff80\100\uff80\102\uff80\103\uff80\105\uff80\114" +
    "\uff80\116\uff80\123\uff80\001\002\000\150\002\uff7f\005\uff7f" +
    "\006\uff7f\007\uff7f\010\uff7f\011\uff7f\014\uff7f\015\uff7f\016" +
    "\uff7f\017\uff7f\020\uff7f\021\uff7f\022\uff7f\023\uff7f\024\uff7f" +
    "\025\uff7f\026\uff7f\027\uff7f\030\uff7f\031\uff7f\032\uff7f\033" +
    "\uff7f\034\uff7f\035\uff7f\040\uff7f\041\uff7f\043\uff7f\044\uff7f" +
    "\045\uff7f\047\uff7f\050\uff7f\051\uff7f\052\uff7f\053\uff7f\054" +
    "\uff7f\057\uff7f\061\uff7f\062\uff7f\064\uff7f\070\uff7f\071\uff7f" +
    "\072\uff7f\074\uff7f\076\uff7f\100\uff7f\102\uff7f\103\uff7f\105" +
    "\uff7f\114\uff7f\116\uff7f\123\uff7f\001\002\000\150\002\uff7d" +
    "\005\uff7d\006\uff7d\007\uff7d\010\uff7d\011\uff7d\014\uff7d\015" +
    "\uff7d\016\uff7d\017\uff7d\020\uff7d\021\uff7d\022\uff7d\023\uff7d" +
    "\024\uff7d\025\uff7d\026\uff7d\027\uff7d\030\uff7d\031\uff7d\032" +
    "\uff7d\033\uff7d\034\uff7d\035\uff7d\040\uff7d\041\uff7d\043\uff7d" +
    "\044\uff7d\045\uff7d\047\uff7d\050\uff7d\051\uff7d\052\uff7d\053" +
    "\uff7d\054\uff7d\057\uff7d\061\uff7d\062\uff7d\064\uff7d\070\uff7d" +
    "\071\uff7d\072\uff7d\074\uff7d\076\uff7d\100\uff7d\102\uff7d\103" +
    "\uff7d\105\uff7d\114\uff7d\116\uff7d\123\uff7d\001\002\000\150" +
    "\002\uff7e\005\uff7e\006\uff7e\007\uff7e\010\uff7e\011\uff7e\014" +
    "\uff7e\015\uff7e\016\uff7e\017\uff7e\020\uff7e\021\uff7e\022\uff7e" +
    "\023\uff7e\024\uff7e\025\uff7e\026\uff7e\027\uff7e\030\uff7e\031" +
    "\uff7e\032\uff7e\033\uff7e\034\uff7e\035\uff7e\040\uff7e\041\uff7e" +
    "\043\uff7e\044\uff7e\045\uff7e\047\uff7e\050\uff7e\051\uff7e\052" +
    "\uff7e\053\uff7e\054\uff7e\057\uff7e\061\uff7e\062\uff7e\064\uff7e" +
    "\070\uff7e\071\uff7e\072\uff7e\074\uff7e\076\uff7e\100\uff7e\102" +
    "\uff7e\103\uff7e\105\uff7e\114\uff7e\116\uff7e\123\uff7e\001\002" +
    "\000\152\002\uffb7\005\172\006\uffb7\007\uffb7\010\uffb7\011" +
    "\uffb7\013\173\014\uffb7\015\uffb7\016\uffb7\017\uffb7\020\uffb7" +
    "\021\uffb7\022\uffb7\023\uffb7\024\uffb7\025\uffb7\026\uffb7\027" +
    "\uffb7\030\uffb7\031\uffb7\032\uffb7\033\uffb7\034\uffb7\035\uffb7" +
    "\040\uffb7\041\uffb7\043\uffb7\044\uffb7\045\uffb7\047\uffb7\050" +
    "\uffb7\051\uffb7\052\uffb7\053\uffb7\054\uffb7\057\uffb7\061\uffb7" +
    "\062\uffb7\064\uffb7\070\uffb7\071\uffb7\072\uffb7\074\uffb7\076" +
    "\uffb7\100\uffb7\102\uffb7\103\uffb7\105\uffb7\114\uffb7\116\uffb7" +
    "\123\uffb7\001\002\000\150\002\uffc5\005\uffc5\006\uffc5\007" +
    "\uffc5\010\uffc5\011\uffc5\014\uffc5\015\uffc5\016\uffc5\017\uffc5" +
    "\020\uffc5\021\uffc5\022\uffc5\023\uffc5\024\uffc5\025\uffc5\026" +
    "\uffc5\027\uffc5\030\uffc5\031\uffc5\032\uffc5\033\uffc5\034\uffc5" +
    "\035\uffc5\040\uffc5\041\uffc5\043\uffc5\044\uffc5\045\uffc5\047" +
    "\uffc5\050\uffc5\051\uffc5\052\uffc5\053\uffc5\054\uffc5\057\uffc5" +
    "\061\uffc5\062\uffc5\064\uffc5\070\uffc5\071\uffc5\072\uffc5\074" +
    "\uffc5\076\uffc5\100\uffc5\102\uffc5\103\uffc5\105\uffc5\114\uffc5" +
    "\116\uffc5\123\uffc5\001\002\000\042\005\023\006\uff8d\013" +
    "\072\016\070\056\067\057\015\067\106\071\047\072\046" +
    "\100\043\113\071\117\062\120\073\121\060\122\066\123" +
    "\065\001\002\000\040\005\023\013\072\016\070\056\067" +
    "\057\015\067\106\071\047\072\046\100\043\113\071\117" +
    "\062\120\073\121\060\122\066\123\065\001\002\000\004" +
    "\014\175\001\002\000\150\002\uffb6\005\uffb6\006\uffb6\007" +
    "\uffb6\010\uffb6\011\uffb6\014\uffb6\015\uffb6\016\uffb6\017\uffb6" +
    "\020\uffb6\021\uffb6\022\uffb6\023\uffb6\024\uffb6\025\uffb6\026" +
    "\uffb6\027\uffb6\030\uffb6\031\uffb6\032\uffb6\033\uffb6\034\uffb6" +
    "\035\uffb6\040\uffb6\041\uffb6\043\uffb6\044\uffb6\045\uffb6\047" +
    "\uffb6\050\uffb6\051\uffb6\052\uffb6\053\uffb6\054\uffb6\057\uffb6" +
    "\061\uffb6\062\uffb6\064\uffb6\070\uffb6\071\uffb6\072\uffb6\074" +
    "\uffb6\076\uffb6\100\uffb6\102\uffb6\103\uffb6\105\uffb6\114\uffb6" +
    "\116\uffb6\123\uffb6\001\002\000\004\006\202\001\002\000" +
    "\006\006\uff8c\011\200\001\002\000\042\005\023\006\uff8d" +
    "\013\072\016\070\056\067\057\015\067\106\071\047\072" +
    "\046\100\043\113\071\117\062\120\073\121\060\122\066" +
    "\123\065\001\002\000\004\006\uff8b\001\002\000\150\002" +
    "\uffb4\005\uffb4\006\uffb4\007\uffb4\010\uffb4\011\uffb4\014\uffb4" +
    "\015\uffb4\016\uffb4\017\uffb4\020\uffb4\021\uffb4\022\uffb4\023" +
    "\uffb4\024\uffb4\025\uffb4\026\uffb4\027\uffb4\030\uffb4\031\uffb4" +
    "\032\uffb4\033\uffb4\034\uffb4\035\uffb4\040\uffb4\041\uffb4\043" +
    "\uffb4\044\uffb4\045\uffb4\047\uffb4\050\uffb4\051\uffb4\052\uffb4" +
    "\053\uffb4\054\uffb4\057\uffb4\061\uffb4\062\uffb4\064\uffb4\070" +
    "\uffb4\071\uffb4\072\uffb4\074\uffb4\076\uffb4\100\uffb4\102\uffb4" +
    "\103\uffb4\105\uffb4\114\uffb4\116\uffb4\123\uffb4\001\002\000" +
    "\004\014\204\001\002\000\150\002\uffc7\005\uffc7\006\uffc7" +
    "\007\uffc7\010\uffc7\011\uffc7\014\uffc7\015\uffc7\016\uffc7\017" +
    "\uffc7\020\uffc7\021\uffc7\022\uffc7\023\uffc7\024\uffc7\025\uffc7" +
    "\026\uffc7\027\uffc7\030\uffc7\031\uffc7\032\uffc7\033\uffc7\034" +
    "\uffc7\035\uffc7\040\uffc7\041\uffc7\043\uffc7\044\uffc7\045\uffc7" +
    "\047\uffc7\050\uffc7\051\uffc7\052\uffc7\053\uffc7\054\uffc7\057" +
    "\uffc7\061\uffc7\062\uffc7\064\uffc7\070\uffc7\071\uffc7\072\uffc7" +
    "\074\uffc7\076\uffc7\100\uffc7\102\uffc7\103\uffc7\105\uffc7\114" +
    "\uffc7\116\uffc7\123\uffc7\001\002\000\004\006\206\001\002" +
    "\000\150\002\uffb5\005\uffb5\006\uffb5\007\uffb5\010\uffb5\011" +
    "\uffb5\014\uffb5\015\uffb5\016\uffb5\017\uffb5\020\uffb5\021\uffb5" +
    "\022\uffb5\023\uffb5\024\uffb5\025\uffb5\026\uffb5\027\uffb5\030" +
    "\uffb5\031\uffb5\032\uffb5\033\uffb5\034\uffb5\035\uffb5\040\uffb5" +
    "\041\uffb5\043\uffb5\044\uffb5\045\uffb5\047\uffb5\050\uffb5\051" +
    "\uffb5\052\uffb5\053\uffb5\054\uffb5\057\uffb5\061\uffb5\062\uffb5" +
    "\064\uffb5\070\uffb5\071\uffb5\072\uffb5\074\uffb5\076\uffb5\100" +
    "\uffb5\102\uffb5\103\uffb5\105\uffb5\114\uffb5\116\uffb5\123\uffb5" +
    "\001\002\000\040\005\023\013\072\016\070\056\067\057" +
    "\015\067\106\071\047\072\046\100\043\113\071\117\062" +
    "\120\073\121\060\122\066\123\065\001\002\000\040\005" +
    "\023\013\072\016\070\056\067\057\015\067\106\071\047" +
    "\072\046\100\043\113\071\117\062\120\073\121\060\122" +
    "\066\123\065\001\002\000\146\002\uffad\005\uffad\006\uffad" +
    "\007\uffad\010\uffad\011\uffad\014\uffad\015\uffad\016\uffad\020" +
    "\213\021\212\022\uffad\023\uffad\024\uffad\025\uffad\026\uffad" +
    "\027\uffad\030\uffad\031\uffad\032\uffad\033\uffad\034\uffad\035" +
    "\uffad\040\uffad\041\uffad\043\uffad\044\uffad\045\uffad\047\uffad" +
    "\050\uffad\051\uffad\052\uffad\053\uffad\054\uffad\057\uffad\061" +
    "\uffad\062\uffad\064\uffad\070\uffad\071\uffad\072\uffad\074\uffad" +
    "\076\uffad\100\uffad\102\uffad\103\uffad\105\uffad\114\uffad\116" +
    "\uffad\123\uffad\001\002\000\040\005\023\013\072\016\070" +
    "\056\067\057\015\067\106\071\047\072\046\100\043\113" +
    "\071\117\062\120\073\121\060\122\066\123\065\001\002" +
    "\000\040\005\023\013\072\016\070\056\067\057\015\067" +
    "\106\071\047\072\046\100\043\113\071\117\062\120\073" +
    "\121\060\122\066\123\065\001\002\000\150\002\uffb0\005" +
    "\uffb0\006\uffb0\007\uffb0\010\uffb0\011\uffb0\014\uffb0\015\uffb0" +
    "\016\uffb0\017\113\020\uffb0\021\uffb0\022\uffb0\023\uffb0\024" +
    "\uffb0\025\uffb0\026\uffb0\027\uffb0\030\uffb0\031\uffb0\032\uffb0" +
    "\033\uffb0\034\uffb0\035\uffb0\040\uffb0\041\uffb0\043\uffb0\044" +
    "\uffb0\045\uffb0\047\uffb0\050\uffb0\051\uffb0\052\uffb0\053\uffb0" +
    "\054\uffb0\057\uffb0\061\uffb0\062\uffb0\064\uffb0\070\uffb0\071" +
    "\uffb0\072\uffb0\074\uffb0\076\uffb0\100\uffb0\102\uffb0\103\uffb0" +
    "\105\uffb0\114\uffb0\116\uffb0\123\uffb0\001\002\000\150\002" +
    "\uffaf\005\uffaf\006\uffaf\007\uffaf\010\uffaf\011\uffaf\014\uffaf" +
    "\015\uffaf\016\uffaf\017\113\020\uffaf\021\uffaf\022\uffaf\023" +
    "\uffaf\024\uffaf\025\uffaf\026\uffaf\027\uffaf\030\uffaf\031\uffaf" +
    "\032\uffaf\033\uffaf\034\uffaf\035\uffaf\040\uffaf\041\uffaf\043" +
    "\uffaf\044\uffaf\045\uffaf\047\uffaf\050\uffaf\051\uffaf\052\uffaf" +
    "\053\uffaf\054\uffaf\057\uffaf\061\uffaf\062\uffaf\064\uffaf\070" +
    "\uffaf\071\uffaf\072\uffaf\074\uffaf\076\uffaf\100\uffaf\102\uffaf" +
    "\103\uffaf\105\uffaf\114\uffaf\116\uffaf\123\uffaf\001\002\000" +
    "\146\002\uffac\005\uffac\006\uffac\007\uffac\010\uffac\011\uffac" +
    "\014\uffac\015\uffac\016\uffac\020\213\021\212\022\uffac\023" +
    "\uffac\024\uffac\025\uffac\026\uffac\027\uffac\030\uffac\031\uffac" +
    "\032\uffac\033\uffac\034\uffac\035\uffac\040\uffac\041\uffac\043" +
    "\uffac\044\uffac\045\uffac\047\uffac\050\uffac\051\uffac\052\uffac" +
    "\053\uffac\054\uffac\057\uffac\061\uffac\062\uffac\064\uffac\070" +
    "\uffac\071\uffac\072\uffac\074\uffac\076\uffac\100\uffac\102\uffac" +
    "\103\uffac\105\uffac\114\uffac\116\uffac\123\uffac\001\002\000" +
    "\024\006\uffd5\043\040\044\037\047\033\054\017\061\014" +
    "\070\050\074\221\105\035\001\002\000\004\006\227\001" +
    "\002\000\004\123\uff81\001\002\000\004\123\226\001\002" +
    "\000\006\006\uffd4\011\224\001\002\000\024\006\uffd5\043" +
    "\040\044\037\047\033\054\017\061\014\070\050\074\221" +
    "\105\035\001\002\000\004\006\uffd3\001\002\000\006\006" +
    "\uffd6\011\uffd6\001\002\000\004\007\230\001\002\000\072" +
    "\005\uffd2\007\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047" +
    "\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2" +
    "\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074" +
    "\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2" +
    "\116\uffd2\123\uffd2\001\002\000\072\005\023\007\021\010" +
    "\232\043\040\044\037\045\034\047\033\050\031\051\030" +
    "\052\027\053\026\054\017\057\015\061\014\062\013\064" +
    "\012\070\050\071\047\072\046\074\045\076\044\100\043" +
    "\102\042\103\041\105\035\114\020\116\016\123\024\001" +
    "\002\000\150\002\uffbe\005\uffbe\006\uffbe\007\uffbe\010\uffbe" +
    "\011\uffbe\014\uffbe\015\uffbe\016\uffbe\017\uffbe\020\uffbe\021" +
    "\uffbe\022\uffbe\023\uffbe\024\uffbe\025\uffbe\026\uffbe\027\uffbe" +
    "\030\uffbe\031\uffbe\032\uffbe\033\uffbe\034\uffbe\035\uffbe\040" +
    "\uffbe\041\uffbe\043\uffbe\044\uffbe\045\uffbe\047\uffbe\050\uffbe" +
    "\051\uffbe\052\uffbe\053\uffbe\054\uffbe\057\uffbe\061\uffbe\062" +
    "\uffbe\064\uffbe\070\uffbe\071\uffbe\072\uffbe\074\uffbe\076\uffbe" +
    "\100\uffbe\102\uffbe\103\uffbe\105\uffbe\114\uffbe\116\uffbe\123" +
    "\uffbe\001\002\000\040\005\023\013\072\016\070\056\067" +
    "\057\015\067\106\071\047\072\046\100\043\113\071\117" +
    "\062\120\073\121\060\122\066\123\065\001\002\000\004" +
    "\011\235\001\002\000\006\013\237\123\236\001\002\000" +
    "\004\006\243\001\002\000\042\005\023\013\072\014\uffe8" +
    "\016\070\056\067\057\015\067\106\071\047\072\046\100" +
    "\043\113\071\117\062\120\073\121\060\122\066\123\065" +
    "\001\002\000\004\014\241\001\002\000\004\006\242\001" +
    "\002\000\150\002\uffbc\005\uffbc\006\uffbc\007\uffbc\010\uffbc" +
    "\011\uffbc\014\uffbc\015\uffbc\016\uffbc\017\uffbc\020\uffbc\021" +
    "\uffbc\022\uffbc\023\uffbc\024\uffbc\025\uffbc\026\uffbc\027\uffbc" +
    "\030\uffbc\031\uffbc\032\uffbc\033\uffbc\034\uffbc\035\uffbc\040" +
    "\uffbc\041\uffbc\043\uffbc\044\uffbc\045\uffbc\047\uffbc\050\uffbc" +
    "\051\uffbc\052\uffbc\053\uffbc\054\uffbc\057\uffbc\061\uffbc\062" +
    "\uffbc\064\uffbc\070\uffbc\071\uffbc\072\uffbc\074\uffbc\076\uffbc" +
    "\100\uffbc\102\uffbc\103\uffbc\105\uffbc\114\uffbc\116\uffbc\123" +
    "\uffbc\001\002\000\150\002\uffbd\005\uffbd\006\uffbd\007\uffbd" +
    "\010\uffbd\011\uffbd\014\uffbd\015\uffbd\016\uffbd\017\uffbd\020" +
    "\uffbd\021\uffbd\022\uffbd\023\uffbd\024\uffbd\025\uffbd\026\uffbd" +
    "\027\uffbd\030\uffbd\031\uffbd\032\uffbd\033\uffbd\034\uffbd\035" +
    "\uffbd\040\uffbd\041\uffbd\043\uffbd\044\uffbd\045\uffbd\047\uffbd" +
    "\050\uffbd\051\uffbd\052\uffbd\053\uffbd\054\uffbd\057\uffbd\061" +
    "\uffbd\062\uffbd\064\uffbd\070\uffbd\071\uffbd\072\uffbd\074\uffbd" +
    "\076\uffbd\100\uffbd\102\uffbd\103\uffbd\105\uffbd\114\uffbd\116" +
    "\uffbd\123\uffbd\001\002\000\004\015\245\001\002\000\004" +
    "\073\246\001\002\000\004\123\247\001\002\000\004\005" +
    "\250\001\002\000\042\005\023\006\uff8d\013\072\016\070" +
    "\056\067\057\015\067\106\071\047\072\046\100\043\113" +
    "\071\117\062\120\073\121\060\122\066\123\065\001\002" +
    "\000\004\006\252\001\002\000\074\002\uffee\005\uffee\007" +
    "\uffee\010\uffee\043\uffee\044\uffee\045\uffee\047\uffee\050\uffee" +
    "\051\uffee\052\uffee\053\uffee\054\uffee\057\uffee\061\uffee\062" +
    "\uffee\064\uffee\070\uffee\071\uffee\072\uffee\074\uffee\076\uffee" +
    "\100\uffee\102\uffee\103\uffee\105\uffee\114\uffee\116\uffee\123" +
    "\uffee\001\002\000\074\002\ufffa\005\ufffa\007\ufffa\010\ufffa" +
    "\043\ufffa\044\ufffa\045\ufffa\047\ufffa\050\ufffa\051\ufffa\052" +
    "\ufffa\053\ufffa\054\ufffa\057\ufffa\061\ufffa\062\ufffa\064\ufffa" +
    "\070\ufffa\071\ufffa\072\ufffa\074\ufffa\076\ufffa\100\ufffa\102" +
    "\ufffa\103\ufffa\105\ufffa\114\ufffa\116\ufffa\123\ufffa\001\002" +
    "\000\040\005\023\013\072\016\070\056\067\057\015\067" +
    "\106\071\047\072\046\100\043\113\071\117\062\120\073" +
    "\121\060\122\066\123\065\001\002\000\004\011\256\001" +
    "\002\000\006\013\260\123\257\001\002\000\004\006\264" +
    "\001\002\000\042\005\023\013\072\014\uffe8\016\070\056" +
    "\067\057\015\067\106\071\047\072\046\100\043\113\071" +
    "\117\062\120\073\121\060\122\066\123\065\001\002\000" +
    "\004\014\262\001\002\000\004\006\263\001\002\000\150" +
    "\002\uffb8\005\uffb8\006\uffb8\007\uffb8\010\uffb8\011\uffb8\014" +
    "\uffb8\015\uffb8\016\uffb8\017\uffb8\020\uffb8\021\uffb8\022\uffb8" +
    "\023\uffb8\024\uffb8\025\uffb8\026\uffb8\027\uffb8\030\uffb8\031" +
    "\uffb8\032\uffb8\033\uffb8\034\uffb8\035\uffb8\040\uffb8\041\uffb8" +
    "\043\uffb8\044\uffb8\045\uffb8\047\uffb8\050\uffb8\051\uffb8\052" +
    "\uffb8\053\uffb8\054\uffb8\057\uffb8\061\uffb8\062\uffb8\064\uffb8" +
    "\070\uffb8\071\uffb8\072\uffb8\074\uffb8\076\uffb8\100\uffb8\102" +
    "\uffb8\103\uffb8\105\uffb8\114\uffb8\116\uffb8\123\uffb8\001\002" +
    "\000\150\002\uffb9\005\uffb9\006\uffb9\007\uffb9\010\uffb9\011" +
    "\uffb9\014\uffb9\015\uffb9\016\uffb9\017\uffb9\020\uffb9\021\uffb9" +
    "\022\uffb9\023\uffb9\024\uffb9\025\uffb9\026\uffb9\027\uffb9\030" +
    "\uffb9\031\uffb9\032\uffb9\033\uffb9\034\uffb9\035\uffb9\040\uffb9" +
    "\041\uffb9\043\uffb9\044\uffb9\045\uffb9\047\uffb9\050\uffb9\051" +
    "\uffb9\052\uffb9\053\uffb9\054\uffb9\057\uffb9\061\uffb9\062\uffb9" +
    "\064\uffb9\070\uffb9\071\uffb9\072\uffb9\074\uffb9\076\uffb9\100" +
    "\uffb9\102\uffb9\103\uffb9\105\uffb9\114\uffb9\116\uffb9\123\uffb9" +
    "\001\002\000\004\123\347\001\002\000\004\065\311\001" +
    "\002\000\004\011\270\001\002\000\040\005\023\013\072" +
    "\016\070\056\067\057\015\067\106\071\047\072\046\100" +
    "\043\113\071\117\062\120\073\121\060\122\066\123\065" +
    "\001\002\000\004\011\272\001\002\000\004\123\274\001" +
    "\002\000\004\007\306\001\002\000\022\015\122\031\120" +
    "\032\117\033\125\034\124\035\123\036\302\037\301\001" +
    "\002\000\004\007\276\001\002\000\072\005\uffd2\007\uffd2" +
    "\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2\051" +
    "\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062\uffd2" +
    "\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2\100" +
    "\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2" +
    "\001\002\000\072\005\023\007\021\010\300\043\040\044" +
    "\037\045\034\047\033\050\031\051\030\052\027\053\026" +
    "\054\017\057\015\061\014\062\013\064\012\070\050\071" +
    "\047\072\046\074\045\076\044\100\043\102\042\103\041" +
    "\105\035\114\020\116\016\123\024\001\002\000\074\002" +
    "\uffda\005\uffda\007\uffda\010\uffda\043\uffda\044\uffda\045\uffda" +
    "\047\uffda\050\uffda\051\uffda\052\uffda\053\uffda\054\uffda\057" +
    "\uffda\061\uffda\062\uffda\064\uffda\070\uffda\071\uffda\072\uffda" +
    "\074\uffda\076\uffda\100\uffda\102\uffda\103\uffda\105\uffda\114" +
    "\uffda\116\uffda\123\uffda\001\002\000\074\002\uff95\005\uff95" +
    "\007\uff95\010\uff95\043\uff95\044\uff95\045\uff95\047\uff95\050" +
    "\uff95\051\uff95\052\uff95\053\uff95\054\uff95\057\uff95\061\uff95" +
    "\062\uff95\064\uff95\070\uff95\071\uff95\072\uff95\074\uff95\076" +
    "\uff95\100\uff95\102\uff95\103\uff95\105\uff95\114\uff95\116\uff95" +
    "\123\uff95\001\002\000\074\002\uff96\005\uff96\007\uff96\010" +
    "\uff96\043\uff96\044\uff96\045\uff96\047\uff96\050\uff96\051\uff96" +
    "\052\uff96\053\uff96\054\uff96\057\uff96\061\uff96\062\uff96\064" +
    "\uff96\070\uff96\071\uff96\072\uff96\074\uff96\076\uff96\100\uff96" +
    "\102\uff96\103\uff96\105\uff96\114\uff96\116\uff96\123\uff96\001" +
    "\002\000\074\002\uffe2\005\uffe2\007\uffe2\010\uffe2\043\uffe2" +
    "\044\uffe2\045\uffe2\047\uffe2\050\uffe2\051\uffe2\052\uffe2\053" +
    "\uffe2\054\uffe2\057\uffe2\061\uffe2\062\uffe2\064\uffe2\070\uffe2" +
    "\071\uffe2\072\uffe2\074\uffe2\076\uffe2\100\uffe2\102\uffe2\103" +
    "\uffe2\105\uffe2\114\uffe2\116\uffe2\123\uffe2\001\002\000\040" +
    "\005\023\013\072\016\070\056\067\057\015\067\106\071" +
    "\047\072\046\100\043\113\071\117\062\120\073\121\060" +
    "\122\066\123\065\001\002\000\074\002\uffe3\005\uffe3\007" +
    "\uffe3\010\uffe3\043\uffe3\044\uffe3\045\uffe3\047\uffe3\050\uffe3" +
    "\051\uffe3\052\uffe3\053\uffe3\054\uffe3\057\uffe3\061\uffe3\062" +
    "\uffe3\064\uffe3\070\uffe3\071\uffe3\072\uffe3\074\uffe3\076\uffe3" +
    "\100\uffe3\102\uffe3\103\uffe3\105\uffe3\114\uffe3\116\uffe3\123" +
    "\uffe3\001\002\000\072\005\uffd2\007\uffd2\010\uffd2\043\uffd2" +
    "\044\uffd2\045\uffd2\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053" +
    "\uffd2\054\uffd2\057\uffd2\061\uffd2\062\uffd2\064\uffd2\070\uffd2" +
    "\071\uffd2\072\uffd2\074\uffd2\076\uffd2\100\uffd2\102\uffd2\103" +
    "\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2\001\002\000\072" +
    "\005\023\007\021\010\310\043\040\044\037\045\034\047" +
    "\033\050\031\051\030\052\027\053\026\054\017\057\015" +
    "\061\014\062\013\064\012\070\050\071\047\072\046\074" +
    "\045\076\044\100\043\102\042\103\041\105\035\114\020" +
    "\116\016\123\024\001\002\000\074\002\uffdb\005\uffdb\007" +
    "\uffdb\010\uffdb\043\uffdb\044\uffdb\045\uffdb\047\uffdb\050\uffdb" +
    "\051\uffdb\052\uffdb\053\uffdb\054\uffdb\057\uffdb\061\uffdb\062" +
    "\uffdb\064\uffdb\070\uffdb\071\uffdb\072\uffdb\074\uffdb\076\uffdb" +
    "\100\uffdb\102\uffdb\103\uffdb\105\uffdb\114\uffdb\116\uffdb\123" +
    "\uffdb\001\002\000\010\013\313\077\314\123\312\001\002" +
    "\000\004\007\344\001\002\000\042\005\023\013\072\014" +
    "\uffe8\016\070\056\067\057\015\067\106\071\047\072\046" +
    "\100\043\113\071\117\062\120\073\121\060\122\066\123" +
    "\065\001\002\000\004\005\315\001\002\000\040\005\023" +
    "\013\072\016\070\056\067\057\015\067\106\071\047\072" +
    "\046\100\043\113\071\117\062\120\073\121\060\122\066" +
    "\123\065\001\002\000\006\006\317\011\320\001\002\000" +
    "\004\007\334\001\002\000\040\005\023\013\072\016\070" +
    "\056\067\057\015\067\106\071\047\072\046\100\043\113" +
    "\071\117\062\120\073\121\060\122\066\123\065\001\002" +
    "\000\006\006\322\011\323\001\002\000\004\007\331\001" +
    "\002\000\040\005\023\013\072\016\070\056\067\057\015" +
    "\067\106\071\047\072\046\100\043\113\071\117\062\120" +
    "\073\121\060\122\066\123\065\001\002\000\004\006\325" +
    "\001\002\000\004\007\326\001\002\000\072\005\uffd2\007" +
    "\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2" +
    "\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062" +
    "\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2" +
    "\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123" +
    "\uffd2\001\002\000\072\005\023\007\021\010\330\043\040" +
    "\044\037\045\034\047\033\050\031\051\030\052\027\053" +
    "\026\054\017\057\015\061\014\062\013\064\012\070\050" +
    "\071\047\072\046\074\045\076\044\100\043\102\042\103" +
    "\041\105\035\114\020\116\016\123\024\001\002\000\074" +
    "\002\uffdc\005\uffdc\007\uffdc\010\uffdc\043\uffdc\044\uffdc\045" +
    "\uffdc\047\uffdc\050\uffdc\051\uffdc\052\uffdc\053\uffdc\054\uffdc" +
    "\057\uffdc\061\uffdc\062\uffdc\064\uffdc\070\uffdc\071\uffdc\072" +
    "\uffdc\074\uffdc\076\uffdc\100\uffdc\102\uffdc\103\uffdc\105\uffdc" +
    "\114\uffdc\116\uffdc\123\uffdc\001\002\000\072\005\uffd2\007" +
    "\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2" +
    "\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062" +
    "\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2" +
    "\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123" +
    "\uffd2\001\002\000\072\005\023\007\021\010\333\043\040" +
    "\044\037\045\034\047\033\050\031\051\030\052\027\053" +
    "\026\054\017\057\015\061\014\062\013\064\012\070\050" +
    "\071\047\072\046\074\045\076\044\100\043\102\042\103" +
    "\041\105\035\114\020\116\016\123\024\001\002\000\074" +
    "\002\uffdd\005\uffdd\007\uffdd\010\uffdd\043\uffdd\044\uffdd\045" +
    "\uffdd\047\uffdd\050\uffdd\051\uffdd\052\uffdd\053\uffdd\054\uffdd" +
    "\057\uffdd\061\uffdd\062\uffdd\064\uffdd\070\uffdd\071\uffdd\072" +
    "\uffdd\074\uffdd\076\uffdd\100\uffdd\102\uffdd\103\uffdd\105\uffdd" +
    "\114\uffdd\116\uffdd\123\uffdd\001\002\000\072\005\uffd2\007" +
    "\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2" +
    "\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062" +
    "\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2" +
    "\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123" +
    "\uffd2\001\002\000\072\005\023\007\021\010\336\043\040" +
    "\044\037\045\034\047\033\050\031\051\030\052\027\053" +
    "\026\054\017\057\015\061\014\062\013\064\012\070\050" +
    "\071\047\072\046\074\045\076\044\100\043\102\042\103" +
    "\041\105\035\114\020\116\016\123\024\001\002\000\074" +
    "\002\uffde\005\uffde\007\uffde\010\uffde\043\uffde\044\uffde\045" +
    "\uffde\047\uffde\050\uffde\051\uffde\052\uffde\053\uffde\054\uffde" +
    "\057\uffde\061\uffde\062\uffde\064\uffde\070\uffde\071\uffde\072" +
    "\uffde\074\uffde\076\uffde\100\uffde\102\uffde\103\uffde\105\uffde" +
    "\114\uffde\116\uffde\123\uffde\001\002\000\004\014\340\001" +
    "\002\000\004\007\341\001\002\000\072\005\uffd2\007\uffd2" +
    "\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2\051" +
    "\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062\uffd2" +
    "\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2\100" +
    "\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2" +
    "\001\002\000\072\005\023\007\021\010\343\043\040\044" +
    "\037\045\034\047\033\050\031\051\030\052\027\053\026" +
    "\054\017\057\015\061\014\062\013\064\012\070\050\071" +
    "\047\072\046\074\045\076\044\100\043\102\042\103\041" +
    "\105\035\114\020\116\016\123\024\001\002\000\074\002" +
    "\uffdf\005\uffdf\007\uffdf\010\uffdf\043\uffdf\044\uffdf\045\uffdf" +
    "\047\uffdf\050\uffdf\051\uffdf\052\uffdf\053\uffdf\054\uffdf\057" +
    "\uffdf\061\uffdf\062\uffdf\064\uffdf\070\uffdf\071\uffdf\072\uffdf" +
    "\074\uffdf\076\uffdf\100\uffdf\102\uffdf\103\uffdf\105\uffdf\114" +
    "\uffdf\116\uffdf\123\uffdf\001\002\000\072\005\uffd2\007\uffd2" +
    "\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2\051" +
    "\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062\uffd2" +
    "\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2\100" +
    "\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2" +
    "\001\002\000\072\005\023\007\021\010\346\043\040\044" +
    "\037\045\034\047\033\050\031\051\030\052\027\053\026" +
    "\054\017\057\015\061\014\062\013\064\012\070\050\071" +
    "\047\072\046\074\045\076\044\100\043\102\042\103\041" +
    "\105\035\114\020\116\016\123\024\001\002\000\074\002" +
    "\uffe0\005\uffe0\007\uffe0\010\uffe0\043\uffe0\044\uffe0\045\uffe0" +
    "\047\uffe0\050\uffe0\051\uffe0\052\uffe0\053\uffe0\054\uffe0\057" +
    "\uffe0\061\uffe0\062\uffe0\064\uffe0\070\uffe0\071\uffe0\072\uffe0" +
    "\074\uffe0\076\uffe0\100\uffe0\102\uffe0\103\uffe0\105\uffe0\114" +
    "\uffe0\116\uffe0\123\uffe0\001\002\000\004\015\057\001\002" +
    "\000\074\002\uffef\005\uffef\007\uffef\010\uffef\043\uffef\044" +
    "\uffef\045\uffef\047\uffef\050\uffef\051\uffef\052\uffef\053\uffef" +
    "\054\uffef\057\uffef\061\uffef\062\uffef\064\uffef\070\uffef\071" +
    "\uffef\072\uffef\074\uffef\076\uffef\100\uffef\102\uffef\103\uffef" +
    "\105\uffef\114\uffef\116\uffef\123\uffef\001\002\000\006\007" +
    "\352\066\353\001\002\000\072\005\uffd2\007\uffd2\010\uffd2" +
    "\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2\051\uffd2\052" +
    "\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062\uffd2\064\uffd2" +
    "\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2\100\uffd2\102" +
    "\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2\001\002" +
    "\000\004\123\354\001\002\000\004\007\355\001\002\000" +
    "\072\005\uffd2\007\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2" +
    "\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057" +
    "\uffd2\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2" +
    "\074\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114" +
    "\uffd2\116\uffd2\123\uffd2\001\002\000\072\005\023\007\021" +
    "\010\357\043\040\044\037\045\034\047\033\050\031\051" +
    "\030\052\027\053\026\054\017\057\015\061\014\062\013" +
    "\064\012\070\050\071\047\072\046\074\045\076\044\100" +
    "\043\102\042\103\041\105\035\114\020\116\016\123\024" +
    "\001\002\000\074\002\ufffb\005\ufffb\007\ufffb\010\ufffb\043" +
    "\ufffb\044\ufffb\045\ufffb\047\ufffb\050\ufffb\051\ufffb\052\ufffb" +
    "\053\ufffb\054\ufffb\057\ufffb\061\ufffb\062\ufffb\064\ufffb\070" +
    "\ufffb\071\ufffb\072\ufffb\074\ufffb\076\ufffb\100\ufffb\102\ufffb" +
    "\103\ufffb\105\ufffb\114\ufffb\116\ufffb\123\ufffb\001\002\000" +
    "\072\005\023\007\021\010\361\043\040\044\037\045\034" +
    "\047\033\050\031\051\030\052\027\053\026\054\017\057" +
    "\015\061\014\062\013\064\012\070\050\071\047\072\046" +
    "\074\045\076\044\100\043\102\042\103\041\105\035\114" +
    "\020\116\016\123\024\001\002\000\074\002\ufffc\005\ufffc" +
    "\007\ufffc\010\ufffc\043\ufffc\044\ufffc\045\ufffc\047\ufffc\050" +
    "\ufffc\051\ufffc\052\ufffc\053\ufffc\054\ufffc\057\ufffc\061\ufffc" +
    "\062\ufffc\064\ufffc\070\ufffc\071\ufffc\072\ufffc\074\ufffc\076" +
    "\ufffc\100\ufffc\102\ufffc\103\ufffc\105\ufffc\114\ufffc\116\ufffc" +
    "\123\ufffc\001\002\000\004\123\363\001\002\000\004\015" +
    "\364\001\002\000\040\005\023\013\072\016\070\056\067" +
    "\057\015\067\106\071\047\072\046\100\043\113\071\117" +
    "\062\120\073\121\060\122\066\123\065\001\002\000\074" +
    "\002\uffed\005\uffed\007\uffed\010\uffed\043\uffed\044\uffed\045" +
    "\uffed\047\uffed\050\uffed\051\uffed\052\uffed\053\uffed\054\uffed" +
    "\057\uffed\061\uffed\062\uffed\064\uffed\070\uffed\071\uffed\072" +
    "\uffed\074\uffed\076\uffed\100\uffed\102\uffed\103\uffed\105\uffed" +
    "\114\uffed\116\uffed\123\uffed\001\002\000\004\005\367\001" +
    "\002\000\024\006\uffd5\043\040\044\037\047\033\054\017" +
    "\061\014\070\050\074\221\105\035\001\002\000\004\006" +
    "\371\001\002\000\004\007\372\001\002\000\072\005\uffd2" +
    "\007\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050" +
    "\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2" +
    "\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076" +
    "\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2" +
    "\123\uffd2\001\002\000\072\005\023\007\021\010\374\043" +
    "\040\044\037\045\034\047\033\050\031\051\030\052\027" +
    "\053\026\054\017\057\015\061\014\062\013\064\012\070" +
    "\050\071\047\072\046\074\045\076\044\100\043\102\042" +
    "\103\041\105\035\114\020\116\016\123\024\001\002\000" +
    "\074\002\ufffd\005\ufffd\007\ufffd\010\ufffd\043\ufffd\044\ufffd" +
    "\045\ufffd\047\ufffd\050\ufffd\051\ufffd\052\ufffd\053\ufffd\054" +
    "\ufffd\057\ufffd\061\ufffd\062\ufffd\064\ufffd\070\ufffd\071\ufffd" +
    "\072\ufffd\074\ufffd\076\ufffd\100\ufffd\102\ufffd\103\ufffd\105" +
    "\ufffd\114\ufffd\116\ufffd\123\ufffd\001\002\000\022\042\377" +
    "\101\376\106\167\107\166\110\165\111\164\112\163\123" +
    "\170\001\002\000\004\013\u0103\001\002\000\004\005\u0100" +
    "\001\002\000\040\005\023\013\072\016\070\056\067\057" +
    "\015\067\106\071\047\072\046\100\043\113\071\117\062" +
    "\120\073\121\060\122\066\123\065\001\002\000\004\006" +
    "\u0102\001\002\000\074\002\ufff1\005\ufff1\007\ufff1\010\ufff1" +
    "\043\ufff1\044\ufff1\045\ufff1\047\ufff1\050\ufff1\051\ufff1\052" +
    "\ufff1\053\ufff1\054\ufff1\057\ufff1\061\ufff1\062\ufff1\064\ufff1" +
    "\070\ufff1\071\ufff1\072\ufff1\074\ufff1\076\ufff1\100\ufff1\102" +
    "\ufff1\103\ufff1\105\ufff1\114\ufff1\116\ufff1\123\ufff1\001\002" +
    "\000\040\005\023\013\072\016\070\056\067\057\015\067" +
    "\106\071\047\072\046\100\043\113\071\117\062\120\073" +
    "\121\060\122\066\123\065\001\002\000\004\014\u0105\001" +
    "\002\000\074\002\ufff0\005\ufff0\007\ufff0\010\ufff0\043\ufff0" +
    "\044\ufff0\045\ufff0\047\ufff0\050\ufff0\051\ufff0\052\ufff0\053" +
    "\ufff0\054\ufff0\057\ufff0\061\ufff0\062\ufff0\064\ufff0\070\ufff0" +
    "\071\ufff0\072\ufff0\074\ufff0\076\ufff0\100\ufff0\102\ufff0\103" +
    "\ufff0\105\ufff0\114\ufff0\116\ufff0\123\ufff0\001\002\000\004" +
    "\006\u0107\001\002\000\150\002\uffb3\005\uffb3\006\uffb3\007" +
    "\uffb3\010\uffb3\011\uffb3\014\uffb3\015\uffb3\016\uffb3\017\uffb3" +
    "\020\uffb3\021\uffb3\022\uffb3\023\uffb3\024\uffb3\025\uffb3\026" +
    "\uffb3\027\uffb3\030\uffb3\031\uffb3\032\uffb3\033\uffb3\034\uffb3" +
    "\035\uffb3\040\uffb3\041\uffb3\043\uffb3\044\uffb3\045\uffb3\047" +
    "\uffb3\050\uffb3\051\uffb3\052\uffb3\053\uffb3\054\uffb3\057\uffb3" +
    "\061\uffb3\062\uffb3\064\uffb3\070\uffb3\071\uffb3\072\uffb3\074" +
    "\uffb3\076\uffb3\100\uffb3\102\uffb3\103\uffb3\105\uffb3\114\uffb3" +
    "\116\uffb3\123\uffb3\001\002\000\072\005\023\007\021\010" +
    "\u0109\043\040\044\037\045\034\047\033\050\031\051\030" +
    "\052\027\053\026\054\017\057\015\061\014\062\013\064" +
    "\012\070\050\071\047\072\046\074\045\076\044\100\043" +
    "\102\042\103\041\105\035\114\020\116\016\123\024\001" +
    "\002\000\074\002\uffea\005\uffea\007\uffea\010\uffea\043\uffea" +
    "\044\uffea\045\uffea\047\uffea\050\uffea\051\uffea\052\uffea\053" +
    "\uffea\054\uffea\057\uffea\061\uffea\062\uffea\064\uffea\070\uffea" +
    "\071\uffea\072\uffea\074\uffea\076\uffea\100\uffea\102\uffea\103" +
    "\uffea\105\uffea\114\uffea\116\uffea\123\uffea\001\002\000\072" +
    "\005\uffd2\007\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047" +
    "\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2" +
    "\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074" +
    "\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2" +
    "\116\uffd2\123\uffd2\001\002\000\072\005\023\007\021\010" +
    "\u010c\043\040\044\037\045\034\047\033\050\031\051\030" +
    "\052\027\053\026\054\017\057\015\061\014\062\013\064" +
    "\012\070\050\071\047\072\046\074\045\076\044\100\043" +
    "\102\042\103\041\105\035\114\020\116\016\123\024\001" +
    "\002\000\004\046\u010d\001\002\000\004\005\u010e\001\002" +
    "\000\004\123\u010f\001\002\000\004\006\u0110\001\002\000" +
    "\004\007\u0111\001\002\000\072\005\uffd2\007\uffd2\010\uffd2" +
    "\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2\051\uffd2\052" +
    "\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062\uffd2\064\uffd2" +
    "\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2\100\uffd2\102" +
    "\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2\001\002" +
    "\000\072\005\023\007\021\010\u0113\043\040\044\037\045" +
    "\034\047\033\050\031\051\030\052\027\053\026\054\017" +
    "\057\015\061\014\062\013\064\012\070\050\071\047\072" +
    "\046\074\045\076\044\100\043\102\042\103\041\105\035" +
    "\114\020\116\016\123\024\001\002\000\004\060\u0114\001" +
    "\002\000\004\007\u0115\001\002\000\072\005\uffd2\007\uffd2" +
    "\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2\051" +
    "\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062\uffd2" +
    "\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2\100" +
    "\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123\uffd2" +
    "\001\002\000\072\005\023\007\021\010\u0117\043\040\044" +
    "\037\045\034\047\033\050\031\051\030\052\027\053\026" +
    "\054\017\057\015\061\014\062\013\064\012\070\050\071" +
    "\047\072\046\074\045\076\044\100\043\102\042\103\041" +
    "\105\035\114\020\116\016\123\024\001\002\000\074\002" +
    "\uffeb\005\uffeb\007\uffeb\010\uffeb\043\uffeb\044\uffeb\045\uffeb" +
    "\047\uffeb\050\uffeb\051\uffeb\052\uffeb\053\uffeb\054\uffeb\057" +
    "\uffeb\061\uffeb\062\uffeb\064\uffeb\070\uffeb\071\uffeb\072\uffeb" +
    "\074\uffeb\076\uffeb\100\uffeb\102\uffeb\103\uffeb\105\uffeb\114" +
    "\uffeb\116\uffeb\123\uffeb\001\002\000\004\007\u0119\001\002" +
    "\000\072\005\uffd2\007\uffd2\010\uffd2\043\uffd2\044\uffd2\045" +
    "\uffd2\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2" +
    "\057\uffd2\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072" +
    "\uffd2\074\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2" +
    "\114\uffd2\116\uffd2\123\uffd2\001\002\000\072\005\023\007" +
    "\021\010\u011b\043\040\044\037\045\034\047\033\050\031" +
    "\051\030\052\027\053\026\054\017\057\015\061\014\062" +
    "\013\064\012\070\050\071\047\072\046\074\045\076\044" +
    "\100\043\102\042\103\041\105\035\114\020\116\016\123" +
    "\024\001\002\000\074\002\uffe1\005\uffe1\007\uffe1\010\uffe1" +
    "\043\uffe1\044\uffe1\045\uffe1\047\uffe1\050\uffe1\051\uffe1\052" +
    "\uffe1\053\uffe1\054\uffe1\057\uffe1\061\uffe1\062\uffe1\064\uffe1" +
    "\070\uffe1\071\uffe1\072\uffe1\074\uffe1\076\uffe1\100\uffe1\102" +
    "\uffe1\103\uffe1\105\uffe1\114\uffe1\116\uffe1\123\uffe1\001\002" +
    "\000\040\005\023\013\072\016\070\056\067\057\015\067" +
    "\106\071\047\072\046\100\043\113\071\117\062\120\073" +
    "\121\060\122\066\123\065\001\002\000\004\011\u011e\001" +
    "\002\000\006\013\u0120\123\u011f\001\002\000\004\006\u0124" +
    "\001\002\000\042\005\023\013\072\014\uffe8\016\070\056" +
    "\067\057\015\067\106\071\047\072\046\100\043\113\071" +
    "\117\062\120\073\121\060\122\066\123\065\001\002\000" +
    "\004\014\u0122\001\002\000\004\006\u0123\001\002\000\150" +
    "\002\uffba\005\uffba\006\uffba\007\uffba\010\uffba\011\uffba\014" +
    "\uffba\015\uffba\016\uffba\017\uffba\020\uffba\021\uffba\022\uffba" +
    "\023\uffba\024\uffba\025\uffba\026\uffba\027\uffba\030\uffba\031" +
    "\uffba\032\uffba\033\uffba\034\uffba\035\uffba\040\uffba\041\uffba" +
    "\043\uffba\044\uffba\045\uffba\047\uffba\050\uffba\051\uffba\052" +
    "\uffba\053\uffba\054\uffba\057\uffba\061\uffba\062\uffba\064\uffba" +
    "\070\uffba\071\uffba\072\uffba\074\uffba\076\uffba\100\uffba\102" +
    "\uffba\103\uffba\105\uffba\114\uffba\116\uffba\123\uffba\001\002" +
    "\000\150\002\uffbb\005\uffbb\006\uffbb\007\uffbb\010\uffbb\011" +
    "\uffbb\014\uffbb\015\uffbb\016\uffbb\017\uffbb\020\uffbb\021\uffbb" +
    "\022\uffbb\023\uffbb\024\uffbb\025\uffbb\026\uffbb\027\uffbb\030" +
    "\uffbb\031\uffbb\032\uffbb\033\uffbb\034\uffbb\035\uffbb\040\uffbb" +
    "\041\uffbb\043\uffbb\044\uffbb\045\uffbb\047\uffbb\050\uffbb\051" +
    "\uffbb\052\uffbb\053\uffbb\054\uffbb\057\uffbb\061\uffbb\062\uffbb" +
    "\064\uffbb\070\uffbb\071\uffbb\072\uffbb\074\uffbb\076\uffbb\100" +
    "\uffbb\102\uffbb\103\uffbb\105\uffbb\114\uffbb\116\uffbb\123\uffbb" +
    "\001\002\000\004\123\u0128\001\002\000\004\123\uff89\001" +
    "\002\000\004\123\uff8a\001\002\000\004\005\u0129\001\002" +
    "\000\024\006\uffd5\043\040\044\037\047\033\054\017\061" +
    "\014\070\050\074\221\105\035\001\002\000\004\006\u012b" +
    "\001\002\000\004\007\u012c\001\002\000\072\005\uffd2\007" +
    "\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047\uffd2\050\uffd2" +
    "\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2\061\uffd2\062" +
    "\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074\uffd2\076\uffd2" +
    "\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2\116\uffd2\123" +
    "\uffd2\001\002\000\072\005\023\007\021\010\u012e\043\040" +
    "\044\037\045\034\047\033\050\031\051\030\052\027\053" +
    "\026\054\017\057\015\061\014\062\013\064\012\070\050" +
    "\071\047\072\046\074\045\076\044\100\043\102\042\103" +
    "\041\105\035\114\020\116\016\123\024\001\002\000\074" +
    "\002\ufffe\005\ufffe\007\ufffe\010\ufffe\043\ufffe\044\ufffe\045" +
    "\ufffe\047\ufffe\050\ufffe\051\ufffe\052\ufffe\053\ufffe\054\ufffe" +
    "\057\ufffe\061\ufffe\062\ufffe\064\ufffe\070\ufffe\071\ufffe\072" +
    "\ufffe\074\ufffe\076\ufffe\100\ufffe\102\ufffe\103\ufffe\105\ufffe" +
    "\114\ufffe\116\ufffe\123\ufffe\001\002\000\004\007\u0130\001" +
    "\002\000\072\005\uffd2\007\uffd2\010\uffd2\043\uffd2\044\uffd2" +
    "\045\uffd2\047\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054" +
    "\uffd2\057\uffd2\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2" +
    "\072\uffd2\074\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105" +
    "\uffd2\114\uffd2\116\uffd2\123\uffd2\001\002\000\072\005\023" +
    "\007\021\010\u0132\043\040\044\037\045\034\047\033\050" +
    "\031\051\030\052\027\053\026\054\017\057\015\061\014" +
    "\062\013\064\012\070\050\071\047\072\046\074\045\076" +
    "\044\100\043\102\042\103\041\105\035\114\020\116\016" +
    "\123\024\001\002\000\076\002\uffd9\005\uffd9\007\uffd9\010" +
    "\uffd9\043\uffd9\044\uffd9\045\uffd9\047\uffd9\050\uffd9\051\uffd9" +
    "\052\uffd9\053\uffd9\054\uffd9\055\u0133\057\uffd9\061\uffd9\062" +
    "\uffd9\064\uffd9\070\uffd9\071\uffd9\072\uffd9\074\uffd9\076\uffd9" +
    "\100\uffd9\102\uffd9\103\uffd9\105\uffd9\114\uffd9\116\uffd9\123" +
    "\uffd9\001\002\000\006\007\u0134\064\012\001\002\000\072" +
    "\005\uffd2\007\uffd2\010\uffd2\043\uffd2\044\uffd2\045\uffd2\047" +
    "\uffd2\050\uffd2\051\uffd2\052\uffd2\053\uffd2\054\uffd2\057\uffd2" +
    "\061\uffd2\062\uffd2\064\uffd2\070\uffd2\071\uffd2\072\uffd2\074" +
    "\uffd2\076\uffd2\100\uffd2\102\uffd2\103\uffd2\105\uffd2\114\uffd2" +
    "\116\uffd2\123\uffd2\001\002\000\074\002\uffd7\005\uffd7\007" +
    "\uffd7\010\uffd7\043\uffd7\044\uffd7\045\uffd7\047\uffd7\050\uffd7" +
    "\051\uffd7\052\uffd7\053\uffd7\054\uffd7\057\uffd7\061\uffd7\062" +
    "\uffd7\064\uffd7\070\uffd7\071\uffd7\072\uffd7\074\uffd7\076\uffd7" +
    "\100\uffd7\102\uffd7\103\uffd7\105\uffd7\114\uffd7\116\uffd7\123" +
    "\uffd7\001\002\000\072\005\023\007\021\010\u0137\043\040" +
    "\044\037\045\034\047\033\050\031\051\030\052\027\053" +
    "\026\054\017\057\015\061\014\062\013\064\012\070\050" +
    "\071\047\072\046\074\045\076\044\100\043\102\042\103" +
    "\041\105\035\114\020\116\016\123\024\001\002\000\074" +
    "\002\uffd8\005\uffd8\007\uffd8\010\uffd8\043\uffd8\044\uffd8\045" +
    "\uffd8\047\uffd8\050\uffd8\051\uffd8\052\uffd8\053\uffd8\054\uffd8" +
    "\057\uffd8\061\uffd8\062\uffd8\064\uffd8\070\uffd8\071\uffd8\072" +
    "\uffd8\074\uffd8\076\uffd8\100\uffd8\102\uffd8\103\uffd8\105\uffd8" +
    "\114\uffd8\116\uffd8\123\uffd8\001\002\000\004\002\001\001" +
    "\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\u0136\000\006\002\003\016\004\001\001\000\002\001" +
    "\001\000\024\003\031\006\051\007\024\010\050\011\035" +
    "\012\054\013\021\021\052\045\053\001\001\000\002\001" +
    "\001\000\002\001\001\000\004\016\010\001\001\000\024" +
    "\003\031\006\051\007\024\010\050\011\035\012\054\013" +
    "\021\021\052\045\053\001\001\000\044\017\107\021\106" +
    "\022\111\023\060\024\062\025\073\026\074\027\101\030" +
    "\102\031\103\034\u012e\035\104\036\100\037\076\040\075" +
    "\041\063\042\110\001\001\000\006\044\u0124\045\u0125\001" +
    "\001\000\002\001\001\000\002\001\001\000\044\017\107" +
    "\021\106\022\111\023\060\024\062\025\073\026\074\027" +
    "\101\030\102\031\103\034\u0117\035\104\036\100\037\076" +
    "\040\075\041\063\042\110\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\016\u0107\001\001\000\002\001\001" +
    "\000\044\017\107\021\106\022\111\023\060\024\062\025" +
    "\073\026\074\027\101\030\102\031\103\034\u0105\035\104" +
    "\036\100\037\076\040\075\041\063\042\110\001\001\000" +
    "\006\032\303\033\302\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\045\361\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\044\017\107\021\106\022\111" +
    "\023\060\024\062\025\073\026\074\027\101\030\102\031" +
    "\103\034\347\035\104\036\100\037\076\040\075\041\063" +
    "\042\110\001\001\000\006\006\266\045\264\001\001\000" +
    "\002\001\001\000\044\017\107\021\106\022\111\023\060" +
    "\024\062\025\073\026\074\027\101\030\102\031\103\034" +
    "\252\035\104\036\100\037\076\040\075\041\063\042\110" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\044\017\107\021\106\022\111\023\060" +
    "\024\062\025\073\026\074\027\101\030\102\031\103\034" +
    "\077\035\104\036\100\037\076\040\075\041\063\042\110" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\050\004\146\005\147\017\107\021\106" +
    "\022\111\023\060\024\062\025\073\026\074\027\101\030" +
    "\102\031\103\034\150\035\104\036\100\037\076\040\075" +
    "\041\063\042\110\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\032\125\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\010\017\107\021\106" +
    "\042\113\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\034" +
    "\017\107\021\106\022\111\023\060\024\062\025\073\026" +
    "\074\027\127\036\100\037\076\040\075\041\063\042\110" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\040\017\107\021\106\022\111" +
    "\023\060\024\062\025\073\026\074\027\101\030\102\031" +
    "\126\036\100\037\076\040\075\041\063\042\110\001\001" +
    "\000\002\001\001\000\002\001\001\000\032\017\107\021" +
    "\106\022\111\023\060\024\062\025\073\026\074\036\131" +
    "\037\076\040\075\041\063\042\110\001\001\000\002\001" +
    "\001\000\022\017\107\021\106\022\111\023\060\024\062" +
    "\025\145\041\063\042\110\001\001\000\022\017\107\021" +
    "\106\022\111\023\060\024\062\025\134\041\063\042\110" +
    "\001\001\000\002\001\001\000\020\017\107\021\106\022" +
    "\111\023\060\024\062\041\144\042\110\001\001\000\020" +
    "\017\107\021\106\022\111\023\060\024\062\041\143\042" +
    "\110\001\001\000\020\017\107\021\106\022\111\023\060" +
    "\024\062\041\142\042\110\001\001\000\020\017\107\021" +
    "\106\022\111\023\060\024\062\041\141\042\110\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\050\004" +
    "\146\005\153\017\107\021\106\022\111\023\060\024\062" +
    "\025\073\026\074\027\101\030\102\031\103\034\150\035" +
    "\104\036\100\037\076\040\075\041\063\042\110\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\046\017\107\021\106\022\111\023\060\024\062\025\073" +
    "\026\074\027\101\030\102\031\103\034\176\035\104\036" +
    "\100\037\076\040\075\041\063\042\110\043\204\001\001" +
    "\000\044\017\107\021\106\022\111\023\060\024\062\025" +
    "\073\026\074\027\101\030\102\031\103\034\202\035\104" +
    "\036\100\037\076\040\075\041\063\042\110\001\001\000" +
    "\004\046\161\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\046" +
    "\017\107\021\106\022\111\023\060\024\062\025\073\026" +
    "\074\027\101\030\102\031\103\034\176\035\104\036\100" +
    "\037\076\040\075\041\063\042\110\043\175\001\001\000" +
    "\044\017\107\021\106\022\111\023\060\024\062\025\073" +
    "\026\074\027\101\030\102\031\103\034\173\035\104\036" +
    "\100\037\076\040\075\041\063\042\110\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\046\017\107\021\106\022\111\023\060\024\062" +
    "\025\073\026\074\027\101\030\102\031\103\034\176\035" +
    "\104\036\100\037\076\040\075\041\063\042\110\043\200" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\014\017\107\021\106\022\111\023\215\042\110\001" +
    "\001\000\014\017\107\021\106\022\111\023\210\042\110" +
    "\001\001\000\002\001\001\000\012\017\107\021\106\022" +
    "\214\042\110\001\001\000\012\017\107\021\106\022\213" +
    "\042\110\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\014\222\015\217\045\221\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\010\014\222\015\224\045\221\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\016\230\001\001\000\024\003\031\006\051\007\024" +
    "\010\050\011\035\012\054\013\021\021\052\045\053\001" +
    "\001\000\002\001\001\000\044\017\107\021\106\022\111" +
    "\023\060\024\062\025\073\026\074\027\101\030\102\031" +
    "\103\034\233\035\104\036\100\037\076\040\075\041\063" +
    "\042\110\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\050\004\146\005\237\017\107\021\106" +
    "\022\111\023\060\024\062\025\073\026\074\027\101\030" +
    "\102\031\103\034\150\035\104\036\100\037\076\040\075" +
    "\041\063\042\110\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\046\017\107\021\106\022\111\023\060\024\062\025\073" +
    "\026\074\027\101\030\102\031\103\034\176\035\104\036" +
    "\100\037\076\040\075\041\063\042\110\043\250\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\044\017\107\021\106\022\111\023\060\024\062\025\073" +
    "\026\074\027\101\030\102\031\103\034\254\035\104\036" +
    "\100\037\076\040\075\041\063\042\110\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\050\004" +
    "\146\005\260\017\107\021\106\022\111\023\060\024\062" +
    "\025\073\026\074\027\101\030\102\031\103\034\150\035" +
    "\104\036\100\037\076\040\075\041\063\042\110\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\044\017\107\021\106\022\111\023\060\024" +
    "\062\025\073\026\074\027\101\030\102\031\103\034\270" +
    "\035\104\036\100\037\076\040\075\041\063\042\110\001" +
    "\001\000\002\001\001\000\006\010\274\011\272\001\001" +
    "\000\002\001\001\000\006\032\303\033\302\001\001\000" +
    "\002\001\001\000\004\016\276\001\001\000\024\003\031" +
    "\006\051\007\024\010\050\011\035\012\054\013\021\021" +
    "\052\045\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\044\017\107\021" +
    "\106\022\111\023\060\024\062\025\073\026\074\027\101" +
    "\030\102\031\103\034\304\035\104\036\100\037\076\040" +
    "\075\041\063\042\110\001\001\000\002\001\001\000\004" +
    "\016\306\001\001\000\024\003\031\006\051\007\024\010" +
    "\050\011\035\012\054\013\021\021\052\045\053\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\050\004\146\005\336\017\107\021\106\022\111\023\060" +
    "\024\062\025\073\026\074\027\101\030\102\031\103\034" +
    "\150\035\104\036\100\037\076\040\075\041\063\042\110" +
    "\001\001\000\002\001\001\000\044\017\107\021\106\022" +
    "\111\023\060\024\062\025\073\026\074\027\101\030\102" +
    "\031\103\034\315\035\104\036\100\037\076\040\075\041" +
    "\063\042\110\001\001\000\002\001\001\000\002\001\001" +
    "\000\044\017\107\021\106\022\111\023\060\024\062\025" +
    "\073\026\074\027\101\030\102\031\103\034\320\035\104" +
    "\036\100\037\076\040\075\041\063\042\110\001\001\000" +
    "\002\001\001\000\002\001\001\000\044\017\107\021\106" +
    "\022\111\023\060\024\062\025\073\026\074\027\101\030" +
    "\102\031\103\034\323\035\104\036\100\037\076\040\075" +
    "\041\063\042\110\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\326\001\001\000\024\003\031\006\051" +
    "\007\024\010\050\011\035\012\054\013\021\021\052\045" +
    "\053\001\001\000\002\001\001\000\004\016\331\001\001" +
    "\000\024\003\031\006\051\007\024\010\050\011\035\012" +
    "\054\013\021\021\052\045\053\001\001\000\002\001\001" +
    "\000\004\016\334\001\001\000\024\003\031\006\051\007" +
    "\024\010\050\011\035\012\054\013\021\021\052\045\053" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\004\016\341\001\001\000\024\003\031\006\051" +
    "\007\024\010\050\011\035\012\054\013\021\021\052\045" +
    "\053\001\001\000\002\001\001\000\004\016\344\001\001" +
    "\000\024\003\031\006\051\007\024\010\050\011\035\012" +
    "\054\013\021\021\052\045\053\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\016\357\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\355\001\001\000\024\003\031\006\051\007" +
    "\024\010\050\011\035\012\054\013\021\021\052\045\053" +
    "\001\001\000\002\001\001\000\024\003\031\006\051\007" +
    "\024\010\050\011\035\012\054\013\021\021\052\045\053" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\044\017\107\021\106\022\111\023\060\024\062" +
    "\025\073\026\074\027\101\030\102\031\103\034\364\035" +
    "\104\036\100\037\076\040\075\041\063\042\110\001\001" +
    "\000\002\001\001\000\002\001\001\000\010\014\222\015" +
    "\367\045\221\001\001\000\002\001\001\000\002\001\001" +
    "\000\004\016\372\001\001\000\024\003\031\006\051\007" +
    "\024\010\050\011\035\012\054\013\021\021\052\045\053" +
    "\001\001\000\002\001\001\000\004\046\161\001\001\000" +
    "\002\001\001\000\002\001\001\000\044\017\107\021\106" +
    "\022\111\023\060\024\062\025\073\026\074\027\101\030" +
    "\102\031\103\034\u0100\035\104\036\100\037\076\040\075" +
    "\041\063\042\110\001\001\000\002\001\001\000\002\001" +
    "\001\000\044\017\107\021\106\022\111\023\060\024\062" +
    "\025\073\026\074\027\101\030\102\031\103\034\u0103\035" +
    "\104\036\100\037\076\040\075\041\063\042\110\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\024\003\031\006\051\007\024\010\050" +
    "\011\035\012\054\013\021\021\052\045\053\001\001\000" +
    "\002\001\001\000\004\016\u010a\001\001\000\024\003\031" +
    "\006\051\007\024\010\050\011\035\012\054\013\021\021" +
    "\052\045\053\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\004\016\u0111\001\001\000\024\003\031\006\051\007\024" +
    "\010\050\011\035\012\054\013\021\021\052\045\053\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\016\u0115" +
    "\001\001\000\024\003\031\006\051\007\024\010\050\011" +
    "\035\012\054\013\021\021\052\045\053\001\001\000\002" +
    "\001\001\000\002\001\001\000\004\016\u0119\001\001\000" +
    "\024\003\031\006\051\007\024\010\050\011\035\012\054" +
    "\013\021\021\052\045\053\001\001\000\002\001\001\000" +
    "\044\017\107\021\106\022\111\023\060\024\062\025\073" +
    "\026\074\027\101\030\102\031\103\034\u011c\035\104\036" +
    "\100\037\076\040\075\041\063\042\110\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\050\004" +
    "\146\005\u0120\017\107\021\106\022\111\023\060\024\062" +
    "\025\073\026\074\027\101\030\102\031\103\034\150\035" +
    "\104\036\100\037\076\040\075\041\063\042\110\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\010\014\222\015\u0129\045" +
    "\221\001\001\000\002\001\001\000\002\001\001\000\004" +
    "\016\u012c\001\001\000\024\003\031\006\051\007\024\010" +
    "\050\011\035\012\054\013\021\021\052\045\053\001\001" +
    "\000\002\001\001\000\002\001\001\000\004\016\u0130\001" +
    "\001\000\024\003\031\006\051\007\024\010\050\011\035" +
    "\012\054\013\021\021\052\045\053\001\001\000\002\001" +
    "\001\000\004\013\u0134\001\001\000\004\016\u0135\001\001" +
    "\000\002\001\001\000\024\003\031\006\051\007\024\010" +
    "\050\011\035\012\054\013\021\021\052\045\053\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$parser$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$parser$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$parser$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



  public lang.Absyn.Program pProgram() throws Exception
  {
    java_cup.runtime.Symbol res = parse();
    return (lang.Absyn.Program) res.value;
  }

public void syntax_error(java_cup.runtime.Symbol cur_token)
{
  report_error("Syntax Error, trying to recover and continue parse...", cur_token);
}

public void unrecovered_syntax_error(java_cup.runtime.Symbol cur_token) throws java.lang.Exception
{
  throw new Exception("Unrecoverable Syntax Error");
}



/** Cup generated class to encapsulate user supplied action code.*/
@SuppressWarnings({"rawtypes", "unchecked", "unused"})
class CUP$parser$actions {


public java_cup.runtime.ComplexSymbolFactory.Location getLeftLocation(
    java_cup.runtime.ComplexSymbolFactory.Location ... locations) {
  for (java_cup.runtime.ComplexSymbolFactory.Location l : locations) {
    if (l != null) {
      return l;
    }
  }
  return null;
}

  private final parser parser;

  /** Constructor */
  CUP$parser$actions(parser parser) {
    this.parser = parser;
  }

  /** Method 0 with the actual generated action code for actions 0 to 300. */
  public final java_cup.runtime.Symbol CUP$parser$do_action_part00000000(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$parser$result;

      /* select the action based on the action number */
      switch (CUP$parser$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= Program EOF 
            {
              Object RESULT =null;
		Location start_valxleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location start_valxright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Program start_val = (lang.Absyn.Program)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		RESULT = start_val;
              CUP$parser$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$parser$parser.done_parsing();
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // Program ::= ListStm 
            {
              lang.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListStm p_1 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.PStms(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.PStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PStms)RESULT).line_num = -1;
  ((lang.Absyn.PStms)RESULT).col_num = -1;
  ((lang.Absyn.PStms)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // Program ::= _SYMB_57 _SYMB_0 _SYMB_47 ListStm 
            {
              lang.Absyn.Program RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.PFunctionalModeStms(p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.PFunctionalModeStms)RESULT).line_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).col_num = -1;
  ((lang.Absyn.PFunctionalModeStms)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Program",0, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // Stm ::= _SYMB_46 FuncType _IDENT_ _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.FuncType p_2 = (lang.Absyn.FuncType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_5 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefFun(p_2,p_3,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefFun)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefFun)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefFun)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefFun)RESULT).line_num = -1;
  ((lang.Absyn.DefFun)RESULT).col_num = -1;
  ((lang.Absyn.DefFun)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // Stm ::= _SYMB_38 _IDENT_ _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_4 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_7 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefConstructor(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefConstructor)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefConstructor)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefConstructor)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefConstructor)RESULT).line_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).col_num = -1;
  ((lang.Absyn.DefConstructor)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // Stm ::= _SYMB_36 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefClass(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClass)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClass)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClass)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClass)RESULT).line_num = -1;
  ((lang.Absyn.DefClass)RESULT).col_num = -1;
  ((lang.Absyn.DefClass)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // Stm ::= _SYMB_36 _IDENT_ _SYMB_50 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DefClassInherits(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DefClassInherits)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DefClassInherits)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DefClassInherits)RESULT).line_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).col_num = -1;
  ((lang.Absyn.DefClassInherits)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // Stm ::= _SYMB_58 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPrint(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPrint)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPrint)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPrint)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPrint)RESULT).line_num = -1;
  ((lang.Absyn.SPrint)RESULT).col_num = -1;
  ((lang.Absyn.SPrint)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // Stm ::= _SYMB_33 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SBreak();
((lang.Absyn.SBreak)RESULT).line_num = -1;
((lang.Absyn.SBreak)RESULT).col_num = -1;
((lang.Absyn.SBreak)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // Stm ::= _SYMB_39 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SContinue();
((lang.Absyn.SContinue)RESULT).line_num = -1;
((lang.Absyn.SContinue)RESULT).col_num = -1;
((lang.Absyn.SContinue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // Stm ::= Stm_Initialise 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Initialise p_1 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.InitialiseStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.InitialiseStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.InitialiseStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.InitialiseStm)RESULT).line_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).col_num = -1;
  ((lang.Absyn.InitialiseStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // Stm ::= Stm_Declare 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Declare p_1 = (lang.Absyn.Stm_Declare)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.DeclareStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.DeclareStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.DeclareStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.DeclareStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.DeclareStm)RESULT).line_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).col_num = -1;
  ((lang.Absyn.DeclareStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // Stm ::= Stm_Assign 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Assign p_1 = (lang.Absyn.Stm_Assign)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.AssignStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.AssignStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.AssignStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.AssignStm)RESULT).line_num = -1;
  ((lang.Absyn.AssignStm)RESULT).col_num = -1;
  ((lang.Absyn.AssignStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // Stm ::= Stm_Loop 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_Loop p_1 = (lang.Absyn.Stm_Loop)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.LoopStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LoopStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LoopStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LoopStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LoopStm)RESULT).line_num = -1;
  ((lang.Absyn.LoopStm)RESULT).col_num = -1;
  ((lang.Absyn.LoopStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // Stm ::= Stm_IncrmDecrm 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm_IncrmDecrm p_1 = (lang.Absyn.Stm_IncrmDecrm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.IncrnDecrmStm(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IncrnDecrmStm)RESULT).line_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).col_num = -1;
  ((lang.Absyn.IncrnDecrmStm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // Stm ::= Exp16 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCall(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCall)RESULT).line_num = -1;
  ((lang.Absyn.SCall)RESULT).col_num = -1;
  ((lang.Absyn.SCall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // Stm ::= _IDENT_ _SYMB_6 _SYMB_30 _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SAppend(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAppend)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAppend)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAppend)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAppend)RESULT).line_num = -1;
  ((lang.Absyn.SAppend)RESULT).col_num = -1;
  ((lang.Absyn.SAppend)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // Stm ::= _IDENT_ _SYMB_6 _SYMB_61 _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SRemove(p_1,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SRemove)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SRemove)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SRemove)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SRemove)RESULT).line_num = -1;
  ((lang.Absyn.SRemove)RESULT).col_num = -1;
  ((lang.Absyn.SRemove)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // Stm ::= _SYMB_63 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SReturn(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SReturn)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SReturn)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SReturn)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SReturn)RESULT).line_num = -1;
  ((lang.Absyn.SReturn)RESULT).col_num = -1;
  ((lang.Absyn.SReturn)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // Stm ::= _SYMB_56 _IDENT_ _SYMB_9 _SYMB_55 _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_7 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SObjInit(p_2,p_5,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SObjInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SObjInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SObjInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SObjInit)RESULT).line_num = -1;
  ((lang.Absyn.SObjInit)RESULT).col_num = -1;
  ((lang.Absyn.SObjInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // Stm ::= _SYMB_37 VarType _IDENT_ _SYMB_9 Exp 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.VarType p_2 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SConstInit(p_2,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.SConstInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SConstInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SConstInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SConstInit)RESULT).line_num = -1;
  ((lang.Absyn.SConstInit)RESULT).col_num = -1;
  ((lang.Absyn.SConstInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // Stm ::= If_Stm 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.If_Stm p_1 = (lang.Absyn.If_Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.IfS(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.IfS)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.IfS)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.IfS)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.IfS)RESULT).line_num = -1;
  ((lang.Absyn.IfS)RESULT).col_num = -1;
  ((lang.Absyn.IfS)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // Stm ::= _SYMB_72 _SYMB_3 ListStm _SYMB_4 _SYMB_34 _SYMB_1 _IDENT_ _SYMB_2 _SYMB_3 ListStm _SYMB_4 _SYMB_44 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-14)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-14)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xright;
		lang.Absyn.ListStm p_3 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		String p_7 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.ListStm p_10 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_11 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_12 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_13xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_13xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_13 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_14xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_14xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_14 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_15xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_15xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_15 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.STryCatchFinally(p_3,p_7,p_10,p_14);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_7xleft,p_10xleft,p_14xleft);
if (leftLoc != null) {
  ((lang.Absyn.STryCatchFinally)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.STryCatchFinally)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.STryCatchFinally)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.STryCatchFinally)RESULT).line_num = -1;
  ((lang.Absyn.STryCatchFinally)RESULT).col_num = -1;
  ((lang.Absyn.STryCatchFinally)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-14)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // Stm ::= _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_2 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Block(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.Block)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.Block)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.Block)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.Block)RESULT).line_num = -1;
  ((lang.Absyn.Block)RESULT).col_num = -1;
  ((lang.Absyn.Block)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm",1, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // Item ::= Exp 
            {
              lang.Absyn.Item RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.LstItem(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.LstItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.LstItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.LstItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.LstItem)RESULT).line_num = -1;
  ((lang.Absyn.LstItem)RESULT).col_num = -1;
  ((lang.Absyn.LstItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Item",2, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // ListItem ::= 
            {
              lang.Absyn.ListItem RESULT =null;
		 RESULT = new lang.Absyn.ListItem(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // ListItem ::= Item 
            {
              lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Item p_1 = (lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListItem(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // ListItem ::= Item _SYMB_5 ListItem 
            {
              lang.Absyn.ListItem RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Item p_1 = (lang.Absyn.Item)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListItem p_3 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListItem",3, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // Stm_Initialise ::= VarType _IDENT_ _SYMB_9 Exp 
            {
              lang.Absyn.Stm_Initialise RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SInit(p_1,p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SInit)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SInit)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SInit)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SInit)RESULT).line_num = -1;
  ((lang.Absyn.SInit)RESULT).col_num = -1;
  ((lang.Absyn.SInit)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Initialise",4, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // Stm_Declare ::= VarType _IDENT_ 
            {
              lang.Absyn.Stm_Declare RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SDecl)RESULT).line_num = -1;
  ((lang.Absyn.SDecl)RESULT).col_num = -1;
  ((lang.Absyn.SDecl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Declare",5, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // Stm_Assign ::= _IDENT_ Assign_Op Exp 
            {
              lang.Absyn.Stm_Assign RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Assign_Op p_2 = (lang.Absyn.Assign_Op)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SAssign(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.SAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SAssign)RESULT).line_num = -1;
  ((lang.Absyn.SAssign)RESULT).col_num = -1;
  ((lang.Absyn.SAssign)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Assign",6, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // Stm_IncrmDecrm ::= _IDENT_ IncrmDecrm_Op 
            {
              lang.Absyn.Stm_IncrmDecrm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.IncrmDecrm_Op p_2 = (lang.Absyn.IncrmDecrm_Op)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIncrmDecrm(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIncrmDecrm)RESULT).line_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).col_num = -1;
  ((lang.Absyn.SIncrmDecrm)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_IncrmDecrm",7, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // Stm_Loop ::= _SYMB_74 Exp _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SWhile(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SWhile)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SWhile)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SWhile)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SWhile)RESULT).line_num = -1;
  ((lang.Absyn.SWhile)RESULT).col_num = -1;
  ((lang.Absyn.SWhile)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // Stm_Loop ::= _SYMB_62 _IDENT_ _SYMB_49 _IDENT_ _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_4 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopIdent(p_2,p_4,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopIdent)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // Stm_Loop ::= _SYMB_62 _IDENT_ _SYMB_49 _SYMB_7 ListItem _SYMB_8 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListItem p_5 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopList(p_2,p_5,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_5xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopList)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // Stm_Loop ::= _SYMB_62 _IDENT_ _SYMB_49 _SYMB_59 _SYMB_1 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_9 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_10 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStart(p_2,p_6,p_9);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_9xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStart)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStart)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-9)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // Stm_Loop ::= _SYMB_62 _IDENT_ _SYMB_49 _SYMB_59 _SYMB_1 Exp _SYMB_5 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_8 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_10 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_11 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_12 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStartStop(p_2,p_6,p_8,p_11);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_11xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStop)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-11)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // Stm_Loop ::= _SYMB_62 _IDENT_ _SYMB_49 _SYMB_59 _SYMB_1 Exp _SYMB_5 Exp _SYMB_5 Exp _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-13)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-13)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-12)).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-12)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-11)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-11)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-10)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-10)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-9)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-9)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		lang.Absyn.Exp p_6 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		lang.Absyn.Exp p_8 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_10xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_10xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.Exp p_10 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_11xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_11xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_11 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_12xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_12xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_12 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_13xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_13xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_13 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_14xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_14xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_14 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SPLoopRangeStartStopEnd(p_2,p_6,p_8,p_10,p_13);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_6xleft,p_8xleft,p_10xleft,p_13xleft);
if (leftLoc != null) {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).line_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).col_num = -1;
  ((lang.Absyn.SPLoopRangeStartStopEnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-13)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // Stm_Loop ::= _SYMB_62 Stm_Initialise _SYMB_5 Exp _SYMB_5 Stm_IncrmDecrm _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Stm_Initialise p_2 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Stm_IncrmDecrm p_6 = (lang.Absyn.Stm_IncrmDecrm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCLoop(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoop)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoop)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoop)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoop)RESULT).line_num = -1;
  ((lang.Absyn.SCLoop)RESULT).col_num = -1;
  ((lang.Absyn.SCLoop)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // Stm_Loop ::= _SYMB_62 Stm_Initialise _SYMB_5 Exp _SYMB_5 Stm_Assign _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Stm_Loop RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Stm_Initialise p_2 = (lang.Absyn.Stm_Initialise)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_4 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Stm_Assign p_6 = (lang.Absyn.Stm_Assign)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SCLoopAssign(p_2,p_4,p_6,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_6xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SCLoopAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SCLoopAssign)RESULT).line_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).col_num = -1;
  ((lang.Absyn.SCLoopAssign)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Stm_Loop",8, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // If_Stm ::= _SYMB_48 Exp _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIf(p_2,p_4);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIf)RESULT).line_num = -1;
  ((lang.Absyn.SIf)RESULT).col_num = -1;
  ((lang.Absyn.SIf)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-4)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // If_Stm ::= _SYMB_48 Exp _SYMB_3 ListStm _SYMB_4 _SYMB_41 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-8)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-8)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_8 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_9xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_9xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_9 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIfElse(p_2,p_4,p_8);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_8xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElse)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElse)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElse)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElse)RESULT).line_num = -1;
  ((lang.Absyn.SIfElse)RESULT).col_num = -1;
  ((lang.Absyn.SIfElse)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-8)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // If_Stm ::= _SYMB_48 Exp _SYMB_3 ListStm _SYMB_4 _SYMB_41 If_Stm 
            {
              lang.Absyn.If_Stm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.ListStm p_4 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.If_Stm p_7 = (lang.Absyn.If_Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.SIfElseIf(p_2,p_4,p_7);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft,p_4xleft,p_7xleft);
if (leftLoc != null) {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.SIfElseIf)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.SIfElseIf)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.SIfElseIf)RESULT).line_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).col_num = -1;
  ((lang.Absyn.SIfElseIf)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("If_Stm",9, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // Arg ::= VarType _IDENT_ 
            {
              lang.Absyn.Arg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_2 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ArgDecl(p_1,p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ArgDecl)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ArgDecl)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ArgDecl)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ArgDecl)RESULT).line_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).col_num = -1;
  ((lang.Absyn.ArgDecl)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Arg",10, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // ListArg ::= 
            {
              lang.Absyn.ListArg RESULT =null;
		 RESULT = new lang.Absyn.ListArg(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // ListArg ::= Arg 
            {
              lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Arg p_1 = (lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListArg(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // ListArg ::= Arg _SYMB_5 ListArg 
            {
              lang.Absyn.ListArg RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Arg p_1 = (lang.Absyn.Arg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListArg p_3 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListArg",11, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // ListStm ::= 
            {
              lang.Absyn.ListStm RESULT =null;
		 RESULT = new lang.Absyn.ListStm(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStm",12, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // ListStm ::= ListStm Stm 
            {
              lang.Absyn.ListStm RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_1 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Stm p_2 = (lang.Absyn.Stm)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; p_1.addLast(p_2); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListStm",12, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // Exp15 ::= _INTEGER_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_1 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EInt(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EInt)RESULT).line_num = -1;
  ((lang.Absyn.EInt)RESULT).col_num = -1;
  ((lang.Absyn.EInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // Exp15 ::= _SYMB_10 _INTEGER_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Integer p_2 = (Integer)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENegInt(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegInt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegInt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegInt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegInt)RESULT).line_num = -1;
  ((lang.Absyn.ENegInt)RESULT).col_num = -1;
  ((lang.Absyn.ENegInt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // Exp15 ::= _CHAR_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Character p_1 = (Character)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EChar(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EChar)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EChar)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EChar)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EChar)RESULT).line_num = -1;
  ((lang.Absyn.EChar)RESULT).col_num = -1;
  ((lang.Absyn.EChar)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // Exp15 ::= _DOUBLE_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Double p_1 = (Double)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EDouble(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDouble)RESULT).line_num = -1;
  ((lang.Absyn.EDouble)RESULT).col_num = -1;
  ((lang.Absyn.EDouble)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // Exp15 ::= _SYMB_10 _DOUBLE_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Double p_2 = (Double)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENegDouble(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENegDouble)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENegDouble)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENegDouble)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENegDouble)RESULT).line_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).col_num = -1;
  ((lang.Absyn.ENegDouble)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-1)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // Exp15 ::= _STRING_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EString(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EString)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EString)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EString)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EString)RESULT).line_num = -1;
  ((lang.Absyn.EString)RESULT).col_num = -1;
  ((lang.Absyn.EString)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // Exp15 ::= _SYMB_71 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ETrue();
((lang.Absyn.ETrue)RESULT).line_num = -1;
((lang.Absyn.ETrue)RESULT).col_num = -1;
((lang.Absyn.ETrue)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // Exp15 ::= _SYMB_42 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFalse();
((lang.Absyn.EFalse)RESULT).line_num = -1;
((lang.Absyn.EFalse)RESULT).col_num = -1;
((lang.Absyn.EFalse)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // Exp15 ::= _IDENT_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EId(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EId)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EId)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EId)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EId)RESULT).line_num = -1;
  ((lang.Absyn.EId)RESULT).col_num = -1;
  ((lang.Absyn.EId)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // Exp15 ::= _IDENT_ _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListItem(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListItem)RESULT).line_num = -1;
  ((lang.Absyn.EListItem)RESULT).col_num = -1;
  ((lang.Absyn.EListItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // Exp15 ::= _SYMB_7 ListItem _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListItem p_2 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EList(p_2);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_2xleft);
if (leftLoc != null) {
  ((lang.Absyn.EList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EList)RESULT).line_num = -1;
  ((lang.Absyn.EList)RESULT).col_num = -1;
  ((lang.Absyn.EList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // Exp15 ::= _IDENT_ _SYMB_6 _SYMB_64 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EListSize(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.EListSize)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EListSize)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EListSize)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EListSize)RESULT).line_num = -1;
  ((lang.Absyn.EListSize)RESULT).col_num = -1;
  ((lang.Absyn.EListSize)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // Exp15 ::= _SYMB_51 _SYMB_1 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EInput();
((lang.Absyn.EInput)RESULT).line_num = -1;
((lang.Absyn.EInput)RESULT).col_num = -1;
((lang.Absyn.EInput)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // Exp15 ::= Exp16 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp15",13, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // ListIdent ::= 
            {
              lang.Absyn.ListIdent RESULT =null;
		 RESULT = new lang.Absyn.ListIdent(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // ListIdent ::= _IDENT_ 
            {
              lang.Absyn.ListIdent RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListIdent(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // ListIdent ::= _IDENT_ _SYMB_5 ListIdent 
            {
              lang.Absyn.ListIdent RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListIdent p_3 = (lang.Absyn.ListIdent)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListIdent",14, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // Exp16 ::= _IDENT_ _SYMB_6 TypeCast 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.TypeCast p_3 = (lang.Absyn.TypeCast)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ETypeCast(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ETypeCast)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ETypeCast)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ETypeCast)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ETypeCast)RESULT).line_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).col_num = -1;
  ((lang.Absyn.ETypeCast)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // Exp16 ::= _SYMB_53 _SYMB_1 ListArg _SYMB_2 _SYMB_3 ListStm _SYMB_4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		lang.Absyn.ListArg p_3 = (lang.Absyn.ListArg)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListStm p_6 = (lang.Absyn.ListStm)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELambda(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELambda)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELambda)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELambda)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELambda)RESULT).line_num = -1;
  ((lang.Absyn.ELambda)RESULT).col_num = -1;
  ((lang.Absyn.ELambda)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-6)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // Exp16 ::= _SYMB_54 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMapIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapIdent)RESULT).line_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).col_num = -1;
  ((lang.Absyn.EMapIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // Exp16 ::= _SYMB_54 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMapList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMapList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMapList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMapList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMapList)RESULT).line_num = -1;
  ((lang.Absyn.EMapList)RESULT).col_num = -1;
  ((lang.Absyn.EMapList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // Exp16 ::= _SYMB_43 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFilterIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterIdent)RESULT).line_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).col_num = -1;
  ((lang.Absyn.EFilterIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // Exp16 ::= _SYMB_43 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EFilterList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EFilterList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EFilterList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EFilterList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EFilterList)RESULT).line_num = -1;
  ((lang.Absyn.EFilterList)RESULT).col_num = -1;
  ((lang.Absyn.EFilterList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // Exp16 ::= _SYMB_60 _SYMB_1 Exp _SYMB_5 _IDENT_ _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		String p_5 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EReduceIdent(p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceIdent)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceIdent)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceIdent)RESULT).line_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).col_num = -1;
  ((lang.Absyn.EReduceIdent)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // Exp16 ::= _SYMB_60 _SYMB_1 Exp _SYMB_5 _SYMB_7 ListItem _SYMB_8 _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-7)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-7)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-6)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-6)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		Object p_5 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.ListItem p_6 = (lang.Absyn.ListItem)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_7xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_7xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_7 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_8xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_8xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_8 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EReduceList(p_3,p_6);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_3xleft,p_6xleft);
if (leftLoc != null) {
  ((lang.Absyn.EReduceList)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EReduceList)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EReduceList)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EReduceList)RESULT).line_num = -1;
  ((lang.Absyn.EReduceList)RESULT).col_num = -1;
  ((lang.Absyn.EReduceList)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-7)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESelect(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelect)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelect)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelect)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelect)RESULT).line_num = -1;
  ((lang.Absyn.ESelect)RESULT).col_num = -1;
  ((lang.Absyn.ESelect)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ _SYMB_7 Exp _SYMB_8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_5 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESelectListItem(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESelectListItem)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESelectListItem)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESelectListItem)RESULT).line_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).col_num = -1;
  ((lang.Absyn.ESelectListItem)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // Exp16 ::= _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_3 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ECall(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ECall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ECall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ECall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ECall)RESULT).line_num = -1;
  ((lang.Absyn.ECall)RESULT).col_num = -1;
  ((lang.Absyn.ECall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-3)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // Exp16 ::= _IDENT_ _SYMB_6 _IDENT_ _SYMB_1 ListExp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-5)).xright;
		String p_1 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-5)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-4)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-4)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-3)).xright;
		String p_3 = (String)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-3)).value;
		Location p_4xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_4xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_4 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_5xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_5xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.ListExp p_5 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_6xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_6xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_6 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EObjCall(p_1,p_3,p_5);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft,p_5xleft);
if (leftLoc != null) {
  ((lang.Absyn.EObjCall)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EObjCall)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EObjCall)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EObjCall)RESULT).line_num = -1;
  ((lang.Absyn.EObjCall)RESULT).col_num = -1;
  ((lang.Absyn.EObjCall)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-5)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // Exp16 ::= _SYMB_1 Exp _SYMB_2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Exp p_2 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_3 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_2; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp16",15, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // Exp13 ::= Exp13 _SYMB_11 Exp14 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EPow(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EPow)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EPow)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EPow)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EPow)RESULT).line_num = -1;
  ((lang.Absyn.EPow)RESULT).col_num = -1;
  ((lang.Absyn.EPow)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp13",16, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // Exp13 ::= Exp14 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp13",16, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // Exp12 ::= Exp12 _SYMB_12 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EMul(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EMul)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EMul)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EMul)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EMul)RESULT).line_num = -1;
  ((lang.Absyn.EMul)RESULT).col_num = -1;
  ((lang.Absyn.EMul)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // Exp12 ::= Exp12 _SYMB_13 Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EDiv(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EDiv)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EDiv)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EDiv)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EDiv)RESULT).line_num = -1;
  ((lang.Absyn.EDiv)RESULT).col_num = -1;
  ((lang.Absyn.EDiv)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // Exp12 ::= Exp13 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp12",17, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // Exp11 ::= Exp11 _SYMB_14 Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EAdd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAdd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAdd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAdd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAdd)RESULT).line_num = -1;
  ((lang.Absyn.EAdd)RESULT).col_num = -1;
  ((lang.Absyn.EAdd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // Exp11 ::= Exp11 _SYMB_10 Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ESub(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ESub)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ESub)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ESub)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ESub)RESULT).line_num = -1;
  ((lang.Absyn.ESub)RESULT).col_num = -1;
  ((lang.Absyn.ESub)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // Exp11 ::= Exp12 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp11",18, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // Exp9 ::= Exp9 _SYMB_15 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELt)RESULT).line_num = -1;
  ((lang.Absyn.ELt)RESULT).col_num = -1;
  ((lang.Absyn.ELt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // Exp9 ::= Exp9 _SYMB_16 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EGt(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGt)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGt)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGt)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGt)RESULT).line_num = -1;
  ((lang.Absyn.EGt)RESULT).col_num = -1;
  ((lang.Absyn.EGt)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // Exp9 ::= Exp9 _SYMB_17 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ELEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ELEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ELEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ELEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ELEq)RESULT).line_num = -1;
  ((lang.Absyn.ELEq)RESULT).col_num = -1;
  ((lang.Absyn.ELEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // Exp9 ::= Exp9 _SYMB_18 Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EGEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EGEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EGEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EGEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EGEq)RESULT).line_num = -1;
  ((lang.Absyn.EGEq)RESULT).col_num = -1;
  ((lang.Absyn.EGEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // Exp9 ::= Exp10 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp9",19, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // Exp8 ::= Exp8 _SYMB_19 Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EEq)RESULT).line_num = -1;
  ((lang.Absyn.EEq)RESULT).col_num = -1;
  ((lang.Absyn.EEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // Exp8 ::= Exp8 _SYMB_20 Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ENEq(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.ENEq)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.ENEq)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.ENEq)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.ENEq)RESULT).line_num = -1;
  ((lang.Absyn.ENEq)RESULT).col_num = -1;
  ((lang.Absyn.ENEq)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // Exp8 ::= Exp9 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp8",20, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // Exp4 ::= Exp4 _SYMB_28 Exp5 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EAnd(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAnd)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAnd)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAnd)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAnd)RESULT).line_num = -1;
  ((lang.Absyn.EAnd)RESULT).col_num = -1;
  ((lang.Absyn.EAnd)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // Exp4 ::= Exp5 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp4",21, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // Exp3 ::= Exp3 _SYMB_29 Exp4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EOr(p_1,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EOr)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EOr)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EOr)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EOr)RESULT).line_num = -1;
  ((lang.Absyn.EOr)RESULT).col_num = -1;
  ((lang.Absyn.EOr)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp3",22, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // Exp3 ::= Exp4 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp3",22, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // Exp2 ::= Exp3 Assign_Op Exp2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		lang.Absyn.Assign_Op p_2 = (lang.Absyn.Assign_Op)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_3 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.EAssign(p_1,p_2,p_3);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft,p_2xleft,p_3xleft);
if (leftLoc != null) {
  ((lang.Absyn.EAssign)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.EAssign)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.EAssign)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.EAssign)RESULT).line_num = -1;
  ((lang.Absyn.EAssign)RESULT).col_num = -1;
  ((lang.Absyn.EAssign)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp2",23, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // Exp2 ::= Exp3 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp2",23, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // Assign_Op ::= _SYMB_9 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Assign();
((lang.Absyn.Assign)RESULT).line_num = -1;
((lang.Absyn.Assign)RESULT).col_num = -1;
((lang.Absyn.Assign)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // Assign_Op ::= _SYMB_21 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignMul();
((lang.Absyn.AssignMul)RESULT).line_num = -1;
((lang.Absyn.AssignMul)RESULT).col_num = -1;
((lang.Absyn.AssignMul)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // Assign_Op ::= _SYMB_22 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignDiv();
((lang.Absyn.AssignDiv)RESULT).line_num = -1;
((lang.Absyn.AssignDiv)RESULT).col_num = -1;
((lang.Absyn.AssignDiv)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // Assign_Op ::= _SYMB_23 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignMod();
((lang.Absyn.AssignMod)RESULT).line_num = -1;
((lang.Absyn.AssignMod)RESULT).col_num = -1;
((lang.Absyn.AssignMod)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // Assign_Op ::= _SYMB_24 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignAdd();
((lang.Absyn.AssignAdd)RESULT).line_num = -1;
((lang.Absyn.AssignAdd)RESULT).col_num = -1;
((lang.Absyn.AssignAdd)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // Assign_Op ::= _SYMB_25 
            {
              lang.Absyn.Assign_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.AssignSub();
((lang.Absyn.AssignSub)RESULT).line_num = -1;
((lang.Absyn.AssignSub)RESULT).col_num = -1;
((lang.Absyn.AssignSub)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Assign_Op",24, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // IncrmDecrm_Op ::= _SYMB_26 
            {
              lang.Absyn.IncrmDecrm_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Increment();
((lang.Absyn.Increment)RESULT).line_num = -1;
((lang.Absyn.Increment)RESULT).col_num = -1;
((lang.Absyn.Increment)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IncrmDecrm_Op",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // IncrmDecrm_Op ::= _SYMB_27 
            {
              lang.Absyn.IncrmDecrm_Op RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.Decrement();
((lang.Absyn.Decrement)RESULT).line_num = -1;
((lang.Absyn.Decrement)RESULT).col_num = -1;
((lang.Absyn.Decrement)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("IncrmDecrm_Op",25, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // Exp ::= Exp1 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp",26, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // Exp1 ::= Exp2 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp1",27, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // Exp5 ::= Exp6 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp5",28, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // Exp6 ::= Exp7 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp6",29, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // Exp7 ::= Exp8 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp7",30, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // Exp10 ::= Exp11 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp10",31, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // Exp14 ::= Exp15 
            {
              lang.Absyn.Exp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("Exp14",32, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // ListExp ::= 
            {
              lang.Absyn.ListExp RESULT =null;
		 RESULT = new lang.Absyn.ListExp(); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // ListExp ::= Exp 
            {
              lang.Absyn.ListExp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.ListExp(); RESULT.addLast(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // ListExp ::= Exp _SYMB_5 ListExp 
            {
              lang.Absyn.ListExp RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-2)).xright;
		lang.Absyn.Exp p_1 = (lang.Absyn.Exp)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-2)).value;
		Location p_2xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xleft;
		Location p_2xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.elementAt(CUP$parser$top-1)).xright;
		Object p_2 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.elementAt(CUP$parser$top-1)).value;
		Location p_3xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_3xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.ListExp p_3 = (lang.Absyn.ListExp)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = p_3; p_3.addFirst(p_1); 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("ListExp",33, ((java_cup.runtime.Symbol)CUP$parser$stack.elementAt(CUP$parser$top-2)), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // FuncType ::= _SYMB_73 
            {
              lang.Absyn.FuncType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.FuncType_void();
((lang.Absyn.FuncType_void)RESULT).line_num = -1;
((lang.Absyn.FuncType_void)RESULT).col_num = -1;
((lang.Absyn.FuncType_void)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FuncType",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // FuncType ::= VarType 
            {
              lang.Absyn.FuncType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		lang.Absyn.VarType p_1 = (lang.Absyn.VarType)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.FuncTypeVarType(p_1);
java_cup.runtime.ComplexSymbolFactory.Location leftLoc = getLeftLocation(p_1xleft);
if (leftLoc != null) {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = leftLoc.getLine();
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = leftLoc.getColumn();
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = leftLoc.getOffset();
} else {
  ((lang.Absyn.FuncTypeVarType)RESULT).line_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).col_num = -1;
  ((lang.Absyn.FuncTypeVarType)RESULT).offset = -1;
} 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("FuncType",34, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // VarType ::= _SYMB_52 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_int();
((lang.Absyn.VarType_int)RESULT).line_num = -1;
((lang.Absyn.VarType_int)RESULT).col_num = -1;
((lang.Absyn.VarType_int)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // VarType ::= _SYMB_40 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_double();
((lang.Absyn.VarType_double)RESULT).line_num = -1;
((lang.Absyn.VarType_double)RESULT).col_num = -1;
((lang.Absyn.VarType_double)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // VarType ::= _SYMB_32 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_bool();
((lang.Absyn.VarType_bool)RESULT).line_num = -1;
((lang.Absyn.VarType_bool)RESULT).col_num = -1;
((lang.Absyn.VarType_bool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // VarType ::= _SYMB_35 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_char();
((lang.Absyn.VarType_char)RESULT).line_num = -1;
((lang.Absyn.VarType_char)RESULT).col_num = -1;
((lang.Absyn.VarType_char)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // VarType ::= _SYMB_65 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_string();
((lang.Absyn.VarType_string)RESULT).line_num = -1;
((lang.Absyn.VarType_string)RESULT).col_num = -1;
((lang.Absyn.VarType_string)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // VarType ::= _SYMB_31 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_auto();
((lang.Absyn.VarType_auto)RESULT).line_num = -1;
((lang.Absyn.VarType_auto)RESULT).col_num = -1;
((lang.Absyn.VarType_auto)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // VarType ::= _SYMB_45 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_func();
((lang.Absyn.VarType_func)RESULT).line_num = -1;
((lang.Absyn.VarType_func)RESULT).col_num = -1;
((lang.Absyn.VarType_func)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // VarType ::= _SYMB_56 
            {
              lang.Absyn.VarType RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.VarType_object();
((lang.Absyn.VarType_object)RESULT).line_num = -1;
((lang.Absyn.VarType_object)RESULT).col_num = -1;
((lang.Absyn.VarType_object)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("VarType",35, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 129: // TypeCast ::= _SYMB_69 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toInt();
((lang.Absyn.TypeCast_toInt)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toInt)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 130: // TypeCast ::= _SYMB_68 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toDouble();
((lang.Absyn.TypeCast_toDouble)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toDouble)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 131: // TypeCast ::= _SYMB_66 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toBool();
((lang.Absyn.TypeCast_toBool)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toBool)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 132: // TypeCast ::= _SYMB_67 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toChar();
((lang.Absyn.TypeCast_toChar)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toChar)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 133: // TypeCast ::= _SYMB_70 
            {
              lang.Absyn.TypeCast RESULT =null;
		Location p_1xleft = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xleft;
		Location p_1xright = ((java_cup.runtime.ComplexSymbolFactory.ComplexSymbol)CUP$parser$stack.peek()).xright;
		Object p_1 = (Object)((java_cup.runtime.Symbol) CUP$parser$stack.peek()).value;
		 RESULT = new lang.Absyn.TypeCast_toString();
((lang.Absyn.TypeCast_toString)RESULT).line_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).col_num = -1;
((lang.Absyn.TypeCast_toString)RESULT).offset = -1; 
              CUP$parser$result = parser.getSymbolFactory().newSymbol("TypeCast",36, ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), ((java_cup.runtime.Symbol)CUP$parser$stack.peek()), RESULT);
            }
          return CUP$parser$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number "+CUP$parser$act_num+"found in internal parse table");

        }
    } /* end of method */

  /** Method splitting the generated action code into several parts. */
  public final java_cup.runtime.Symbol CUP$parser$do_action(
    int                        CUP$parser$act_num,
    java_cup.runtime.lr_parser CUP$parser$parser,
    java.util.Stack            CUP$parser$stack,
    int                        CUP$parser$top)
    throws java.lang.Exception
    {
              return CUP$parser$do_action_part00000000(
                               CUP$parser$act_num,
                               CUP$parser$parser,
                               CUP$parser$stack,
                               CUP$parser$top);
    }
}

}
